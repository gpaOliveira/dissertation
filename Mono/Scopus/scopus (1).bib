
@ARTICLE{Lei201759,
author={Lei, H. and Ganjeizadeh, F. and Jayachandran, P.K. and Ozcan, P.},
title={A statistical analysis of the effects of Scrum and Kanban on software development projects},
journal={Robotics and Computer-Integrated Manufacturing},
year={2017},
volume={43},
pages={59-67},
doi={10.1016/j.rcim.2015.12.001},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975496403&doi=10.1016%2fj.rcim.2015.12.001&partnerID=40&md5=eaa51cf3696cc8678ef2e458736d5d96},
abstract={Traditionally, software development processes have relied on the use of the “Waterfall” and “Vee” models. Later, Agile methodologies were used to handle the challenges of managing complex projects during the development phase. Agile methodologies are a group of incremental and iterative methods that are more effective, and have been used in project management. Kanban and Scrum are two powerful Agile project management approaches in software development. The objective of Scrum and Kanban is achieved by optimizing the development process by identifying the tasks, managing time more effectively, and setting-up teams. A review of the literature reveals that there is a lack of statistical evidence to conclude which methodology is more effective in dealing with the traditional project management factors of budget handling, risk control, quality of the project, available resources, having clear project scope, and schedule handling. This research statistically compares the effectiveness of the Scrum and Kanban methods in terms of their effects on the project management factors for software development projects. Numerical analysis is performed based on survey responses from those with experience in the Scrum and Kanban methods. Results suggest that both Scrum and Kanban lead to the development of successful projects, and that the Kanban method can be better than the Scrum method in terms of managing project schedule. © 2015 Elsevier Ltd},
author_keywords={Agile movement;  Kanban methodology;  Project management factors for software development;  Scrum methodology},
keywords={Budget control;  Iterative methods;  Numerical methods;  Project management;  Quality control;  Research and development management;  Software engineering, Agile Methodologies;  Agile movement;  Agile project management;  Kanban methodology;  Scrum methodologies;  Software development process;  Software development projects;  Statistical evidence, Software design},
}

@ARTICLE{Gren2017104,
author={Gren, L. and Torkar, R. and Feldt, R.},
title={Group development and group maturity when building agile teams: A qualitative and quantitative investigation at eight large companies},
journal={Journal of Systems and Software},
year={2017},
volume={124},
pages={104-119},
doi={10.1016/j.jss.2016.11.024},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84996563490&doi=10.1016%2fj.jss.2016.11.024&partnerID=40&md5=081cb4cf2c4c18acf2c1bba448ab998d},
abstract={The agile approach to projects focuses more on close-knit teams than traditional waterfall projects, which means that aspects of group maturity become even more important. This psychological aspect is not much researched in connection to the building of an “agile team.” The purpose of this study is to investigate how building agile teams is connected to a group development model taken from social psychology. We conducted ten semi-structured interviews with coaches, Scrum Masters, and managers responsible for the agile process from seven different companies, and collected survey data from 66 group-members from four companies (a total of eight different companies). The survey included an agile measurement tool and the one part of the Group Development Questionnaire. The results show that the practitioners define group developmental aspects as key factors to a successful agile transition. Also, the quantitative measurement of agility was significantly correlated to the group maturity measurement. We conclude that adding these psychological aspects to the description of the “agile team” could increase the understanding of agility and partly help define an “agile team.” We propose that future work should develop specific guidelines for how software development teams at different maturity levels might adopt agile principles and practices differently. © 2016 Elsevier Inc.},
author_keywords={Agile processes;  Empirical study;  Group psychology;  Maturity;  Measurement},
keywords={Measurements;  Software design;  Surveys, Agile process;  Empirical studies;  Group psychology;  Maturity;  Quantitative investigation;  Quantitative measurement;  Semi structured interviews;  Software development teams, Software engineering},
}

@ARTICLE{Heikkilä20171,
author={Heikkilä, V.T. and Paasivaara, M. and Lasssenius, C. and Damian, D. and Engblom, C.},
title={Managing the requirements flow from strategy to release in large-scale agile development: a case study at Ericsson},
journal={Empirical Software Engineering},
year={2017},
pages={1-45},
doi={10.1007/s10664-016-9491-z},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009188417&doi=10.1007%2fs10664-016-9491-z&partnerID=40&md5=416b03be9a0e50212ddefdd4cfd86b3a},
abstract={In a large organization, informal communication and simple backlogs are not sufficient for the management of requirements and development work. Many large organizations are struggling to successfully adopt agile methods, but there is still little scientific knowledge on requirements management in large-scale agile development organizations. We present an in-depth study of an Ericsson telecommunications node development organization which employs a large scale agile method to develop telecommunications system software. We describe how the requirements flow from strategy to release, and related benefits and problems. Data was collected by 43 interviews, which were analyzed qualitatively. The requirements management was done in three different processes, each of which had a different process model, purpose and planning horizon. The release project management process was plan-driven, feature development process was continuous and implementation management process was agile. The perceived benefits included reduced development lead time, increased flexibility, increased planning efficiency, increased developer motivation and improved communication effectiveness. The recognized problems included difficulties in balancing planning effort, overcommitment, insufficient understanding of the development team autonomy, defining the product owner role, balancing team specialization, organizing system-level work and growing technical debt. The study indicates that agile development methods can be successfully employed in organizations where the higher level planning processes are not agile. Combining agile methods with a flexible feature development process can bring many benefits, but large-scale software development seems to require specialist roles and significant coordination effort. © 2016 The Author(s)},
author_keywords={Large projects;  Requirements management;  Scaling agile software development;  Scrum;  Telecommunications software},
keywords={Agile manufacturing systems;  Project management;  Requirements engineering;  Societies and institutions;  Software engineering, Agile development organization;  Agile software development;  Communication effectiveness;  Implementation managements;  Large project;  Project management process;  Requirements management;  Scrum, Software design},
}

@ARTICLE{Alsaadi20171,
author={Alsaadi, M. and Qasaimeh, M. and Tedmori, S. and Almakadmeh, K.},
title={HIPAA security and privacy rules auditing in extreme programming environments},
journal={International Journal of Information Systems in the Service Sector},
year={2017},
volume={9},
number={1},
pages={1-21},
doi={10.4018/IJISSS.2017010101},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989201967&doi=10.4018%2fIJISSS.2017010101&partnerID=40&md5=041ef2837a6125282d4839998d3cd510},
abstract={Healthcare business is responsible of keeping patient data safe and secure by following the rules of the federal Health Insurance Portability and Accountability Act of 1996, (HIPAA). Agile software organizations that deal with healthcare software system face a number of challenges to demonstrate that their process activities conform to the rules of HIPAA. Such organizations must establish a software process life cycle and develop procedures, tools, and methodologies that can manage the HIPAA requirements during the different stages of system development, and also must provide evidences of HIPAA conformity. This paper proposes an auditing model for HIPAA security and privacy rules in XP environments. The design of the proposed model is based on an evaluation theory which takes as its input the work of Lopez ATAM, and the standards of common criteria (CC) concepts. The proposed auditing model has been assessed based on four case studies. The auditing result shows that the proposed model is capable of capturing the auditing evidences in most of the selected case studies. © Copyright 2017, IGI Global.},
author_keywords={Agile Software Auditing;  Extreme Programming;  HIPAA Compliance Model;  Software Process Improvement},
}

@ARTICLE{Palomino201757,
author={Palomino, M. and Dávila, A. and Melendez, K. and Pessoa, M.},
title={Agile practices adoption in CMMI organizations: A systematic literature review},
journal={Advances in Intelligent Systems and Computing},
year={2017},
volume={537},
pages={57-67},
doi={10.1007/978-3-319-48523-2_6},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992455483&doi=10.1007%2f978-3-319-48523-2_6&partnerID=40&md5=7f43864cdc9b20de5f259c7c30fb31ef},
abstract={In the recent years, the adoption of agile frameworks and methodologies in Software Development Organizations (SDO) has grown up considerably. Unfortunately, there are scenarios where agile practices can’t cover alone all the needs; for instance, software projects with a large level of required formal documentation or large, complex software projects; similarly, this kind of situations happen frequently in a context of CMMI organizations. The aim of this study is identify and analyze the most used agile practices that are used in combination with CMMI within SDO. To accomplish this, a systematic literature review has been performed according to relevant guidelines. This study has identified practices related Daily Meeting and Product Backlog management from Scrum framework as most common agile practices used in combination with CMMI. In addition, we could identify that there are specific benefits of implementing practices from both approaches. © Springer International Publishing AG 2017.},
author_keywords={Agile practice;  Agile software development;  CMMI},
keywords={Application programs;  Societies and institutions;  Software engineering, Agile practices;  Agile software development;  CMMI;  Complex software;  Formal documentation;  Software development organizations;  Software project;  Systematic literature review, Software design},
}

@CONFERENCE{Basri2016380,
author={Basri, S. and Kama, N. and Haneem, F. and Ismail, S.A.},
title={Predicting effort for requirement changes during software development},
journal={ACM International Conference Proceeding Series},
year={2016},
volume={08-09-December-2016},
pages={380-387},
doi={10.1145/3011077.3011096},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007560310&doi=10.1145%2f3011077.3011096&partnerID=40&md5=71a31a4c59af54efaed1d54ef4f932a8},
abstract={In any software development life cycle, requirement and software changes are inevitable. One of the factors that influences the effectiveness of the change acceptance decision is the accuracy of the effort prediction for requirement changes. There are two current models that have been widely used to predict rework effort for requirement changes which are algorithmic and nonalgorithmic models. The algorithmic model is known for its formal and structural way of prediction and best suited for Traditional software development methodology. While nonalgorithmic model is widely adopted for Agile software development methodology of software projects due to its easiness and requires less work in term of effort predictability. Nevertheless, none of the existing effort prediction models for requirement changes are proven to suit both, Traditional and Agile software development methodology. Thus, this paper proposes an algorithmic-based effort prediction model for requirement changes that uses change impact analysis method which is applicable for both Traditional and Agile software development methodologies. The proposed model uses a current selected change impact analysis method for software development phase. The proposed model is evaluated through an extensive experimental validation using case study of six real Traditional and Agile methodologies software projects. The evaluation results confirmed a significance accuracy improvement of the proposed model over the existing approaches for both Traditional and Agile methodologies. © 2016 ACM.},
author_keywords={Change Effort Estimation;  Change Impact Analysis;  Effort Estimation;  Impact Analysis},
keywords={Computer software;  Forecasting;  Formal methods;  Life cycle;  Object oriented programming;  Software engineering, Agile software development;  Change efforts;  Change impact analysis;  Effort Estimation;  Experimental validations;  Impact analysis;  Software development life cycle;  Software development methodologies, Software design},
}

@CONFERENCE{Furtado201666,
author={Furtado, F. and Zisman, A.},
title={Trace++: A Traceability Approach to Support Transitioning to Agile Software Engineering},
journal={Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016},
year={2016},
pages={66-75},
doi={10.1109/RE.2016.47},
art_number={7765512},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007271071&doi=10.1109%2fRE.2016.47&partnerID=40&md5=c4ed84ebf1d772083cbb6499247e2ca1},
abstract={Agile methodologies have been introduced as an alternative to traditional software engineering methodologies. However, despite the advantages of using agile methodologies, the transition between traditional and agile methodologies is not an easy task. There are several problems associated with the use of agile methodologies. Examples of these problems are related to (i) lack of metrics to measure the amount of rework that occurs per sprint, (ii) interruption of a project after several iterations, (iii) changes in the requirements, (iv) lack of documentation, and (v) lack of management control. In this paper we present Trace++, a traceability technique that extends traditional traceability relationships with extra information in order to support the transition between traditional and agile software development. The use of Trace++ has been evaluated in two real projects of different software development companies to measure the benefits of using Trace++ to support agile software development. © 2016 IEEE.},
author_keywords={agile methods;  hybrid process;  Traceability},
keywords={Requirements engineering;  Software design, Agile methods;  Agile software development;  Agile software engineering;  Hybrid process;  Software engineering methodologies;  Support agile software development;  Traceability;  Traceability techniques, Software engineering},
}

@CONFERENCE{Furfaro2016246,
author={Furfaro, A. and Gallo, T. and Garro, A. and Saccà, D. and Tundis, A.},
title={ResDevOps: A Software Engineering Framework for Achieving Long-Lasting Complex Systems},
journal={Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016},
year={2016},
pages={246-255},
doi={10.1109/RE.2016.15},
art_number={7765530},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007188891&doi=10.1109%2fRE.2016.15&partnerID=40&md5=cd6dbaaebf77916b97102a0b3756b0ec},
abstract={The development of high quality complex software systems and quick time-to-market with full customer satisfaction often appear as two competing forces. Many industry efforts have been directed towards agile methodologies completed with the DevOps approach, whereas traditional requirements engineering with much documentation, is considered surpassed. The aim is to obtain a longer life software because it suddenly responds to the customers changing requirements from which it receives continuous input. This might create a serious cost implication and a real risk to lose system requirements control. In this paper, we propose a framework able to govern the complexity of the system requirements and to allow the embedding, occasionally, of technological innovations into the overall system. ResDevOps joins the value of the agile world with DevOps, with the additional value deriving from an unceasing parallel innovation management process, which we call ResDevs. ResDevOps includes a continuous research and innovation process, which provides an asynchronous, additional input to the agile process inside a chain of concurrent engineering collaboration. This is a suitable trade-off to maintain modern IT Systems live for a longer time, with many consequent advantages for both total investment and system quality. The practical use of the ResDevOps approach is shown by means of a case study. © 2016 IEEE.},
author_keywords={Concurrent Software Engineering;  Enterprise Information Systems;  Goal-Oriented Methodologies;  Requirements Engineering;  Software Development Methodologies},
keywords={Concurrency control;  Concurrent engineering;  Customer satisfaction;  Economic and social effects;  Information systems;  Investments;  Requirements engineering;  Software design;  Software engineering, Complex software systems;  Engineering frameworks;  Enterprise information system;  Goal oriented methodologies;  Innovation management;  Software development methodologies;  System requirements;  Technological innovation, Agile manufacturing systems},
}

@ARTICLE{Kayes2016303,
author={Kayes, I. and Sarker, M. and Chakareski, J.},
title={Product backlog rating: a case study on measuring test quality in scrum},
journal={Innovations in Systems and Software Engineering},
year={2016},
volume={12},
number={4},
pages={303-317},
doi={10.1007/s11334-016-0271-0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957689430&doi=10.1007%2fs11334-016-0271-0&partnerID=40&md5=256311a5ccc503ae393198d27e41e73a},
abstract={Agile software development methodologies focus on software projects which are behind schedule or highly likely to have a problematic development phase. In the last decade, Agile methods have transformed from cult techniques to mainstream methodologies. Scrum, an Agile software development method, has been widely adopted due to its adaptive nature. This paper presents a metric that measures the quality of the testing process in a Scrum process. As product quality and process quality correlate, improved test quality can ensure high-quality products. Also, gaining experience from 8 years of successful Scrum implementation at SoftwarePeople, we describe the Scrum process emphasizing the testing process. We propose a metric Product Backlog Rating (PBR) to assess the testing process in Scrum. PBR considers the complexity of the features to be developed in an iteration of Scrum, assesses test ratings and offers a numerical score of the testing process. This metric is able to provide a comprehensive overview of the testing process over the development cycle of a product. We present a case study which shows how the metric is used at SoftwarePeople. The case study explains some features that have been developed in a Sprint in terms of feature complexity and potential test assessment difficulties and shows how PBR is calculated during the Sprint. We propose a test process assessment metric that provides insights into the Scrum testing process. However, the metric needs further evaluation considering associated resources (e.g., quality assurance engineers, the length of the Scrum cycle). © 2016, Springer-Verlag London.},
keywords={Iterative methods;  Quality assurance;  Software engineering;  Testing, Adaptive natures;  Agile software development;  Development cycle;  Development phase;  High-quality products;  Process quality;  Software project;  Testing process, Software design},
}

@CONFERENCE{Maxim2016,
author={Maxim, B.R. and Kaur, R. and Apzynski, C. and Edwards, D. and Evans, E.},
title={An agile software engineering process improvement game},
journal={Proceedings - Frontiers in Education Conference, FIE},
year={2016},
volume={2016-November},
doi={10.1109/FIE.2016.7757682},
art_number={7757682},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006795686&doi=10.1109%2fFIE.2016.7757682&partnerID=40&md5=2ea1eeab3a1312e3bf3e0538d6e05d32},
abstract={Many computing students do not receive adequate training in software quality management. Some students do not have the opportunity to practice software process improvement activities even if they do see the topics covered in their course lectures and textbooks. Serious games are gaining popularity as a means of instruction in higher education. Some excellent prescriptive software process simulation games have been created, as well as a few software engineering drill and practice games. In general, these games do not allow students to create agile process models or experiment with process improvement strategies. We are creating a serious game that will serve as a virtual learning environment to allow students to explore agile process improvement practices. Our game is designed as a single-player game where the player takes the role of software team leader and plays against an AI (artificial intelligence) opponent representing the customer's interests and needs. Players are rewarded for developing project strategies that allow for completion of projects on time, within budget, and meet the necessary software quality requirements. It is our intention to create a game with sufficiently detailed instructions to allow instructors to introduce hands on practice with agile process improvement activities without requiring additional class time. © 2016 IEEE.},
author_keywords={Agile;  Gaming;  Process improvement;  Scrum},
keywords={Budget control;  Computer aided instruction;  Computer aided software engineering;  Computer software;  Computer software selection and evaluation;  Education;  Process engineering;  Quality management;  Software engineering;  Students, Agile;  Gaming;  Process Improvement;  Scrum;  Software Process Improvement;  Software process simulation;  Software quality management;  Virtual learning environments, Education computing},
}

@CONFERENCE{Malhotra20161271,
author={Malhotra, R. and Chug, A.},
title={Comparative analysis of agile methods and iterative enhancement model in assessment of software maintenance},
journal={Proceedings of the 10th INDIACom; 2016 3rd International Conference on Computing for Sustainable Global Development, INDIACom 2016},
year={2016},
pages={1271-1276},
art_number={7724470},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84997294989&partnerID=40&md5=c1a8f351fed28a43d3e32ffa8663728b},
abstract={The software industry is moving swiftly towards agile methodology to ensure quality, reliability and scalability of software products delivered since it provides alternatives to the traditional project management techniques. Moreover, the agile approach also helps in business to address the problem of unpredictability. Scrum is the most commonly used agile method applied to the projects having fast changing requirements. Development in this method is implemented through a series of iterations known as sprints. The current study provides insight into the impact of the agile framework using Scrum on the deliverables as compared to the Iterative Enhancement Model (IEM). In this study, same product is developed using Scrum methods as well as IEM Method and various metrics were used to compare both the products such as the stage of software development life cycle (SDLC) when the defect was identified, number of defects identified, time when the defects were identified, number of change requests received, time when the error got detected and the features rolled out using both methods. All these metrics are carefully selected as they are significant while analyzing the maintainability of any given software. It clearly emerges that agile methodology encourages better planning due to the customer involvement thus more amenable to accommodate the desired changes easily. Agile methodology is also beneficial as it overtly emphasizes on highly interactive and frequent communication between developers and customers. This method also ensures dynamic development and facilitates quick delivery with a scope of continuous enhancement because the product is very flexible in nature. Defects are identified at early stages of SDLC thereby avoiding any cost overrun. © 2016 IEEE.},
author_keywords={Agile Methodology;  Iterative Enhancement Model;  Scrum;  Software Development Life Cycle (SDLC);  Software Maintenance},
keywords={Computer software;  Computer software maintenance;  Defects;  Life cycle;  Project management;  Software design;  Software engineering;  Software reliability, Agile Methodologies;  Comparative analysis;  Dynamic development;  Iterative enhancement;  Management techniques;  Scrum;  Software development life cycle;  Software products, Iterative methods},
}

@CONFERENCE{Jain20161177,
author={Jain, P. and Ahuja, L. and Sharma, A.},
title={Current state of the research in agile quality development},
journal={Proceedings of the 10th INDIACom; 2016 3rd International Conference on Computing for Sustainable Global Development, INDIACom 2016},
year={2016},
pages={1177-1179},
art_number={7724451},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84997418724&partnerID=40&md5=c46ab748d48f72344675ee8c6f7714b9},
abstract={With the changing trends in software development methodologies since 1990's the focus is more on iterative incremental approaches for software development. One of such approach is 'Agile Approach' also named as lightweight model for development. Agile is more about communication and collaboration between team members working on software project. For good quality software it's important to select the appropriate model for the development of software. Another factor that is important to be considered while model selection is that in what respect quality gets better if we choose either traditional or agile approach. Quality assurance techniques for traditional heavy weight development rely on inspections, reviews made at end whereas quality assurance techniques for agile light weight development rely on routine activities by teams. This paper aims to review various success factors of agile software development and various challenges faced in terms of assuring quality in agile. © 2016 IEEE.},
author_keywords={Agile Methodology;  Agile Software Development;  Assuring Quality of development process;  Critical Success Factors;  Quality Assurance (QA);  Traditional Software Development},
keywords={Iterative methods;  Quality assurance;  Software engineering, Agile Methodologies;  Agile software development;  Appropriate models;  Communication and collaborations;  Critical success factor;  Development process;  Incremental approach;  Software development methodologies, Software design},
}

@ARTICLE{Gil201628,
author={Gil, C. and Diaz, J. and Orozco, M. and de la Hoz, A. and de la Hoz, E. and Morales, R.},
title={Agile testing practices in software quality: State of the art review},
journal={Journal of Theoretical and Applied Information Technology},
year={2016},
volume={92},
number={1},
pages={28-36},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991594262&partnerID=40&md5=e225d0b3215f3cd845af63a794edebe5},
abstract={In this paper you can find a review of articles related to agile testing practices in software quality, looking for theoretical information and real cases applied to testing inside a modern context, comparing them with the standard procedures taking into account their advantages and relevant features. As final result, we determine that agile practices in software quality have wide acceptance and many companies have chosen their use for all their benefits and impact on development software processes in several real applications, not necessarily IT governance ones, since other kind of technical applications have shown excellent results on testing. © 2005 - 2016 JATIT & LLS. All rights reserved.},
author_keywords={Agile testing software;  Automation test software;  Behavior driven development test software;  Kanban agile testing software;  Scrum agile testing software;  Test driven development agile test software},
}

@CONFERENCE{Jha201684,
author={Jha, M.M. and Vilardell, R.M.F. and Narayan, J.},
title={Scaling agile scrum software development: Providing agility and quality to platform development by reducing time to market},
journal={Proceedings - 11th IEEE International Conference on Global Software Engineering, ICGSE 2016},
year={2016},
pages={84-88},
doi={10.1109/ICGSE.2016.24},
art_number={7577423},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994607952&doi=10.1109%2fICGSE.2016.24&partnerID=40&md5=5db9e1e092c42e580f72865f3c67edea},
abstract={Agile software development approach aims at overcoming the limitations of plan-driven software development by allowing requirement changes during all phases of product development and providing agility to organization to respond to changing market needs. Software organizations have successfully implemented agile scrum in distributed software development. However, they also encountered many challenges while implementation which led to considerable amount of effort spend just to manage work. Difficulties were primarily in the areas of communication, culture, different time zones, different level of domain know how across scrum teams, and knowledge management. In this practice paper, we will share practices and systems implemented, challenges encountered along with their countermeasures, and lessons learnt in successfully scaling the Agile Scrum development to 16 globally distributed scrum teams with 100+ team members, successfully delivering 2000+ user stories which required execution of 3000+ product test cases and 1000+ system test cases for verification and validation in a single version of platform release Providing Agility and Quality to Platform Development by Reducing Time to Market. © 2016 IEEE.},
author_keywords={Agile Scrum;  Agile Software Development;  Distributed Software Development;  Scaling Scrum},
keywords={Agile manufacturing systems;  Commerce;  Concurrent engineering;  Human resource management;  Knowledge management;  Software engineering;  Technology transfer, Agile Scrum;  Agile software development;  Distributed scrums;  Distributed software development;  Platform development;  Scaling scrums;  Software organization;  Verification-and-validation, Software design},
}

@CONFERENCE{Hsieh2016,
author={Hsieh, C.-Y. and Hsieh, H.-A. and Cheng, Y.C.},
title={A method for web application data migration based on RESTful API: A case study of ezScrum},
journal={2016 International Conference on Applied System Innovation, IEEE ICASI 2016},
year={2016},
doi={10.1109/ICASI.2016.7539825},
art_number={7539825},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988535372&doi=10.1109%2fICASI.2016.7539825&partnerID=40&md5=e7af0aeefec2f04e3b7af355202f3ed2},
abstract={As a web application evolves, it tends to adopt a mixture of different ways of storing persistent data. This often discourages users from upgrading from an older version to a newer version if the data schemas are different. To tackle this problem, we have developed a RESTful API-based data migration method for embedding ETL (extract-translate-load) features into web applications. The proposed RESTful API-based method has been applied to migrating data for ezScrum, a web application for Scrum support. © 2016 IEEE.},
author_keywords={data migration;  ETL;  RESTful API);  Web Application},
keywords={World Wide Web, Data migration;  Restful api;  WEB application, Application programming interfaces (API)},
}

@CONFERENCE{Hincapie2016,
author={Hincapie, J.A. and Gasca-Hurtado, G.P. and Bustamante, A.F.},
title={Multimodel catalogue heuristics for software project managemet [Heurísticas de un Catálogo Multi-modelo para Gestión de Proyectos Software]},
journal={Iberian Conference on Information Systems and Technologies, CISTI},
year={2016},
volume={2016-July},
doi={10.1109/CISTI.2016.7521395},
art_number={7521395},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982095872&doi=10.1109%2fCISTI.2016.7521395&partnerID=40&md5=0f1a14e93795908baa6e0d475114c980},
abstract={Software development projects can be managed using traditional or agile frameworks. Combining these two approaches into a multi-model environment may help to include best practices from both frameworks, considering project management key factors. However, the implementation of a multi-model environment is complex due to the integration of best practices from different sources. Such complexity increases when the sources have different nature. This paper defines a set of heuristics and its graphical representation for using a multi-model catalogue for software project management. The objective is to homologate best practices of both agile and traditional frameworks in a multi-model environment, using a pilot validation of the proposal for the requirement management process in SCRUM and CMMI-DEV 1.3. Such validation allowed us to analyze the catalogue structure behavior and the heuristics. It also provided us an example of a multi-model environment for agile and traditional frameworks. © 2016 AISTI.},
author_keywords={multimodel environment;  software process improvement;  software project management},
}

@ARTICLE{Bass20161,
author={Bass, J.M.},
title={Artefacts and agile method tailoring in large-scale offshore software development programmes},
journal={Information and Software Technology},
year={2016},
volume={75},
pages={1-16},
doi={10.1016/j.infsof.2016.03.001},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961801757&doi=10.1016%2fj.infsof.2016.03.001&partnerID=40&md5=8aa75391276624e0c84bc6b4121cced5},
abstract={Large-scale offshore software development programmes are complex, with challenging deadlines and a high risk of failure. Agile methods are being adopted, despite the challenges of coordinating multiple development teams. Agile processes are tailored to support team coordination. Artefacts are tangible products of the software development process, intended to ensure consistency in the approach of teams on the same development programme. Objective: This study aims to increase understanding of how development processes are tailored to meet the needs of large-scale offshore software development programmes, by focusing on artefact inventories used in the development process. Method: A grounded theory approach using 46 practitioner interviews, supplemented with documentary sources and observations, in nine international companies was adopted. The grounded theory concepts of open coding, memoing, constant comparison and saturation were used in data analysis. Results: The study has identified 25 artefacts, organised into five categories: Feature, sprint, release, product and corporate governance. It was discovered that conventional agile artefacts are enriched with artefacts associated with plan-based methods in order to provide governance. The empirical evidence collected in the study has been used to identify a primary owner of each artefact and map each artefact to specific activities within each of the agile roles. Conclusion: The development programmes in this study create agile and plan-based artefacts to improve compliance with enterprise quality standards and technology strategies, whilst also mitigating risk of failure. Management of these additional artefacts is currently improvised because agile development processes lack corresponding ceremonies. © 2016 Elsevier B.V. All rights reserved.},
author_keywords={Agile software development;  Enterprise;  Grounded theory;  Large-scale;  Offshore;  Outsourced;  Process tailoring;  Scrum;  Software development artefacts},
keywords={Human resource management;  Industry;  Regulatory compliance;  Software engineering, Agile software development;  Grounded theory;  Large-scale;  Offshore;  Outsourced;  Process tailoring;  Scrum, Software design},
}

@ARTICLE{Solinski2016447,
author={Solinski, A. and Petersen, K.},
title={Prioritizing agile benefits and limitations in relation to practice usage},
journal={Software Quality Journal},
year={2016},
volume={24},
number={2},
pages={447-482},
doi={10.1007/s11219-014-9253-3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907495216&doi=10.1007%2fs11219-014-9253-3&partnerID=40&md5=165fda96fe6fe83b71c0bc9b819950fd},
abstract={In recent years, there has been significant shift from rigid development (RD) toward agile. However, it has also been spotted that agile methodologies are hardly ever followed in their pure form. Hybrid processes as combinations of RD and agile practices emerge. In addition, agile adoption has been reported to result in both benefits and limitations. This exploratory study (a) identifies development models based on RD and agile practice usage by practitioners; (b) identifies agile practice adoption scenarios based on eliciting practice usage over time; (c) prioritizes agile benefits and limitations in relation to (a) and (b). Practitioners provided answers through a questionnaire. The development models are determined using hierarchical cluster analysis. The use of practices over time is captured through an interactive board with practices and time indication sliders. This study uses the extended hierarchical voting analysis framework to investigate benefit and limitation prioritization. Four types of development models and six adoption scenarios have been identified. Overall, 45 practitioners participated in the prioritization study. A common benefit among all models and adoption patterns is knowledge and learning, while high requirements on professional skills were perceived as the main limitation. Furthermore, significant variances in terms of benefits and limitations have been observed between models and adoption patterns. The most significant internal benefit categories from adopting agile are knowledge and learning, employee satisfaction, social skill development, and feedback and confidence. Professional skill-specific demands, scalability, and lack of suitability for specific product domains are the main limitations of agile practice usage. Having a balanced agile process allows to achieve a high number of benefits. With respect to adoption, a big bang transition from RD to agile leads to poor quality in comparison with the alternatives. © 2014, Springer Science+Business Media New York.},
author_keywords={Agile;  Benefits;  Limitations;  Practice adoption;  Prioritization},
keywords={Cluster analysis, Agile;  Benefits;  Limitations;  Practice adoption;  Prioritization, Hierarchical systems},
}

@ARTICLE{Bissi201645,
author={Bissi, W. and Serra Seca Neto, A.G. and Emer, M.C.F.P.},
title={The effects of test driven development on internal quality, external quality and productivity: A systematic review},
journal={Information and Software Technology},
year={2016},
volume={74},
pages={45-54},
doi={10.1016/j.infsof.2016.02.004},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960077807&doi=10.1016%2fj.infsof.2016.02.004&partnerID=40&md5=ffd9cd1ee43da5e65449d4dd603094d8},
abstract={Context: Test Driven Development (TDD) is an agile practice that has gained popularity when it was defined as a fundamental part in eXtreme Programming (XP). Objective: This study analyzed the conclusions of previously published articles on the effects of TDD on internal and external software quality and productivity, comparing TDD with Test Last Development (TLD). Method: In this study, a systematic literature review has been conducted considering articles published between 1999 and 2014. Results: In about 57% of the analyzed studies, the results were validated through experiments and in 32% of them, validation was performed through a case study. The results of this analysis show that 76% of the studies have identified a significant increase in internal software quality while 88% of the studies identified a meaningful increase in external software quality. There was an increase in productivity in the academic environment, while in the industrial scenario there was a decrease in productivity. Overall, about 44% of the studies indicated lower productivity when using TDD compared to TLD. Conclusion: According to our findings, TDD yields more benefits than TLD for internal and external software quality, but it results in lower developer productivity than TLD. © 2016 Elsevier B.V. All rights reserved.},
author_keywords={External quality;  Internal quality;  Productivity;  Systematic review;  Test-driven development},
keywords={Computer programming;  Computer software selection and evaluation;  Productivity, Academic environment;  External quality;  EXtreme Programming;  Industrial scenarios;  Internal quality;  Systematic literature review;  Systematic Review;  Test driven development, Software testing},
}

@ARTICLE{Orłowski2016715,
author={Orłowski, C. and Kapłański, P. and Nguyen, N.-T. and Pietranik, M.},
title={The Use of an Ontotrigger for Designing the Ontology of a Model Maturity Capsule},
journal={International Journal of Software Engineering and Knowledge Engineering},
year={2016},
volume={26},
number={5},
pages={715-731},
doi={10.1142/S0218194016500236},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977541796&doi=10.1142%2fS0218194016500236&partnerID=40&md5=b38c3ddd368cac34178473f616614638},
abstract={The aim of this work is to give the definition and present the possibility of applying (introduced and defined here) ontotriggers to design the ontology of a maturity capsule used in the assessment of IT projects. The complexity of designing ontology processes raises the question of whether there is a need for designing ontologies in a situation where it is possible to map them. The work is divided into four main parts. The first part presents and defines the concept of an ontotrigger. The second part presents a model maturity capsule. Similarities to the maturity capsule of a project managed in accordance with the SCRUM methodology have also been indicated. The third part discusses the method of building ontologies for both capsules and indicates the possibility of mapping them. The fourth part presents the application of an ontotrigger which uses the ability to map both ontologies. In summary, the applicability of ontotriggers has been demonstrated for the design of ontologies of any class and their objects. The process of verifying this applicability for two maturity capsules: the model and SCRUM maturity capsules, showed that the design of ontologies for any IT project management method can be implemented through maturity capsule ontotriggers rather than designing new ontologies. © 2016 World Scientific Publishing Company.},
author_keywords={knowledge representation;  ontology;  ontology integration;  Ontotrigger;  scrum},
}

@CONFERENCE{Doss2016,
author={Doss, O. and Kelly, T.},
title={Addressing the 4+1 software safety assurance principles within scrum},
journal={ACM International Conference Proceeding Series},
year={2016},
volume={24-May-2016},
doi={10.1145/2962695.2962712},
art_number={2962712},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991449534&doi=10.1145%2f2962695.2962712&partnerID=40&md5=ce0cbd18bf2e603da6122f9518143d0f},
abstract={The 4+1 principles document common principles of software safety assurance that can be observed from software safety standards and best practice. These principles are constant across domains and across projects, and can be regarded as the immutable core of any software safety justification. The principles also help maintain understanding of the 'big picture' of software safety issues whilst examining and negotiating the detail of individual standards, and provide a reference model for cross-sector certification. This document discusses the challenges posed when applying these principles to Scrum, and makes initial recommendations for how the principles can be accommodated within a Scrum development. © 2016 ACM.},
author_keywords={4+1 principles;  Assurance;  Assurance Case;  Certification;  Safety;  Scrum;  Software Safety},
keywords={Accident prevention;  Safety engineering, 4+1 principles;  Assurance;  Assurance case;  Certification;  Scrum;  Software safety, Computer software selection and evaluation},
}

@CONFERENCE{Ramirez-Noriega2016167,
author={Ramirez-Noriega, A. and Juarez-Ramirez, R. and Navarro, R. and Lopez-Martinez, J.},
title={Using Bayesian networks to obtain the task's parameters for schedule planning in scrum},
journal={Proceedings - 2016 4th International Conference in Software Engineering Research and Innovation, CONISOFT 2016},
year={2016},
pages={167-174},
doi={10.1109/CONISOFT.2016.33},
art_number={7477927},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978194647&doi=10.1109%2fCONISOFT.2016.33&partnerID=40&md5=7628f017c669768dc5c00d701e057730},
abstract={Planning Poker is a consensus-based technique mostly used for estimating effort or relative size of software development goals. This is applicable to estimate the size ofuser stories, developing releases and iteration plans. It is used generally with Scrum. Planning Poker has a lot of benefits, however, this method is not entirely efficient because the result is always based on the observation of an expert. This paper proposes the identification and validation of the most important factors taken into account by Scrum teams to assign complexity and importance to tasks, which are two important factors to consider for task scheduling. We define a knowledge structure that represents different aspects and the influence of each factor in the final decision. We use a Bayesian Network to co-relate these factors in order to have accurate in the estimation. The Bayesian Network give us the complexity of a task according to Fibonacci scale. Using our technique, software teams can focus in the most important tasks to obtain a quality software. © 2016 IEEE.},
author_keywords={complexity;  expert judgment;  Planning poker;  scrum;  task estimation},
keywords={Complex networks;  Engineering research;  Iterative methods;  Software design;  Software engineering, complexity;  Expert judgment;  Knowledge structures;  Quality software;  Relative sizes;  scrum;  Task estimation;  Task-scheduling, Bayesian networks},
}

@CONFERENCE{Wang20165,
author={Wang, Y. and Wagner, S.},
title={Towards applying a safety analysis and verification method based on STPA to agile software development},
journal={Proceedings - International Workshop on Continuous Software Evolution and Delivery, CSED 2016},
year={2016},
pages={5-11},
doi={10.1145/2896941.2896948},
art_number={2896948},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984596093&doi=10.1145%2f2896941.2896948&partnerID=40&md5=52620797acf3b5c439abc27afa82a9bb},
abstract={Agile methodologies are becoming widespread in modern software development. However, due to a lack of safety assurance activities, agile methods are criticized for being inadequate for the development of safe software. Safety analysis and safety verification are complementary methods for safety assurance. Yet, both usually rely on traditional, waterfall-like processes. Therefore, it is strongly needed to integrate an appropriate safety analysis approach into agile software development processes driving architecture design and verify the safe design at the code level. This paper presents a novel agile process model "S-Scrum" based on the existing development process "Safe Scrum" and extended by a safety analysis method and a safety verification approach based on STPA (System-Theoretic Process Analysis). The proposed agile development process S-Scrum can be separated into three parts: (1) performing safety-guided design by STPA inside each sprint. (2) Verifying safety requirements at the code level by using model checking. (3) Replacing traditional RAMS (Reliability, Availability, Maintainability, Safety) validation on the final product by STPA safety analysis. We adopt other aspects from the original Safe Scrum. Finally, the feasibility of S-Scrum is illustrated with the example of an airbag system. © 2016 ACM.},
author_keywords={Agile methods;  Safety analysis;  Safety verification;  Safety-critical sytems;  STPA},
keywords={Agile manufacturing systems;  Model checking;  Reliability analysis;  Safety engineering;  Software engineering;  Verification, Agile methods;  Agile software development;  Agile software development process;  Architecture designs;  Complementary methods;  Safety analysis;  Safety verification;  STPA, Software design},
}

@CONFERENCE{Tommy2015233,
author={Tommy, R. and Mhaisekar, M. and Kallepally, S. and Varghese, L. and Ahmed, S. and Somaraju, M.D.},
title={Dynamic quality control in agile methodology for improving the quality},
journal={2015 IEEE International Conference on Computer Graphics, Vision and Information Security, CGVIS 2015},
year={2015},
pages={233-236},
doi={10.1109/CGVIS.2015.7449927},
art_number={7449927},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966570081&doi=10.1109%2fCGVIS.2015.7449927&partnerID=40&md5=02d52ded3d20e725332b0d62b43060af},
abstract={The advantages of software development using Agile methodology is a well researched and documented topic. However, testing in agile software methodologies is not as well researched. The four values and twelve principles of the Agile Manifesto say nothing concrete about testing or quality assurance. An agile approach such as Scrum also doesn't talk much about Quality Assurance. It's already proven that agile processes produce software fast, but does the software produced adhere to quality? Can we, in some way, improve the quality in agile methodology by focusing on Dynamic Quality Control? There is no notable evidence in existing literature that testing in agile methodologies improve the quality of software compared to other methodologies. We chose a real world project and employed three teams to work on the same project following three different methodologies (Waterfall, Agile and Agile with Dynamic Quality Control) and collected data to compare the effectiveness of testing in each methodology in real world project scenario. We concentrated on five metrics (Defect count, Test coverage, Team maturity, Resource utilization and Lean) to study and compare the change in quality of software when using different methodologies. © 2015 IEEE.},
author_keywords={Agile Testing;  Agile with dynamic QC;  Dynamic Quality Control;  quality assurance},
keywords={Computer graphics;  Computer software;  Computer vision;  Concrete testing;  Quality assurance;  Security of data;  Software design;  Software engineering;  Software testing, Agile approaches;  Agile Methodologies;  Agile testing;  Agile with dynamic QC;  Dynamic quality control;  Quality of softwares;  Real world projects;  Resource utilizations, Quality control},
}

@CONFERENCE{Mendes20161290,
author={Mendes, T.S. and De Farias, M.A.F. and Mendonça, M. and Soares, H.F. and Kalinowski, M. and Spínola, R.O.},
title={Impacts of agile requirements documentation debt on software projects: A retrospective study},
journal={Proceedings of the ACM Symposium on Applied Computing},
year={2016},
volume={04-08-April-2016},
pages={1290-1295},
doi={10.1145/2851613.2851761},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975883385&doi=10.1145%2f2851613.2851761&partnerID=40&md5=83350a5a74c72104394509e9ae5666ee},
abstract={Documentation debt is a type of technical debt that describes problems in documentation such as missing, inadequate or incomplete artifacts. Unlike traditional methods, agile methodologies usually employ short iterative cycles and rely on tacit knowledge within a team. In particular, Agile Requirements (AR) (e.g., user stories) tend to reduce the focus on requirements specification activities. This scenario contributes to the occurrence of documentation debt. The goal of this paper is to investigate the impact that this type of debt brings to projects developed by using AR. We address this goal by performing a retrospective study in a real software project that used AR in its development. Our analysis was concentrated on data from 132 maintenance and evolution tasks. Of this total, 65 were related to the presence of documentation debt and were performed within a timeframe of 18 months. The findings indicated an extra maintenance effort of about 47% of the total effort estimated for developing the project and an extra cost of about 48% of the initial cost of the development phase. © 2016 ACM.},
author_keywords={Agile Requirements;  Documentation debt;  Retrospective study;  Technical debt;  User stories},
keywords={Computation theory, Agile Methodologies;  Agile requirements;  Development phase;  Maintenance efforts;  Requirements specifications;  Retrospective study;  Technical debts;  User stories, Iterative methods},
}

@CONFERENCE{Soni201585,
author={Soni, M.},
title={End to End Automation on Cloud with Build Pipeline: The Case for DevOps in Insurance Industry, Continuous Integration, Continuous Testing, and Continuous Delivery},
journal={Proceedings - 2015 IEEE International Conference on Cloud Computing in Emerging Markets, CCEM 2015},
year={2015},
pages={85-89},
doi={10.1109/CCEM.2015.29},
art_number={7436936},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966553219&doi=10.1109%2fCCEM.2015.29&partnerID=40&md5=fc0cbd317b2ce9f3778b479298fdb0f7},
abstract={In modern environment, delivering innovative idea in a fast and reliable manner is extremely significant for any organizations. In the existing scenario, Insurance industry need to better respond to dynamic market requirements, faster time to market for new initiatives and services, and support innovative ways of customer interaction. In past few years, the transition to cloud platforms has given benefits such as agility, scalability, and lower capital costs but the application lifecycle management practices are slow with this disruptive change. DevOps culture extends the agile methodology to rapidly create applications and deliver them across environment in automated manner to improve performance and quality assurance. Continuous Integration (CI) and Continuous delivery (CD) has emerged as a boon for traditional application development and release management practices to provide the capability to release quality artifacts continuously to customers with continuously integrated feedback. The objective of the paper is to create a proof of concept for designing an effective framework for continuous integration, continuous testing, and continuous delivery to automate the source code compilation, code analysis, test execution, packaging, infrastructure provisioning, deployment, and notifications using build pipeline concept. © 2015 IEEE.},
author_keywords={Automation;  Cloud Computing;  Configuration Management;  Continuous Delivery;  Continuous Integration;  Continuous Testing;  DevOps},
keywords={Automation;  Cloud computing;  Commerce;  Pipeline codes;  Pipelines;  Quality assurance, Configuration management;  Continuous Delivery;  Continuous integrations;  Continuous testing;  DevOps, Integration testing},
}

@ARTICLE{Sarhan2016239,
author={Sarhan, S. and Abu El Soud, M. and Bakry, N.},
title={Enhancing agile software development process using learn, information, change and progress activities},
journal={International Review on Computers and Software},
year={2016},
volume={11},
number={3},
pages={239-248},
doi={10.15866/irecos.v11i3.8895},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84970021179&doi=10.15866%2firecos.v11i3.8895&partnerID=40&md5=7d7d4718de2305b30c64d452e5dc7c11},
abstract={Agile software development methodology is an incremental software development methodology, that provides a fast and simple way of software developing based on the customer involvement which grantee project quality and customer satisfaction. In spite of these advantages but agile still suffers from shortage in handling requirements change during the system building which causes more time and money also the difficulty in arranging the user story which causes belated risk detection. In this paper we have introduced a set of activities called LICP (Learn–Information–Change-Progress), where each activity endorses the agile principles and rules to help the team in enhancing his performance, achieving customer satisfaction and reducing time and cost. The proposed activities were evaluated using two methods building SMS application using scrum methodology enhanced with the LICP activities and a questionnaire filled by 30 different positions employees in 3 different companies working in the software development field. The evaluation results indicate the effectiveness of LICP activities in enhancing the scrum methodology performance through the earlier risk detection, better handling of user stories changes and enhancing team communication and learning ability. © 2016 Praise Worthy Prize S.r.l. - All rights reserved.},
author_keywords={Agile;  Scrum;  Spiral model;  User story;  Waterfall model},
}

@ARTICLE{Torrecilla-Salinas201692,
author={Torrecilla-Salinas, C.J. and Sedeño, J. and Escalona, M.J. and Mejías, M.},
title={Agile, Web Engineering and Capability Maturity Model Integration: A systematic literature review},
journal={Information and Software Technology},
year={2016},
volume={71},
pages={92-107},
doi={10.1016/j.infsof.2015.11.002},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952802072&doi=10.1016%2fj.infsof.2015.11.002&partnerID=40&md5=69aa0fcfb3fd1618edac71c02691459c},
abstract={Context Agile approaches are an alternative for organizations developing software, particularly for those who develop Web applications. Besides, CMMI (Capability Maturity Model Integration) models are well-established approaches focused on assessing the maturity of an organization that develops software. Web Engineering is the field of Software Engineering responsible for analyzing and studying the specific characteristics of the Web. The suitability of an Agile approach to help organizations reach a certain CMMI maturity level in Web environments will be very interesting, as they will be able to keep the ability to quickly react and adapt to changes as long as their development processes get mature. Objective This paper responds to whether it is feasible or not, for an organization developing Web systems, to achieve a certain maturity level of the CMMI-DEV model using Agile methods. Method The proposal is analyzed by means of a systematic literature review of the relevant approaches in the field, defining a characterization schema in order to compare them to introduce the current state-of-the-art. Results The results achieved after the systematic literature review are presented, analyzed and compared against the defined schema, extracting relevant conclusions for the different dimensions of the problem: compatibility, compliance, experience, maturity and Web. Conclusion It is concluded that although the definition of an Agile approach to meet the different CMMI maturity levels goals could be possible for an organization developing Web systems, there is still a lack of detailed studies and analysis on the field. © 2015 Elsevier B.V. All rights reserved.},
author_keywords={Agile;  CMMI;  Scrum;  Software Engineering;  Web Engineering},
keywords={Agile manufacturing systems;  Application programs;  Software engineering;  Websites, Agile;  Capability maturity model integration;  Characterization schema;  CMMI;  Development process;  Scrum;  Systematic literature review;  Web engineering, World Wide Web},
}

@CONFERENCE{Gupta2016170,
author={Gupta, R.K. and Manikreddy, P. and Naik, S. and Arya, K.},
title={Pragmatic approach for managing technical debt in legacy software project},
journal={ACM International Conference Proceeding Series},
year={2016},
volume={18-20-February-2016},
pages={170-176},
doi={10.1145/2856636.2856655},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976633741&doi=10.1145%2f2856636.2856655&partnerID=40&md5=f3a0f1ddeebc44e1ba6644a2b11f1ded},
abstract={Tackling the issues of technical debt in a large system in parallel with continuing to enable it to evolve is a challenging problem. In this paper, we are describing a case study of managing technical debt on a legacy project referred here as Global Configurator Project (GCP) using pragmatic approach. The paper presents holistic lifecycle approach with four stages and various practices in each stage for managing technical debt. Given life cycle approach and practices will be useful for any software project. In particular, these practices will be significant to any legacy project towards repaying debt. These methods can also be applied to continuously improve code quality and product quality. This paper also focus on technical debt user stories to gain business buy-in and share few 'best in market' tools that we used in repaying technical debt. It also focuses on sensitizing developers to the concept of debt and improving their skills. This paper describes the process used by a separate team formed to reduce technical debt in a large legacy system. The paper targets to the Project Managers, Test Managers architects and Scrum Masters in agile software development. © 2016 ACM.},
author_keywords={Code quality;  Lifecycle approach;  Pragmatic;  Product quality;  Static analysis;  Technical debt},
keywords={Legacy systems;  Life cycle;  Managers;  Quality control;  Software design;  Software testing;  Static analysis, Agile software development;  Code quality;  Legacy software;  Life cycle approach;  Pragmatic;  Project managers;  Software project;  Technical debts, Software engineering},
}

@CONFERENCE{Andrat2015535,
author={Andrat, H. and Jaswal, S.},
title={An alternative approach for risk assessment in Scrum},
journal={2015 International Conference on Computing and Network Communications, CoCoNet 2015},
year={2015},
pages={535-539},
doi={10.1109/CoCoNet.2015.7411239},
art_number={7411239},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964828451&doi=10.1109%2fCoCoNet.2015.7411239&partnerID=40&md5=0827758ddf90fb211dc33fdf109007f1},
abstract={Agile processes are widely used for the purpose of software project development sine they have overcome the limitations faced in traditional software project development. Risk management is a crucial part in project development which helps in eliminating the risks prevailing in software project. Even though risk management is associated with agile approach, still there prevails the scope for improvement. Therefore the motto of this paper is to analyze agile methodology, Scrum and highlight the extent to which risk is managed in it and propose a model to overcome its' limitations in risk analysis phase. © 2015 IEEE.},
author_keywords={Agile methodology;  Agile risk mangement;  Scrum;  Traditional approach},
keywords={Risk analysis;  Risk management;  Risks, Agile approaches;  Agile Methodologies;  Agile process;  Agile risk mangement;  Project development;  Scrum;  Software project;  Traditional approaches, Risk assessment},
}

@CONFERENCE{Campbell2016319,
author={Campbell, J. and Kurkovsky, S. and Tafliovich, A. and Liew, C.W.},
title={Scrum and agile methods in software engineering courses},
journal={SIGCSE 2016 - Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
year={2016},
pages={319-320},
doi={10.1145/2839509.2844664},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968645164&doi=10.1145%2f2839509.2844664&partnerID=40&md5=b87ed38ce3ce2a6d65d5c3f98a13f1b4},
abstract={Agile software development has been formally introduced in 2001 in the "agile manifesto" [4]. Agile methods are best described as an amalgamation of four core principles describing lightweight iterative software processes: Individuals and interactions over processes and tools; Working software over comprehensive documentation; Customer collaboration over contract negotiation; Responding to change over following a plan. Over the years, a number of agile frameworks, such as Extreme Programming and Scrum, have evolved and matured. The underlying philosophy of Scrum recognizes that the customers often change their mind about the product they want and that the development challenges are unpredictable by their nature. Consequently, Scrum embraces the fact that the problem being solved cannot be fully understood or described from the start. Instead, Scrum focuses on maximizing the ability of the development team to quickly deliver in response to emerging requirements. The aim of this panel is to present the experiences and challenges of practicing Scrum and agile methods at a variety of computer science programs.},
author_keywords={Agile software development;  Scrum;  Software engineering},
}

@ARTICLE{Shawky201682,
author={Shawky, D.M. and Abd-El-Hafiz, S.K.},
title={Characterizing software development method using metrics},
journal={Journal of Software: Evolution and Process},
year={2016},
volume={28},
number={2},
pages={82-96},
doi={10.1002/smr.1766},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958931389&doi=10.1002%2fsmr.1766&partnerID=40&md5=5a9ea0338bb4df5c4581e6828cf35900},
abstract={This work investigates whether the development methodology affects some metrics that are related to the quality of the generated code. Trying to characterize the development methodology using software metrics could be beneficial to developers who use agile approaches extensively. Therefore, this study sheds light on the metrics that might be highly affected by following agile approaches. The values of these metrics need to be tracked, because they might result in a quality-related issue, such as error-proneness, for example. The proposed approach employs different feature selection and classification methods, which include artificial neural networks. We used 11 object-oriented systems of various sizes and functionalities. Five of the used systems were developed using agile approaches, while the rest were developed using non-agile methodologies. The classes and methods of the used systems were represented by a set of metrics that shows some complexity, cohesion, and coupling features of the systems. The generated metrics are used as features to classify between the two different types of the development methodologies using a feed-forward artificial neural network. The obtained high classification accuracy shows the strong relationship between the used metrics and the type of the followed development process. Copyright © 2015 John Wiley & Sons, Ltd.},
author_keywords={agile development;  ANN;  classification;  feature selection;  software metrics},
keywords={Agile manufacturing systems;  Classification (of information);  Complex networks;  Feature extraction;  Neural networks;  Object oriented programming, Agile development;  ANN;  Classification accuracy;  Development methodology;  Feature selection and classification;  Feed-forward artificial neural networks;  Software development methods;  Software metrics, Software design},
}

@CONFERENCE{Fuertes201558,
author={Fuertes, W. and Carrera, D. and Villacis, C. and Toulkeridis, T. and Galarraga, F. and Torres, E. and Aules, H.},
title={Distributed system as internet of things for a new low-cost, air pollution wireless monitoring on real time},
journal={Proceedings - 2015 IEEE/ACM 19th International Symposium on Distributed Simulation and Real Time Applications, DS-RT 2015},
year={2015},
pages={58-67},
doi={10.1109/DS-RT.2015.28},
art_number={7395915},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969759692&doi=10.1109%2fDS-RT.2015.28&partnerID=40&md5=34066582554d1151c01e1912dc8a2168},
abstract={We have developed a low-cost wireless monitoring system, that enables air quality referential parameters measurements based on a multilayer distributed model with an Arduino platform. This is an Internet of Things application, of which a physical object is embedded with electronics, software, sensors and wireless connectivity to allow monitoring air pollution on real-time. Agile methodologies such as Scrum and Extreme Programming were used in order to ensure software quality. The electronic device is equipped with three sensors, which determines carbon monoxide (CO) as well as carbon dioxide (CO2) concentrations and powder density, using an API developed in C++ language. The validation of the mentioned concept has been realized in a variety of sites in Ecuador, namely in the cities of Quito, Amaguaña and Tena. The obtained results of air pollutants concentration are compared and conformable with the referential values established by international environment organizations like World Health Organization (WHO) and US EPA. © 2015 IEEE.},
author_keywords={Agile methodologies;  Air pollution;  Arduino;  Distributed systems;  Electronic sensors;  IoT;  Real time},
keywords={Agile manufacturing systems;  Air quality;  Application programs;  C++ (programming language);  Carbon dioxide;  Carbon monoxide;  Computer programming;  Computer software selection and evaluation;  Internet;  Internet of things;  Pollution;  Pollution detection;  Real time systems, Agile Methodologies;  Arduino;  Distributed systems;  Electronic sensors;  Real time, Air pollution},
}

@CONFERENCE{Aljallabi2015428,
author={Aljallabi, B.M. and Mansour, A.},
title={Enhancement approach for non-functional requirements analysis in Agile environment},
journal={Proceedings - 2015 International Conference on Computing, Control, Networking, Electronics and Embedded Systems Engineering, ICCNEEE 2015},
year={2015},
pages={428-433},
doi={10.1109/ICCNEEE.2015.7381407},
art_number={7381407},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965128350&doi=10.1109%2fICCNEEE.2015.7381407&partnerID=40&md5=7e846934aad5a595f8102dc9b4d5cd00},
abstract={Non-functional requirements (NFRs) are quality attributes that define how a software product will do its functions. They are important and critical to the success of any software in the market as they considered as the differentiating factor from other software products that provide similar functionality. Agile methodology became popular during the last few years, and although it improves the process of software development, it has a number of limitations regarding requirements analysis. Neglecting the non-functional requirements is one of the biggest limitations in Agile. It doesn't provide any widely accepted technique for elicitation and management of non-functional requirements. This paper summarizes two existing approaches that are currently used to analysis NFRs, and then it provides an enhanced approach for better analysis of NFRs. The new approach is better than the existing ones, because it combines their strengths and overcome their weaknesses. © 2015 IEEE.},
author_keywords={Agile Methodology;  External quality attributes;  Functional requirement;  Internal quality attributes;  non-functional requirements;  Requirements Engineering},
keywords={Agile manufacturing systems;  Embedded systems;  Requirements engineering;  Software design;  Systems engineering, Agile Methodologies;  External quality;  Functional requirement;  Internal quality;  Non-functional requirements, Software engineering},
}

@CONFERENCE{Al-Azawi2015,
author={Al-Azawi, R. and Ayesh, A.},
title={Experience with AOAB methodology in mobile computing module},
journal={2015 International Conference on Open Source Software Computing, OSSCOM 2015},
year={2015},
doi={10.1109/OSSCOM.2015.7372683},
art_number={7372683},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964861366&doi=10.1109%2fOSSCOM.2015.7372683&partnerID=40&md5=933df7ffc7e31a84e87c93b01606d428},
abstract={This paper describes a case study of how Agent Oriented Agile Based (AOAB) development methodology was implemented in mobile computing module to create game as a part of the module assessment requirements. Games can be used in higher education in many ways to increase students participation, enable variation in how lectures are taught and to increase students interest when they create their own game. We provide a new game development methodology and integrated with mobile computing module. The experience described in this paper is based on the feedback from the module staff member, students feedback, final student report and finally module evaluation report by students. The evaluation shows that the students who used AOAB methodology provide a better result rather than groups who used Agile game development methodology in game creation. Finally, we describe the benefit of using game in higher education and how we could enhance students progress in their study. © 2015 IEEE.},
author_keywords={Adaptive development model;  Agent Oriented Agile Based (AOAB);  Agile methodology;  Game development methodology;  Multi Agent Software Engineering (MaSE);  Predictive development model},
keywords={Computer software;  Education;  Education computing;  Mobile computing;  Multi agent systems;  Open source software;  Open systems;  Software agents;  Software design;  Software engineering;  Students, Agent-oriented;  Agile Methodologies;  Development model;  Game development;  Multi-agent softwares, Computer games},
}

@CONFERENCE{Wautelet2016337,
author={Wautelet, Y. and Heng, S. and Kolp, M. and Scharff, C.},
title={Towards an agent-driven software architecture aligned with user stories},
journal={ICAART 2016 - Proceedings of the 8th International Conference on Agents and Artificial Intelligence},
year={2016},
volume={2},
pages={337-345},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969268482&partnerID=40&md5=140a1a1a0c9968eba5435c22c1489f02},
abstract={Agile principles have taken an increasing importance in the last decades. Software Architecture (SA) definition is perceived as a non-agile practice as it is executed in a top-down manner, reminding waterfall development, and sometimes imposes heavy documentation. This paper proposes to systematically build an agent-oriented SA from a set of User Stories (US), the core artifact to document requirements in agile methodologies. Previous research has allowed to define a unified US meta-model for the generation of templates relating WHO, WHAT and WHY elements. This meta-model's elements define a syntax issued from practitioners templates associated with semantics from Goal Oriented Requirements Engineering frameworks, more precisely i∗. With a set of US following the templates of this previous model, the link between the US and SA concepts is systematically studied and a transformation process is proposed. The SA can decline agent behaviors aligned with requirements and organizational behaviors. Moreover, requirements (thus US) are subject to evolution through agile iterations; the SA can evolve with these changes in a semi-automatic manner. We thus argue that the Agent-SA produced with our transformation process contributes to the overall project agility. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
author_keywords={Agent architecture;  Agile architecture;  Agile development;  Multi-agent system;  User story},
keywords={Artificial intelligence;  Multi agent systems;  Requirements engineering;  Semantics;  Software agents;  Software architecture, Agent architectures;  Agile architectures;  Agile development;  Agile Methodologies;  Goal-oriented requirements engineering;  Organizational behavior;  Transformation process;  User stories, Intelligent agents},
}

@ARTICLE{Pecchia2016103,
author={Pecchia, C. and Trincardi, M. and Di Bello, P.},
title={Expressing, managing, and validating user stories: Experiences from the market},
journal={Communications in Computer and Information Science},
year={2016},
volume={422},
pages={103-111},
doi={10.1007/978-3-319-27896-4_9},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958244967&doi=10.1007%2f978-3-319-27896-4_9&partnerID=40&md5=dfede4235bbb444f36e17a33e2a1f6a3},
abstract={Agile methodologies for software development favor customer involvement and thus a rapid feedback cycle on realized product increments. Such involvement is implemented in the activities around requirements (elicitation, analysis, development, management, change, validation), which in turn are often sustained by—and expressed in—“user story” format. This paper aims to show our experience in developing software system representing functional requirements mainly with “user stories,” and capturing also nonfunctional requirements (e.g., availability, security) in demanding domains. This paper starts defining what a user story is, how we write and test it, and what are main differences compared to “traditional” documented requirements and use cases. Then, it focuses on techniques we use for splitting and grooming, and how we transform a linear backlog into a multidimensional Story Map that help us to manage size and complexity. © Springer International Publishing Switzerland 2016.},
keywords={Application programs;  Mathematical transformations;  Software design, Agile Methodologies;  Functional requirement;  It focus;  Non-functional requirements;  Rapid feedback;  Software systems;  User stories, Software engineering},
}

@ARTICLE{Hariharan2016661,
author={Hariharan, S. and Renga Rajan, A. and Prem Kumar, R.},
title={An hybrid approach and enhanced analytic tool for global software development},
journal={International Journal of Control Theory and Applications},
year={2016},
volume={9},
number={2},
pages={661-669},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975154415&partnerID=40&md5=e81f87d90c2b91949b553abac0e87136},
abstract={Requirements Engineering is, as its name suggests, the engineering discipline of establishing user requirements and specifying software systems. There are many definitions of Requirements Engineering. however, they all share the idea that requirements involves finding out what people want from a computer system, and understanding what their needs mean in terms of design. Requirements Engineering is closely related to software engineering, which focuses more on the process of designing the system that users want. Perhaps the most concise summary comes from Barry Boehm: requirements are "designing the right thing" as opposed to software engineering's "designing the thing right" (Boehm, 1981). Requirement engineering is the important phase in the software development. Here, we gather all requirements of the software which is proposed for development. An agile methodology produces high quality software and takes less time in comparison to traditional methods. Agile was discovered for managing the development process in the environment where requirement could be changed during development process. Requirement engineering is the important phase in the agile development methodology. In this paper, the software development tool which is described, analysis all the life cycle of a software and intended to produce a quality software. © International Science Press.},
author_keywords={Agile methodology;  JAD;  Requirement engineering;  SDLC;  Viewpoint},
}

@ARTICLE{Choma2016131,
author={Choma, J. and Zaina, L.A.M. and Beraldo, D.},
title={UserX story: Incorporating UX aspects into user stories elaboration},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2016},
volume={9731},
pages={131-140},
doi={10.1007/978-3-319-39510-4_13},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978828549&doi=10.1007%2f978-3-319-39510-4_13&partnerID=40&md5=cfc35dae51e4ed258668bc212112d11e},
abstract={In the last decade, many strategies have been employed successfully to incorporate User Experience (UX) practices into agile development in order to increase user satisfaction with the product. In this paper, we present a grammar for stories of interaction called UserX Story, in order to remedy the difficulties encountered by teams to insert UX aspects and usability requirements in the first steps of software conception. An action research approach was applied to carry out the research within the industry, allowing us to work closely with the agile teams. The research cycle was split in three steps. In the first step, we carried out a technical literature survey, aiming to investigate the use of user stories in the agile methodologies, and additionally, an ethnographic study also was carried out in order to understand how the traditional user stories were being developed by product owners. In the second step, we proposed together with both teams - UX and agile - a grammar to UserX Story incorporating two concepts of UX: personas and Nielsen’s heuristics. In the third step, six product owners were invited to implement the UserX Stories in real projects. After that, we interviewed the participants aiming to collect their experiences with the implementation of UserX Stories. Thus, we have found out that most of the agile teams approved the use of the stories incorporating UX aspects. © Springer International Publishing Switzerland 2016.},
author_keywords={Agile;  Scrum;  Usability;  User experience;  User story},
keywords={Artificial intelligence;  Computer science;  Computers, Agile;  Scrum;  Usability;  User experience;  User stories, Human computer interaction},
}

@ARTICLE{Gaikwad2016387,
author={Gaikwad, V. and Joeg, P.},
title={An empirical study of writing effective user stories},
journal={International Journal of Software Engineering and its Applications},
year={2016},
volume={10},
number={11},
pages={387-404},
doi={10.14257/ijseia.2016.10.11.31},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007109259&doi=10.14257%2fijseia.2016.10.11.31&partnerID=40&md5=993ba311b1c17b6a6e3ae8a470fa8f61},
abstract={Software requirements should be accurately captured in the form of user stories so that development teams are able to meet customer expectations for the software. This study investigates the various challenges in capturing requirements of the agile scrum methodology and proposes some improvements. A user story writing workshop was conducted based on a standard set of business requirements. The resulting user stories were analyzed for correctness and problem areas were identified. Then a separate industry survey was conducted to confirm that the problem areas found in this workshop are indeed the common problem areas for industry practitioners. A set of improvements were then identified to address the problem areas. A second workshop was then conducted to check whether the improvements actually result in better user story writing. The results of the second workshop suggest that the improvements were quite effective in resolving most of the problem areas. They can thus be adopted by industry practitioners as best practices. © 2016 SERSC.},
author_keywords={Agile;  Persona;  Requirements engineering;  Scrum;  User stories},
}

@ARTICLE{Sruthy20166659,
author={Sruthy, M.K. and Surya, M. and Soumya Krishnan, M.},
title={Influence of agile on Indian IT companies},
journal={International Journal of Control Theory and Applications},
year={2016},
volume={9},
number={14},
pages={6659-6666},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006054780&partnerID=40&md5=2bfcc35b3ced0a857aa48a31a0651a27},
abstract={In recent years, among the professionals in software field, encourage agile methodologies than the traditional models since it supports to develop software in changing environment and requirements with high quality and low cost. In this paper, we tried to investigate the effect of agile within the Indian software industries. The data collected via questionnaires from various Indian IT companies were analyzed. The results shows that most of the Indian IT companies now wish to use and practicing agile methodologies in their industries since it provided them with better results in their software development process compared to other development methodologies. © International Science Press.},
author_keywords={Agile methodologies;  Agile principles;  Process models;  Success factor},
}

@ARTICLE{Reddaiah2016645,
author={Reddaiah, B. and Pradeep Kumar Reddy, R. and Nagaraju, C. and Harsha Sree, V.},
title={A novel approach to adopt scrum by an enterprise},
journal={Advances in Intelligent Systems and Computing},
year={2016},
volume={394},
pages={645-654},
doi={10.1007/978-81-322-2656-7_59},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959160204&doi=10.1007%2f978-81-322-2656-7_59&partnerID=40&md5=08ac1a3ca8d86998d1bcf13efcf7148b},
abstract={It is very important to understand how poor quality can bring down a software project development. In the early software developing methodologies, customer requirements are ambiguous because of which specifications can be solidified. This is due to the unbending structure of old and traditional methodologies. Over the last decade, more than a few innovative software development methodologies have been developed particularly to resolve problems in the region of software quality. Such group of methodologies is called “agile.” These methodologies mostly focus on how to maximize flexibility and minimize transparency in the process of software development. These methodologies are not only based on theory, but also rather derived from experiences of successful project teams. Based on the current trend in the software industry, software developing companies are choosing agile methodologies in which scrum is widely used. In this work, the adoption process of scrum by a software company is discussed. © Springer India 2016.},
author_keywords={Adoption;  Agile;  Enterprise culture;  Scrum},
keywords={Agile manufacturing systems;  Artificial intelligence;  Computer software selection and evaluation;  Software engineering, Adoption;  Agile;  Agile Methodologies;  Customer requirements;  Enterprise culture;  Scrum;  Software development methodologies;  Software industry, Software design},
}

@ARTICLE{El-Najar2016113,
author={El-Najar, T. and Ahmad, A. and Alkandari, M.},
title={Client communication: A major issue in agile development},
journal={International Journal of Software Engineering and its Applications},
year={2016},
volume={10},
number={12},
pages={113-130},
doi={10.14257/ijseia.2016.10.12.10},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009274865&doi=10.14257%2fijseia.2016.10.12.10&partnerID=40&md5=945b4236323406bb2630952e62d963a3},
abstract={Agile development model solved a lot of its predecessor the waterfall model problems like time, cost, resources and high risk of failure due to incomplete or inaccurate requirements. However, agile model introduced the client communication problem; due to the structure and nature of agile methodologies, it depends heavily on communicating with client. With four layers of communication that get repeated in almost every agile iteration, failing to handle client communication is one of the main reasons behind failure of agile based projects. In this paper, we survey the existing methods of communication which are classified into two main categories: physical meetings/workshops and software communication tools. Each category is assessed and compared based on certain attributes such as availability, productivity, cost, reliability, trust and project coverage. In addition, the available solutions to address the communication problem, which include enhanced physical meetings/workshops and software tools like requirement engineering tools, agile management tools and social media sites and applications, are analyzed and assessed based on attributes such as usability, formality and project coverage. The study revealed that the available solutions did not address all the aspects of the communication problem. Therefore, it is desirable to develop an integrated solution which utilized communication software tool using social media frameworks as its backbone and physical meetings to benefit from human interaction and relationships to solve the communication problem in agile environment. © 2016 SERSC.},
author_keywords={Agile;  Client communication;  Communication problem;  Requirement engineering;  Software development;  Waterfall},
}

@ARTICLE{Oliveira2016422,
author={Oliveira, J. and Vinhas, M. and Da Costa, F. and Nogueira, M. and Ribeiro, P. and Machado, R.J.},
title={Is scrum useful to mitigate project’s risks in real business contexts?},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2016},
volume={9790},
pages={422-437},
doi={10.1007/978-3-319-42092-9_33},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978219395&doi=10.1007%2f978-3-319-42092-9_33&partnerID=40&md5=f9c867e3e249920903557db82819ce92},
abstract={This work aims to determine the impact of the agile methodologies usage in software development, in particular, the usefulness and impact of the adoption of Scrum in a real business scenario. The aim is thus whether the adoption and implementation of this methodology, has contributed, and to what extent, for the mitigation of the risk management of software project and for the quality of the software. In order to be possible this study was carried out an investigation, which was distributed internationally, via discussion groups of professionals, followers and supporters of this methodology. Some of the issues explored were: the impact on elicitation of requirements; communication between team’s members and the result of the development - the product. The aim is to also check if the function, role or the culture of the element is an influential factor in your opinion and attitude towards this methodology. © Springer International Publishing Switzerland 2016.},
author_keywords={Project management;  Project monitoring;  Risk;  Scrum;  Software;  Utility},
keywords={Computer software;  Project management;  Risk management;  Risks;  Software engineering;  Utility programs, Agile Methodologies;  Business contexts;  Discussion Groups;  Influential factors;  Management of software projects;  Project monitoring;  Scrum;  Utility, Software design},
}

@ARTICLE{Chaudhary201667,
author={Chaudhary, L. and Deep, V. and Puniyani, V. and Verma, V. and Kumar, T.},
title={Business modeling using agile},
journal={Advances in Intelligent Systems and Computing},
year={2016},
volume={433},
pages={67-72},
doi={10.1007/978-81-322-2755-7_8},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965082069&doi=10.1007%2f978-81-322-2755-7_8&partnerID=40&md5=a73c55e6b09990dff5e16160e182c45d},
abstract={The selection of methodology used is of great importance in business process modeling. It has a great impact on satisfaction of the customer. The aim of this paper is to fulfill the gaps of the existing model using agile methodology. There also exist several aspects in the business modeling as proposed by various scholars such as market-oriented aspects, value aspects, product oriented aspects, actors in business aspects etc. There were various shortcomings in the existing business agility. Keeping those short comings in mind the model is being proposed and hence various advantages are being extracted. © Springer India 2016.},
author_keywords={Agile structure;  Business model;  Quality},
keywords={Customer satisfaction;  Image quality;  Information systems;  Systems analysis;  Systems engineering, Agile Methodologies;  Business aspects;  Business modeling;  Business process model;  Short-comings, Agile manufacturing systems},
}

@ARTICLE{Mauro201627,
author={Mauro, V. and Messina, A.},
title={AMINSEP-agile methodology implementation for a new software engineering paradigm definition. A research project proposal},
journal={Communications in Computer and Information Science},
year={2016},
volume={422},
pages={27-33},
doi={10.1007/978-3-319-27896-4_3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958292208&doi=10.1007%2f978-3-319-27896-4_3&partnerID=40&md5=3cbf5e9ac329a47521c945750c91675c},
abstract={The application of the “Agile” methodology to a Military Application Software production line is not to be taken for granted. The adoption of the new production style has implied the solution of multiple problems and the generation of a custom version of the basic “Scrum” theory. One of the major changes has been imposed by the need to include Military Test Beds and Military Units in the workflow. Even if the “Agile Scrum” methodology has been around for over a decade now, there are many successful implementation stories the Italian Army experience and clearly show there is more conceptual work to be done. There are a number of open issues to be tackled and a growth potential to be exploited. AMINSEP tackles the area of monitoring and measuring using noninvasive tools (Italian Army choice) necessary to keep high the product quality level and monitor criticalities. Those tools need to evolve. The evolution has to take into account the peculiar environment of the agile teams. The current tools are based on complexity metrics borne for the old fashion software factories. The collected data do not give a complete picture of the team-based code development cycle. A new set of metrics is needed to complement the existing ones. The basic concept and the structure of the research project are presented. © Springer International Publishing Switzerland 2016.},
keywords={Application programs, Agile Methodologies;  Code development;  Complexity metrics;  Growth potential;  Military units;  Noninvasive tools;  Software engineering paradigm;  Software factories, Software engineering},
}

@CONFERENCE{Villacís2016425,
author={Villacís, C. and Fuertes, W. and Santillán, M. and Aules, H. and Tacuri, A. and Zambrano, M. and Salguero, E.},
title={On the development of strategic games based on a Semiotic analysis: A case study of an optimized Tic-Tac-Toe},
journal={ICEIS 2016 - Proceedings of the 18th International Conference on Enterprise Information Systems},
year={2016},
volume={1},
pages={425-432},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979519006&partnerID=40&md5=44e986debdffc1c4c0e18d7884224353},
abstract={A picture can express something instead of having a thousand words that cannot do it. This phrase, which symbolically connotes a whole scheme of a signs system, is known as Semiotics. This paper presents the process of an educational video game development based on semiotic analysis. We used Extreme Programing Agile Methodology combined with a proposal of the modified Elemental Tetrad Game Design Model to develop a video game known as "Tic-Tac-Toe". The mathematical model was implemented with Artificial Intelligence algorithms and a graphical user interface including Semiotics; this was optimized for producing an enjoyable and interactive environment. With the purpose of stimulating cognitive development of children, this research combines theories about stimulating cognitive development of children; game design model, Semiotic Analysis harnesses the Model of Aleferenko, and uses algorithms based on heuristics and numerical methods in client-server architecture. The concept was tested with a representative sample of seven to eleven years old children. The results demonstrated that educational video games with Semiotics stimulate the cognitive development of children. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
author_keywords={Artificial Intelligence;  Semiotic models for videogames;  Semiotics;  Tic-Tac-Toe;  Videogames},
keywords={Artificial intelligence;  Client server computer systems;  Graphical user interfaces;  Heuristic methods;  Human computer interaction;  Information systems;  Intelligent systems;  Interactive computer graphics;  Numerical methods;  Optimization;  Software design;  User interfaces, Artificial intelligence algorithms;  Client-server architectures;  Cognitive development;  Educational video games;  Interactive Environments;  Representative sample;  Tic-Tac-Toe;  Video game, Semiotics},
}

@CONFERENCE{Rajkovic201665,
author={Rajkovic, P. and Petkovic, I. and Milenkovic, A. and Jankovic, D.},
title={Combining agile and traditional methodologies in medical information systems development process},
journal={CEUR Workshop Proceedings},
year={2016},
volume={1677},
pages={65-72},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988930386&partnerID=40&md5=90e224d6c2224a551fa83c308725af68},
abstract={Having experience with different traditional and agile methodologies in medical information system development and upgrade projects, we support the statement that no single methodology can be used with its full potential in all cases. Instead, mentioned methodologies have their own place in complex software projects and within certain category of sub-projects give the best results. In this paper we presented the guideline on choosing adequate methodology in different development and upgrade projects. All examined projects are defined within the scope of larger medical information system called Medis .NET developed by our research group, and deployed in 30 healthcare institutions. The bottom-line is that during requirement collection we rely on model and feature driven development supported by automatic code generation tools, which lead to faster prototype generation. Next, dividing the set of functionalities to sub-projects we group them in three categories - core projects, user-oriented, and loosely coupled application. For core projects we find traditional methodologies suitable since their outcome is a stable process and rich documentation. User-oriented sub-projects are developed under standard SCRUM, while for loosely coupled applications we chose Lean. We measured the effects of chosen approaches comparing time spent against estimated time for development, and by analyzing code metrics. Code metrics were automatically generated by our development environment, Microsoft Visual Studio, and we take into account few major values such are maintainability index, lines of codes, class coupling and cyclomatic complexity. In addition, we propose an adaptation for Lean model which gave us promising results in software upgrade projects. The proposed approach put additional responsibility to lead architects, since have to properly identifies all pros and cons for different methodologies and, knowing this well, wisely choose the right methodology for the right sub-project.},
author_keywords={Agile software development;  Lean;  SCRUM;  Traditional software development},
keywords={Agile manufacturing systems;  Application programs;  Automatic programming;  Bioinformatics;  Codes (symbols);  Computer software selection and evaluation;  Information systems;  Quality control;  Software design;  Software engineering;  Stability criteria, Agile software development;  Automatic code generations;  Automatically generated;  Development environment;  Feature driven development;  Healthcare institutions;  Lean;  SCRUM, Medical information systems},
}

@ARTICLE{Carrillo2016181,
author={Carrillo, M.H. and Franky, C. and Páez, P.S. and Pedraza, A.F.},
title={SCLOUDPY: Multi-tenant and cloud web information system for orders processing in SMEs [SCLOUDPY: Sistema Informático Web de Multi-Tenencia para el Procesamiento en la Nube de Pedidos de PYMES]},
journal={Informacion Tecnologica},
year={2016},
volume={27},
number={1},
pages={181-194},
doi={10.4067/S0718-07642016000100019},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959340169&doi=10.4067%2fS0718-07642016000100019&partnerID=40&md5=ee67ebae35b426e1fe14cfb9d50a6bc2},
abstract={This article aims to describe the improvements made to SCLOUDPY, a web system of order flows management in supply chains. The idea is to achieve its expansion to a multitenant system which allows the system to operate in Cloud Computing mode. This allows serving several small and medium size enterprises (SMEs) ensuring the independence of data from these SMEs. To achieve these improvements various methodologies were applied as a DAR assessment (Decision Analysis and Resolution) to select the most relevant requirements, and XP agile methodology for software construction. Finally, a multitenant system that operates in the Cloud that meets the needs of several SMEs was obtained. At the same time the system does not represent additional costs because the system was built with free software. This combination of operating model and software architecture ensures an efficient and flexible system for processing orders.},
author_keywords={Cloud computing;  Modeling;  Multitenant;  Order management;  SME;  Supply chain},
keywords={Cloud computing;  Models;  Supply chains;  World Wide Web, Additional costs;  Agile Methodologies;  Multi tenants;  Operating models;  Order management;  Small and medium-size enterprise (SMEs);  Software construction;  Web information systems, Distributed computer systems},
}

@BOOK{Balakrishnan2016127,
author={Balakrishnan, J.},
title={Design of a framework to implement agility at organizational level},
journal={Emerging Innovations in Agile Software Development},
year={2016},
pages={127-140},
doi={10.4018/978-1-4666-9858-1.ch007},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981555043&doi=10.4018%2f978-1-4666-9858-1.ch007&partnerID=40&md5=b7bb6bd279c41ab203cd52f3d616f187},
abstract={While many existing Agile product development methodologies like SCRUM, Extreme Programming (XP), Dynamic Systems Development Method (DSDM), Feature Driven Development (FDD) etc. cover aspects related to developing & delivering a product solution, they are not meant to provide an end to end framework for an organization to transition / embrace and adopt agile way of software development. For an organization's agile journey to be successful we should consider several organizational elements like how to do a business case for agile, how to build agile leadership qualities for staff at all levels (especially Managers), how to setup & govern an agile organization, how to assess an agile organization etc. © 2016 by IGI Global. All rights reserved.},
}

@ARTICLE{Longo2016133,
author={Longo, F. and Iazzolino, S.},
title={Agile software development: A modeling and simulation showcase in military logistics},
journal={Communications in Computer and Information Science},
year={2016},
volume={422},
pages={133-144},
doi={10.1007/978-3-319-27896-4_12},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958280539&doi=10.1007%2f978-3-319-27896-4_12&partnerID=40&md5=a6681b98f376e9669488f8ce74488e10},
abstract={As well known, Agile Software Development encompasses a set of methods and methodologies for complex and nondeterministic software development projects involving self-organizing and cross-functional groups. Therefore, as in the Manifesto for Agile Software Development, being adaptive, responsive, and cooperative as well as reliable are the underpinning requirements of Agile Methodologies whose inherent nature suggests that profitable results can be achieved when agile practices are absorbed into Modeling and Simulation projects. As a matter of facts, a lot of common ground can be found if well established M&S principles are evaluated against agile practices or vice versa. Indeed, agile software development, likewise simulation, relies on human and technical factors management along the project life cycle. Needless to say that it is not a surprisingly achievement, given that simulation building blocks are pieces of software components integrated with one another. However, it is worth noticing that simulation can provide the groundwork to assess and validate the effects of agile practices and in turn can substantially strengthen its methodological foundations benefiting from advances and best practices in software engineering. To this end, a case study in military logistics will be presented in this paper showing that high-quality results can be achieved applying agile techniques for simulation model development. © Springer International Publishing Switzerland 2016.},
keywords={Application programs;  Computer software;  Life cycle;  Software design, Agile Methodologies;  Agile software development;  Military logistics;  Model and simulation;  Project life cycle;  Software component;  Software development projects;  Technical factors, Software engineering},
}

@ARTICLE{Colonese201659,
author={Colonese, E.},
title={Agile: The human factors as the weakest link in the chain},
journal={Communications in Computer and Information Science},
year={2016},
volume={422},
pages={59-73},
doi={10.1007/978-3-319-27896-4_6},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958240871&doi=10.1007%2f978-3-319-27896-4_6&partnerID=40&md5=042c8d686e75921ca15472aba3e18aa2},
abstract={Despite the excellent results achieved by the agile methodologies, software projects continue to fail. Organizations are struggling to adopt such methods. Resistance to change is strong. The reasons, related to the culture and people, are many. The human factor is the weakest link in the organizational chain. Many inhibitors prevent the adoption of good practices. C.G. Jung stated in 1921 “how difficult it was for people to accept a point of view other than their own.” Based on his mental process, two American researchers, mother and daughter, have created the homonymous model Myers–Briggs Type Indicator (MBTI). The tool helps us to better understanding others and ourselves: how to gather information from the outside, how to elaborate information and make decisions, and how to act afterward. MBTI supports Agile in creating successful teams: better communication, share of leadership, effective problem solving, stress management, etc. Psychological Types at Work, 2013 provides a guide to these items. © Springer International Publishing Switzerland 2016.},
keywords={Application programs;  Chains;  Human engineering;  Human resource management;  Problem solving, Agile Methodologies;  Good practices;  Mental process;  Resistance to change;  Software project;  Stress management;  Weakest links, Software engineering},
}

@ARTICLE{Mitre-Hernández2016295,
author={Mitre-Hernández, H.A. and Lara-Alvarez, C. and González-Salazar, M. and Martín, D.},
title={Decreasing rework in video games development from a software engineering perspective},
journal={Advances in Intelligent Systems and Computing},
year={2016},
volume={405},
pages={295-304},
doi={10.1007/978-3-319-26285-7_25},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983206771&doi=10.1007%2f978-3-319-26285-7_25&partnerID=40&md5=8af727542feaae6618f0721a0d14c953},
abstract={Video game industry is becoming increasingly important due to its revenues and growing capabilities. Information complexity and process agility are limitations for developing a videogame and they may lead to rework. Many rework problems are related to unspecified or ambiguous requirements in game design. For reducing rework, this article proposes an agile development process for video games that aligns the Scrum instance of the software development Project Pattern (sdPP) and the improved Game Design Document (iGDD). For measuring the rework induced by different alternatives, we conducted a case study that compares the proposed approach against a conventional counter proposal in game industry; the results prove that our proposal generates less normalized rework than the counter proposal. © Springer International Publishing Switzerland 2016.},
author_keywords={Requirements engineering;  Rework;  Software engineering;  Video games},
keywords={Application programs;  Computational complexity;  Human computer interaction;  Interactive computer graphics;  Process engineering;  Requirements engineering;  Software engineering, Agile development;  Engineering perspective;  Game design document;  Information complexity;  Rework;  Software development projects;  Video game;  Video game industry, Software design},
}

@ARTICLE{Perkusich2016,
author={Perkusich, M. and Gorgônio, K.C. and Almeida, H. and Perkusich, A.},
title={Assisting the continuous improvement of Scrum projects using metrics and Bayesian networks},
journal={Journal of Software: Evolution and Process},
year={2016},
doi={10.1002/smr.1835},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85005950370&doi=10.1002%2fsmr.1835&partnerID=40&md5=7200a27569205ce5806980b0b895c01e},
abstract={Scrum is a simple process to understand, but hard to adopt. Therefore, there is a need for resources to assist on its adoption. In this paper, we present the process followed to build a Bayesian network to assist on the assessment of the quality of the software process in the context of Scrum projects. The model provides data to help Scrum Masters lead the improvement of business value delivery of Scrum teams. The process is divided into 2 phases. In the first phase, we built the Bayesian network based on expert knowledge extracted from the literature and experts. We used a top-down approach and reasoning to define the key metrics necessary to build the models and their relationships. In the second phase, we updated the Bayesian network based on limitations of the first version. We validated the Bayesian network inferences with 10 simulated scenarios. Comparing both versions, for all scenarios, we improved the accuracy of the inferences. Therefore, we concluded that the Bayesian networks adequately represent Scrum projects from the viewpoint of the Scrum Master. Finally, the model built is in conformance with agile methods tailoring and can be adapted to any Scrum team. © 2016 John Wiley & Sons, Ltd.},
author_keywords={Agile methods;  Bayesian networks;  Continuous improvement;  KaizenScrum},
keywords={Computer software, Agile methods;  Bayesian Network inference;  Business value;  Continuous improvements;  Expert knowledge;  KaizenScrum;  nocv1;  Software process;  Top down approaches, Bayesian networks},
}

@CONFERENCE{Torrecilla-Salinas2016137,
author={Torrecilla-Salinas, C.J. and Sedeño, J. and Escalona, M.J. and Mejías, M.},
title={An Agile approach to CMMI-DEV levels 4 and 5 in Web development projects},
journal={25th International Conference on Information Systems Development, ISD 2016},
year={2016},
pages={137-149},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84995960727&partnerID=40&md5=a1cc2416eccc8c3e2d76c6bf3a17350d},
abstract={CMMI (Capability Maturity Model-Integration) model proposes a set of process areas, including suggested practices, with the aim of helping organizations to improve the quality of their products and processes. It is commonly accepted that as an organization progresses through the different levels of CMMI, the quality of its development might improve as well as the overhead of the development process, impeding it to quickly adapt to customers or partners changing needs. Besides, Agile practices allow quick adaptation and early delivery of business value. The specificity of Web environments makes them suitable for Agile approaches. However, as quality requirements for Web systems increase, a combination of Agile practices allowing organizations to achieve higher levels of CMMI-DEV with a limited process overhead can be very interesting to organizations that aim to keep adaptability. This way, they might strengthen their development processes in order to produce high quality results. This paper presents a gap analysis between the most used Agile practices (Scrum and XP) as well as a mapping proposal, including ad-hoc modifications and other Agile practices, to achieve all CMMI-DEV level 4 and 5 specific goals. To conclude, it drafts relevant conclusions and proposes future lines of research.},
author_keywords={Agile;  CMMI;  EXtreme programming;  Scrum;  Software engineering;  Web engineering},
keywords={Information systems;  Management information systems;  Societies and institutions;  Software engineering, Agile;  CMMI;  EXtreme Programming;  Scrum;  Web engineering, Agile manufacturing systems},
}

@ARTICLE{Reichl20163,
author={Reichl, K. and Fischer, T. and Tummeltshammer, P.},
title={Using formal methods for verification and validation in railway},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2016},
volume={9762},
pages={3-13},
doi={10.1007/978-3-319-41135-4_1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977513727&doi=10.1007%2f978-3-319-41135-4_1&partnerID=40&md5=e349cdb0e3e7bebb5ef56dc000a409d9},
abstract={A very promising and efficient method of showing the correctness of a complex system is using formal methods on a model of that system. To this end there exist plentiful methods and tools for easing the mathematically burdensome process of refinement and proofs, as well as the computationally complex task of model checking. While in todays industrial applications formal methods are mostly used for verification (i.e. for showing that the system model fulfills properties such as completeness and consistency) we propose to use these methods for validation as well (i.e. correspondence of the model with the customer needs). In this paper we show the applicability as well as the limitations of this approach for feature driven development towards continuous verification and validation. As an example we present a model of a railway interlocking system written in Event-B. The model can be instantiated and animated, which in combination with model checking and formal proofs demonstrates the usefulness of the approach. The resulting model can be used again to automatically generate test cases which are suitable to show the correspondence of the implementation and the model, given that the model supports a sufficient level of detail. © Springer International Publishing Switzerland 2016.},
author_keywords={Event-B;  Formal methods;  Validation;  Verification},
keywords={Application programs;  Formal methods;  Formal verification;  Interlocking signals;  Railroads;  Software testing;  Verification, Event-B;  Feature driven development;  Level of detail;  Methods for verification and validations;  Railway interlocking system;  System modeling;  Validation;  Verification-and-validation, Model checking},
}

@CONFERENCE{Tavares2016611,
author={Tavares, B.G. and Da Silva, C.E.S. and De Souza, A.D.},
title={Risk management analysis in software projects which use the scrum framework},
journal={Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
year={2016},
volume={2016-January},
pages={611-616},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988447797&partnerID=40&md5=af3a81122662304fa527af2d1056c27e},
abstract={Studies show one of the reasons for the failure of the software projects is the absence of Risk Management or its improper application. The adoption of Scrum Framework on software projects is increasing. However, the Scrum does not have specific Risk Management activities. In this scenario, this paper presents the results of a survey applied using qualitative approach, in order to analyze how Risk Management is carried out in software projects, which use Scrum. The research method adopted was the case study and the research instrument for data collection was developed based on scientific articles and the application of structured interviews. As a result, this paper presents Risk Management practices which achieved greater and lower agreement among respondents and literature. It was found that Risk Management must be applied continuously in a feedback loop. Furthermore, Scrum projects must not have a high formal planning level, even for the high risk ones. This result does not converge to the literature. The research verified that the Risk Management in Scrum projects is performed differently from its application on traditional methodologies. The framework has native resources, but the use of the classic Risk Management processes must be incorporated and adapted to Scrum.},
author_keywords={Case study;  Risk management;  Scrum;  Software},
keywords={Application programs;  Computer software;  Knowledge engineering;  Risk analysis;  Risk assessment;  Risk perception;  Risks;  Software engineering, Management activities;  Management analysis;  Qualitative approach;  Research instruments;  Risk management practices;  Risk management process;  Scientific articles;  Scrum, Risk management},
}

@ARTICLE{Garousi201649,
author={Garousi, V. and Coşkunçay, A. and Demirörs, O. and Yazici, A.},
title={Cross-factor analysis of software engineering practices versus practitioner demographics: An exploratory study in Turkey},
journal={Journal of Systems and Software},
year={2016},
volume={111},
pages={49-73},
doi={10.1016/j.jss.2015.09.013},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949883478&doi=10.1016%2fj.jss.2015.09.013&partnerID=40&md5=a4e24dc48df980622bc9d742bf53dfd7},
abstract={Context Understanding the types of software engineering practices and techniques used in the industry is important. There is a wide spectrum in terms of the types and maturity of software engineering practices conducted in each software team and company. Furthermore, it is important to understand the cross-factor relationship of software engineering practices and practitioner demographics including their companies and projects, e.g., is it the case that practitioners developing software for sectors such as military would utilize software size measurement approaches more, or use different software development methodologies, compared to practitioners developing software for other sectors?, and what kinds of practices are conducted by practitioners in small versus large companies? Objective Our objective is to get an understanding into the cross-factor correlation of various software engineering practices versus practitioner demographics including their companies and projects (e.g., target industry, size and work experience). Such an understanding will enable us to identify patterns and pinpoint special issues which should be studied and addressed in the context of each specific demographic (e.g., small versus large companies). Thus, we decided to conduct an exploratory study in this area and collected real industrial data in the context of Turkey which has a vibrant software industry. Method To achieve the above objective, we use the data from a recent Turkish-wide survey of software engineering practices which was systematically designed with 46 questions based on our past experience in the Canadian context and using the Software Engineering Body of Knowledge (SWEBOK). 202 practicing software engineers participated in the survey. We raise a set of 12 research questions about the cross-factor correlation of software engineering practices and practitioner demographics, and address them using statistical analysis. Results The exploratory study results reveal important and interesting findings about cross-factor relationship of software engineering practices and practitioner demographics. Among some of the most interesting findings are the followings: (1) By analyzing the trends, we were first surprised to see that as a practitioner gets more years of work experience, against what one would expect, s/he experiences more challenges in Software Development Life-Cycle (SDLC) phases and SE tasks; (2) Almost 55% of participants measure software size; (3) Agile/lean development is used the least (16%) by the participants working in the companies serving the military and defense sector; (4) Usage of waterfall is low among participants employed by small-sized companies whereas Agile/lean development is relatively popular among this class of participants; and (5) As company size increases, usage of spiral development slightly increases, whereas usage of extreme programming practices decreases. Conclusion The results of this exploratory study will be useful to software engineering professionals and researchers both in Turkey and world-wide by revealing the cross-factor relationship of software engineering practices versus practitioner demographics. The study raises several new research directions, e.g., (1) Why are not many practitioners using any size nor project estimation metrics and how these fundamental engineering approaches could be utilized more frequently?, (2) What are the best practices, success stories and challenging experiences in using SE tools?, and (3) Why is Agile/lean development is not popular in the military and defense sector and how these approaches could be utilized more frequently. © 2015 Elsevier Inc. All rights reserved.},
author_keywords={Cross-factor analysis;  Practitioner demographics;  Software engineering practices},
keywords={Computer aided software engineering;  Computer software;  Factor analysis;  Life cycle;  Multivariant analysis;  Population statistics;  Professional aspects;  Software engineering;  Surveys, Engineering professionals;  Exploratory studies;  EXtreme Programming;  Practitioner demographics;  Software development life cycle;  Software development methodologies;  Software engineering body of knowledge;  Software engineering practices, Software design},
}

@ARTICLE{Eckhart201617,
author={Eckhart, M. and Feiner, J.},
title={How scrum tools may change your agile software development approach},
journal={Lecture Notes in Business Information Processing},
year={2016},
volume={238},
pages={17-36},
doi={10.1007/978-3-319-27033-3_2},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952683954&doi=10.1007%2f978-3-319-27033-3_2&partnerID=40&md5=6cd222f4b5be1d9ee870c9b09c648576},
abstract={A major problem for distributed Scrum teams is proper communication between the involved parties to ensure the quality of the final product. This is especially true for coordination issues such as sharing requirements, time schedules, to-dos and code artefacts. Hence, ScrumMasters complain frequently about software tools not suiting their daily needs when supporting agile teamwork, finally leading to the fact of not using a Scrum tool at all. In this paper we describe the extensive interviews held with selected ScrumMasters in which they explained their current tools and the existing gap to their real needs. Within this context, they were able to define the features and aspects they really need. After collecting those requirements for their daily work, we extracted the most wanted ingredients, prioritised them and finally forged them into an Open Source tool called Scrumpy, helping us to present a first solution, which focuses on the agile philosophy of Scrum and the elements needed most by ScrumMasters. Features of Scrumpy include, for example, web-based access to the task board with real-time updates, advanced dashboard visualisation techniques and a sophisticated chat system, which enables effortless communication for distributed teams. Although we already have first anecdotal feedback from users, we plan to improve the tool in a next step by adding more commodity features, perform additional mobile usability tests and systematically evaluate Scrumpy with a large number of end users. © Springer International Publishing Switzerland 2016.},
author_keywords={Agile software development;  Distributed Scrum;  Scrum;  Scrum task board;  Scrum tools},
keywords={Agile manufacturing systems;  Computer software selection and evaluation;  Distributed computer systems;  Open source software;  Software design, Agile software development;  Distributed scrums;  Distributed teams;  Mobile usability;  Open source tools;  Real-time updates;  Scrum;  Scrum task board, Software engineering},
}

@ARTICLE{Carlson20167,
author={Carlson, D.},
title={From the trenches: Improving the scrum daily standup meeting},
journal={CrossTalk},
year={2016},
volume={29},
number={6},
pages={7-9},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84995644706&partnerID=40&md5=92e57756c5a6aeed42f90df95db0f86a},
abstract={Among the most important work sessions in "scrum" is the scrum daily standup meeting. This meeting, which must be held every working day in order to be effective, is critical for team members to communicate their work commitments to each other. The most significant reasons why daily standup meetings are not effective become apparent after years of working with "Agile" teams, but ranking these reasons is difficult. In order to do so, one can rely on personal experiences. During the many years I have spent "in the trenches" facilitating and coaching teams, I have observed that most daily standup problems are caused by problems with either individual team members, project teams, or management. This article addresses several examples of unfavorable daily standup scenarios that exemplify all three of these causes. It is assumed that readers are familiar with the daily standup process; therefore, steps on how to conduct a standup meeting are not discussed in this article.},
keywords={Crosstalk;  Human computer interaction;  Software engineering, nocv1;  Personal experience;  Project team;  Team members, Human resource management},
}

@ARTICLE{Arseni2016181,
author={Arseni, G.},
title={Role of the design authority in large scrum of scrum multi-team-based programs},
journal={Communications in Computer and Information Science},
year={2016},
volume={422},
pages={181-189},
doi={10.1007/978-3-319-27896-4_15},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958279300&doi=10.1007%2f978-3-319-27896-4_15&partnerID=40&md5=a040a4bb4690ca22d62f309c837640ad},
abstract={This paper discusses the vital role of the Design Authority (DA) within large Military Scrum of Scrum multi-team-based programs, in assuring that systems would support a military operation according to organizational and administrative procedures. It is a matter of fact that multiple teams and progressive technology can create a thwarting environment leading to implementation fatigue; finding balance between agility versus standardization or functionality versus intuitiveness often leads to discussions among the stakeholders. The DA manages these problems and maximizes opportunities, taking the responsibility for ensuring a solution that meets goals, needs, and specifications during the entire Agile process. A discrete DA will act in coordination with the teams sprint-by-sprint, defining and communicating portfolio vision, technical strategies, architecture standards, and design methodologies. DA maintains an end-to-end view with a mission-focused perspective, ensuring the delivery of business value and providing timely and useful information to team members and stakeholders; absence of a DA yields uncertainty among project participants on their tasks and roles. © Springer International Publishing Switzerland 2016.},
keywords={Human resource management;  Military operations;  Software engineering, Administrative procedures;  Business value;  Design authorities;  Design Methodology;  Multiple teams;  Project participants;  Team-based projects;  Technical strategy, Application programs},
}

@ARTICLE{Olszewska2016621,
author={Olszewska, M. and Ostroumov, S. and Waldén, M.},
title={Using scrum to develop a formal model – An experience report},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2016},
volume={10027 LNCS},
pages={621-626},
doi={10.1007/978-3-319-49094-6_48},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84998827878&doi=10.1007%2f978-3-319-49094-6_48&partnerID=40&md5=fd6a5c3b17738ac849712dbaccd0f64f},
abstract={The benefits of merging agile and formal methodologies have been discussed on the conceptual level for several years now, also in our previous work. This paper presents a hands-on investigation on the synergy of the Event-B formal method within the Scrum development process. A case study of the landing gear critical system is used to investigate the feasibility of such a merge. We provide the quantitative and qualitative analysis of the case study by measuring developer’s effort, size and complexity of the created model, as well as observing the development process. Our results show that the merge increases quality, in terms of sustaining the creation of correct and reliable systems (Event-B) and at the same time smoothens the modelling process, enhances comprehension of the system domain and requirements (Scrum). © Springer International Publishing AG 2016.},
author_keywords={Agile development process;  Event-B;  Formal methods;  Scrum},
keywords={Agile manufacturing systems;  Landing gear (aircraft);  Process engineering, Agile development;  Conceptual levels;  Development process;  Event-B;  Experience report;  Modelling process;  Quantitative and qualitative analysis;  Scrum, Formal methods},
}

@ARTICLE{Lehnen2016212,
author={Lehnen, J. and Schmidt, T.S. and Herstatt, C.},
title={Bringing agile project management into lead user projects},
journal={International Journal of Product Development},
year={2016},
volume={21},
number={2-3},
pages={212-232},
doi={10.1504/IJPD.2016.078867},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84986224360&doi=10.1504%2fIJPD.2016.078867&partnerID=40&md5=93741fdc54f05a5aefaa457828c65f0e},
abstract={The lead user method symbolises a technique of integrating advanced users into the New Product Development (NPD) to cope with firm's increasing necessity of successfully innovating. Implementing this method, companies often face challenges typically linked to barriers in project management. We analyse these drawbacks conducting an exploratory study among 249 companies in the German-speaking countries. To strengthen our results, we conduct six indepth interviews to collect best practices in project management-related aspects. The outcome is a model based on agile project management and the stage-gate process that compensates identified weaknesses and provides an efficient, flexible implementation of lead users into practice. Copyright © 2016 Inderscience Enterprises Ltd.},
author_keywords={Agile project management;  Agile/stage-gate hybrid;  Innovation management;  Lead user;  New product development;  Scrum;  Stage-gate process;  User innovation},
keywords={Product development;  Reconfigurable hardware, Agile project management;  Agile/stage-gate hybrid;  Innovation management;  Lead users;  New product development;  Scrum;  Stage gates;  User innovation, Project management},
}

@ARTICLE{Rolland2016244,
author={Rolland, K.H. and Mikkelsen, V. and Næss, A.},
title={Tailoring agile in the large: Experience and reflections from a large-scale agile software development project},
journal={Lecture Notes in Business Information Processing},
year={2016},
volume={251},
pages={244-251},
doi={10.1007/978-3-319-33515-5_22},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84971520486&doi=10.1007%2f978-3-319-33515-5_22&partnerID=40&md5=00b8ae8a534e928b9561d880a247ddd0},
abstract={It is not surprising that agile methods are tailored or customized in various contexts and projects. However, there is little advice for practitioners for how to go about tailoring agile methods in large-scale projects. Henceforth, the aim of this experience report is to highlight some of the challenges with largescale agile software development and especially how to deal with these challenges involves continuous tailoring of the agile method in use. In so doing, we report from a large-scale agile software development effort involving more than 120 participants in a Governmental organization and running for 3,5 years. The project consisted of three deliverables, partly developed in parallel after a delivery model based on Scrum. After a much troubled start related to scaling challenges and architecture complexity during the first deliverable, the project was turnaround and the second and third deliverables were portrayed fairly successful by both supplier and customer. From a practitioner’s perspective, we found that novel practices emerged through out the project that improved the way of working – especially across teams and stakeholders. Based on this, we describe some guidelines for tailoring agile in the large. © The Author(s) 2016.},
author_keywords={Large-scale agile software development;  Method tailoring;  Software development practices},
keywords={Software design, Agile methods;  Agile software development;  Agile software development projects;  Delivery models;  Experience report;  Large-scale projects;  Method tailoring;  Software development practices, Software engineering},
}

@CONFERENCE{DosSantos2016158,
author={Dos Santos, R.A. and Zorzo, A.F. and Marczak, S.},
title={Towards an SDLC for projects involving Distributed Systems},
journal={ICEIS 2016 - Proceedings of the 18th International Conference on Enterprise Information Systems},
year={2016},
volume={1},
pages={158-165},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979498927&partnerID=40&md5=471e120502fd9603e76342383e84e794},
abstract={Since the 1970's, Distributed Systems have been turning into a more viable and reliable option for the implementation of information systems. This evolution continued ever since, and now they are applicable to a variety of purposes, such as online games, cloud computational solutions, etc. It is possible then to assume that today, Distributed Systems are found everywhere, and that there is a great probability for any given inprogress software development project to be using this paradigm as part of its delivery. Thus, it is relevant to study the impacts that Distributed Systems bring to Project Management. In this paper we discuss those impacts and challenges, as well as propose a Software Development Lifecycle and some associated practices that are to be used for software development projects involving Distributed Systems. Such practices are optimized for implementation under a Waterfall model, but are also adaptable for use with well known agile framework Scrum. The preliminary validation with industry professionals suggests that our proposals do support more appropriate management and execution of projects involving Distributed Systems solutions. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
author_keywords={Distributed Systems;  Distributed teams;  Life cycle;  PLC;  Project Management;  SDLC},
keywords={Human resource management;  Information systems;  Internet;  Life cycle;  Online systems;  Programmable logic controllers;  Project management;  Software design, Computational solutions;  Distributed systems;  Distributed teams;  Industry professionals;  SDLC;  Software development life cycle;  Software development projects;  Waterfall model, Distributed computer systems},
}

@CONFERENCE{Haryono201529,
author={Haryono, K.},
title={The extreme programming approach for financial management system on local government},
journal={Proceedings 2015 International Conference on Science and Technology, TICST 2015},
year={2015},
pages={29-34},
doi={10.1109/TICST.2015.7369335},
art_number={7369335},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963649827&doi=10.1109%2fTICST.2015.7369335&partnerID=40&md5=cbaf1f280c221130b7a9f9ccc7bd7121},
abstract={This paper reports lessons from implementation of a financial information system in the Indonesian public sector. Such the system is complex, as it should adhere various rigid government regulations and involves various levels of government units. In developing the system, we adopted an extreme programming approach, with an ultimate goal to meet requirements defined by all levels of government units. The evaluation indicated that there were no significant problems experienced at both the upper and the middle levels. But this was not the case at the lower (sub-organization) level. Although we found that 98% of the involved users agreed that their requirements has been met, and 100% of them were satisfied with the use of the extreme programming approach, we found that the users at the lower level in general had a high level of resistance against changes, which demanded a better strategy to cope with such problem. A recommended solution includes involving them more intensively throughout the development of the system, aimed at eliciting system requirements and cultivating a better awareness among them. © 2015 IEEE.},
author_keywords={Extreme programming;  Financial management;  Local government;  Model SDLC},
keywords={Laws and legislation, EXtreme Programming;  Financial information systems;  Financial management systems;  Financial managements;  Government regulation;  Local government;  Public sector;  System requirements, Finance},
}

@CONFERENCE{Øvad2015397,
author={Øvad, T. and Bornoe, N. and Larsen, L.B. and Stage, J.},
title={Teaching software developers to perform UX tasks},
journal={OzCHI 2015: Being Human - Conference Proceedings},
year={2015},
pages={397-406},
doi={10.1145/2838739.2838764},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963607051&doi=10.1145%2f2838739.2838764&partnerID=40&md5=4a6a9f6bbb3f392330a2802912a2d064},
abstract={Good UX design is becoming important within the industry when developing new products. This entails that UX skills have to be available in the development processes. This paper investigates the opportunities of using software developers as a UX work resource in the day-to-day working practice. This is done via an action research study where the developers were provided with material concerning a modified AB usability test, by training them in performing this type of work, and by using their feedback to improve the method and the material. The overall result of the study is positive and it is found that by using the developers' feedback in the modification process, the method has truly become applicable within an agile, industrial setting. In combination with a guideline and template this has induced the developers to feel confident in independently performing this type of work. Copyright © 2015 ACM.},
author_keywords={Action research;  Agile software development;  Scrum;  Training;  Usability;  User Experience (UX) design},
keywords={Human computer interaction;  Personnel training;  Product design;  Software engineering, Action research;  Agile software development;  Scrum;  Usability;  User experience design, Software design},
}

@CONFERENCE{Gary2014,
author={Gary, K.A. and Sohoni, S. and Xavier, S.},
title={Pre-conference workshop: Agile teaching and learning},
journal={Proceedings - Frontiers in Education Conference, FIE},
year={2014},
volume={2014},
doi={10.1109/FIE.2015.7344021},
art_number={7344021},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960466116&doi=10.1109%2fFIE.2015.7344021&partnerID=40&md5=cbd210ec296fb37a0550083e8738134d},
abstract={Agile methods are the fastest rising software lifecycle process methods in software engineering. Educators are converting traditional and project-base courses to agile in response, but this is a daunting task with few structured teaching resources methods available to reduce the burden on the educator. In professional practice, agile methods have been particularly effective in empowering experienced software engineers through its focus on empirical process control and constant feedback loop. These process traits are difficult to simulate in an academic setting, as student developers are inexperienced, synchronous meeting times are few and far between, and obtaining meaningful constant feedback a laborious undertaking. This workshop will present a comprehensive approach to teaching Agile methods that is itself agile, employing a highly iterative, continuous feedback-driven process. Pedagogical and assessment strategies will be shared, and the presenter will facilitate a best practices interactive discussion to draw out lessons learned from workshop participants. Specific agile practices with supporting labs from the popular Scrum and eXtreme Programming (XP) process models will be presented. The workshop will also encourage interaction amongst participants to share best practices and lessons learned. Research directions related to the application of agile principles to teaching and learning will be discussed. © 2015 IEEE.},
author_keywords={agile;  assessment;  integration;  software engineering;  software process},
keywords={Education;  Education computing;  Integration;  Iterative methods;  Software engineering, agile;  assessment;  Assessment strategies;  Professional practices;  Software life cycles;  Software process;  Teaching and learning;  Workshop participants, Teaching},
}

@CONFERENCE{Valentin2014,
author={Valentin, E. and Carvalho, J.R.H. and Barreto, R.},
title={Rapid improvement of students' soft-skills based on an agile-process approach},
journal={Proceedings - Frontiers in Education Conference, FIE},
year={2014},
volume={2014},
doi={10.1109/FIE.2015.7344408},
art_number={7344408},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960372768&doi=10.1109%2fFIE.2015.7344408&partnerID=40&md5=75720112a5ceb3351de26595a8e2d41d},
abstract={Manaus, the capital city of the state of Amazonas and the sixth Brazilian largest gross domestic product, demands highly qualified hardware and software developers for consumer electronics and telecommunication sectors of its free trading zone. However, what can be viewed as an opportunity for the youth alumni of local institutions of higher education contrasts with the low level of qualification provided by such institutions. As a consequence, most positions either remain opened or are occupied by professionals from other Brazilian regions. Moreover, the issue relies more on soft skills than on hard skills, as the local institutions are aligned with International standard academic curriculum and cover modern technologies. Soft skill is the enter barrier to the job market. English proficiency, communication skill, writing (in both Portuguese and English) skill, among others, are top listed failure reasons in the hiring processes. As one project manager highlighted: 'it is much cheaper and quicker for the company to fill in some specific technological gaps, than to leverage a poor English proficiency'. This paper presents a proposal of an involving activity aiming to address several soft skills at the same time, with minimal disturbance in the student daily routine. The concept is based on the impact of immersing the student in a systematic project development experience. Clear communicated project goal, where the students have specific roles, with assigned accountable peers, everything under the umbrella of an Agile-like software development process (derived from SCRUM) are in the core of the activity. This paper details the incremental implementation methodology of the program among four research areas, and 23 projects or project activities, involving 34 students. The results of the two years running program will also be described, including the increase of progress visibility by advisors, the improvement of students communication and writing skills and the qualification on SCRUM software development process tools and documentation. The authors mapped important success factors in achieving relevant improvement on students' profile, and presented a list of recommendations for the next phase of the program, including some obvious one, as the importance of the active participation of advisors, and some less obvious one, like the resistance to the Internet online tool due to daily meeting coinciding with the peak of Internet usage in the University. © 2015 IEEE.},
author_keywords={Cities and towns;  Companies;  Context;  Education;  Scrum (Software development);  Software;  Writing},
keywords={Commerce;  Computer software;  Consumer electronics;  Curricula;  Education;  Industry;  Internet;  Personnel training;  Program documentation;  Societies and institutions;  Software design;  Software engineering;  Technical writing, Cities and towns;  Context;  Gross domestic products;  Implementation methodology;  International standards;  Scrum (Software development);  Software development process;  Telecommunication sector, Students},
}

@ARTICLE{Bruegge2015,
author={Bruegge, B. and Krusche, S. and Alperowitz, L.},
title={Software engineering project courses with industrial clients},
journal={ACM Transactions on Computinig Education},
year={2015},
volume={15},
number={4},
doi={10.1145/2732155},
art_number={17},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954327014&doi=10.1145%2f2732155&partnerID=40&md5=e07b2b904f5eb7dda3da6a5eadc4e851},
abstract={There is an acknowledged need for teaching realistic software development in project courses. The design space for such courses is wide, ranging from single-semester to two-semester courses, from single-client to multicustomer courses, from local to globally distributed courses, and from toy projects to projects with real clients. The challenge for a nontrivial project course is how to make the project complex enough to enrich students' software engineering experience, yet realistic enough to have a teaching environment that does not unduly burden students or the instructor. We describe a methodology for project courses that is realizable for instructors, improves students' skills, and leads to viable results for industry partners. In particular, recent advances in release management and collaboration workflows reduce the effort of students and instructors during delivery and increase the quality of the deliverables. To enable release and feedback management, we introduce Rugby, an agile process model based on Scrum that allows reacting to changing requirements. To improve early communication, we use Tornado, a scenario-based design approach that emphasizes the use of informalmodels for the interaction between clients and students. The combination of Rugby and Tornado allows students to deal with changing requirements, produce multiple releases, and obtain client feedback through the duration of the course. We describe our experience with more than 300 students working on 40 projects with external clients over a 4-year period. In the latest instance of our course, the students have produced more than 7000 builds with 600 releases for eleven clients. In an evaluation of the courses, we found that the introduction of Rugby and Tornado significantly increased students' technical skills, especially with respect to software engineering, usability engineering, and configuration management, as well as their nontechnical skills such as communication with the client, teamwork, presentation, and demo management. Finally, we discuss how other instructors can adapt the course concept. Copyright © 2015 ACM.},
author_keywords={Agile methods;  Communication models;  Continuous delivery;  Continuous integration;  Executable prototypes;  Feedback;  Informal modeling;  Prototyping;  Release management;  Scenario-based design;  Scrum;  Unified Process;  User involvement;  Version control system},
keywords={Curricula;  Education;  Feedback;  Human resource management;  Software design;  Software engineering;  Software prototyping;  Students;  Tornadoes;  Usability engineering, Agile methods;  Communication models;  Continuous delivery;  Continuous integrations;  Executable prototypes;  Release management;  Scenario-based design;  Scrum;  Unified process;  User involvement;  Version control system, Teaching},
}

@CONFERENCE{Al-Elaimat2015,
author={Al-Elaimat, A. and Al-Ghuwairi, A.-R.},
title={Procedural assessment process of software quality models using agility},
journal={ACM International Conference Proceeding Series},
year={2015},
volume={23-25-November-2015},
doi={10.1145/2816839.2816884},
art_number={a61},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959925641&doi=10.1145%2f2816839.2816884&partnerID=40&md5=3dc130ab1381c3151e2a6d2163fa0b81},
abstract={At the present time, software manufacturing required more than constructing process, even if the manufacturer company used international standards that perform an ideal development life cycle process model. In particular, improvement practices that satisfy development and maintenance process is fundamental requirement now days, which perform in the use of process enhancement models that hold a collected works for the purpose of enabling software manufacturer to increase the capability of the software process improvement (SPI). Moreover, additional refinements required to integrate development process with SPI, which demand to treat both of them as parts of wild-range model, where both suits of process operate in harmonized manner. The generated multimodel can be worked under the management of quality model that responsible for specifying and evaluating software quality product. Therefore, achieving such multimodel that surround development, improvement, and raising the quality of software product process within a reasonable period of time is difficult effort to manage. Since that, the propose of this paper is to initiate procedural assessment process that apply agility practices to manage wild-range multimodel contain software development, improvement, and quality process. © 2015 ACM.},
author_keywords={Agile approach;  CMMI;  Extreme programming;  ISO/IEC 12207;  ISO/IEC 25010;  Software quality multimodel},
keywords={Computer software selection and evaluation;  Information science;  Life cycle;  Manufacture, Agile approaches;  CMMI;  EXtreme Programming;  ISO/IEC;  Iso/iec 25010;  Multi-model, Software design},
}

@ARTICLE{Farinango20153668,
author={Farinango, C.D. and Benavides, J.S. and Lopez, D.M.},
title={OpenUP/MMU-ISO 9241-210. Process for the human centered development of software solutions},
journal={IEEE Latin America Transactions},
year={2015},
volume={13},
number={11},
pages={3668-3675},
doi={10.1109/TLA.2015.7387947},
art_number={7387947},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962260417&doi=10.1109%2fTLA.2015.7387947&partnerID=40&md5=0138e02858a69c4e0b91df3d74446aba},
abstract={Problem: There are several approaches that attempt to integrate the principles and recommendations of the User Centered Design (UCD) into software development processes. However, no single approach has been found in the literature, which completely integrates the activities and recommendations of the ISO 9241 210 standard within SCRUM or RUP. Objective: The aim of this paper is to propose a software development process that incorporates the recommendations and activities of the ISO 9241-210 specification. Results: The following results were obtained: a) the selection, from a total of 10 processes found in the literature, of the software development process that better integrates the DCU principles and recommendations using as selection criteria the elements of the SPEM 2.0 meta-model. The OpenUP /MMU-ISO process was chosen as the more complete one b) comparison of the ISO 13407 and ISO 9241 210 standards c) an updated version of the OpenUP /MMU-ISO process according to the recommendations and activities of the ISO 9241-210 standard d) an application of the updated process in a case study in health care, involving the development of a Personal Health Record System (PHR-S). Conclusions: The results of this paper support the conclusion that the definition of development processes with the explicit integration of ISO standards for UCD has not been extensive; altogether with the instantiation of the process in a real life project demonstrates that the proposed updated process could be used as a reference in the development of software products. It also allowed defining a set of base parameters to evaluate development processes based on the SPEM standard. © 2003-2012 IEEE.},
author_keywords={Human Centred Design;  ISO 9241-210;  Software Development Process;  SPEM},
keywords={Software engineering;  Standardization;  User centered design, Development process;  Explicit integration;  Human centred design;  ISO 9241-210;  Personal health record;  Software development process;  SPEM;  User Centered Design(UCD), Software design},
}

@CONFERENCE{Heikkila2015199,
author={Heikkila, V.T. and Damian, D. and Lassenius, C. and Paasivaara, M.},
title={A Mapping Study on Requirements Engineering in Agile Software Development},
journal={Proceedings - 41st Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2015},
year={2015},
pages={199-207},
doi={10.1109/SEAA.2015.70},
art_number={7302452},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958267829&doi=10.1109%2fSEAA.2015.70&partnerID=40&md5=f3fa93d87a3a1e6ca1d9cd6e9561fa8a},
abstract={Agile software development (ASD) methods have gained popularity in the industry and been the subject of an increasing amount of academic research. Although requirements engineering (RE) in ASD has been studied, the overall understanding of RE in ASD as a phenomenon is still weak. We conducted a mapping study of RE in ASD to review the scientific literature. 28 articles on the topic were identified and analyzed. The results indicate that the definition of agile RE is vague. The proposed benefits from agile RE included lower process overheads, a better requirements understanding, a reduced tendency to over allocate development resources, responsiveness to change, rapid delivery of value, and improved customer relationships. The problematic areas of agile RE were the use of customer representatives, the user story requirements format, the prioritization of requirements, growing technical debt, tacit requirements knowledge, and imprecise effort estimation. We also report proposed solutions to the identified problems. © 2015 IEEE.},
author_keywords={agile development;  mapping study;  requirements engineering;  scrum},
keywords={Application programs;  Mapping;  Public relations;  Requirements engineering;  Software design, Agile development;  Agile software development;  Customer relationships;  Customer representative;  Development resources;  Mapping studies;  Scientific literature;  scrum, Software engineering},
}

@CONFERENCE{Braz201597,
author={Braz, A. and Rubira, C.M.F. and Vieira, M.},
title={Development of Complex Software with Agile Method},
journal={Proceedings - 2015 Agile Conference, Agile 2015},
year={2015},
pages={97-101},
doi={10.1109/Agile.2015.18},
art_number={7284605},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962127792&doi=10.1109%2fAgile.2015.18&partnerID=40&md5=46b3dbed5ae4efc0d8e7aa9d0760a84b},
abstract={Agile Software Development (ASD) has been on mainstream through methodologies such as XP and Scrum enabling them to be applied in the development of complex and reliable software systems. This paper is the end result of the Master's dissertation of the main author, and proposes a solution to guide the development of complex systems based on components by adding exceptional behavior modeling practices to Scrum, resulting in the Scrum+CE method (Scrum with Exceptional Behavior). In order to evaluate the proposed method, a synthetic controlled experiment was conducted with three groups. We compared the efficiency of the new process in relation to plain Scrum and the results were the production of a better quality software but with less features implemented during the same amount of time. © 2015 IEEE.},
author_keywords={Agile Software Development;  Component-Based Development;  Exception handling;  Reliability;  Scrum;  Software Engineering},
keywords={Agile manufacturing systems;  Reliability;  Software engineering;  Software reliability, Agile software development;  Complex software;  Component-Based Development;  Controlled experiment;  Exception handling;  Quality software;  Scrum;  Software systems, Software design},
}

@ARTICLE{Zykov201651,
author={Zykov, S.V.},
title={Software methodologies: Are our processes Crisis-Agile?},
journal={Smart Innovation, Systems and Technologies},
year={2016},
volume={61},
pages={51-68},
doi={10.1007/978-3-319-42966-3_3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007170466&doi=10.1007%2f978-3-319-42966-3_3&partnerID=40&md5=267efba561b0422c71c0f3b2ac4a6203},
abstract={In this chapter, we discuss software development methodologies. These are adaptive process frameworks adjustable to software product size and scope. They usually include a set of methods, principles and techniques, and software development tools. Each of the methodologies can implement any of the lifecycle models. We discuss the difference between formal and agile methodologies. The formal methodologies include more artifacts; they have a rich set of complex processes, which include larger workflows and smaller activities. For each activity, every role assigned to it produces a deliverable. In crisis conditions, such as hardly formalizable problems, rapidly changing requirements and other uncertainties, agile methodologies, which are more adaptive and flexible in terms of artifacts, are applicable. The agile methodologies rely on self-disciplined and self-manageable teams, and consequently they are more constrained in terms of human-related factors. Similar to lifecycle models, there is no “silver bullet” in software development methodologies. Due to rigorous processes and more artifacts, formal methodologies are suitable for large-scale product development. Agile methodologies require special techniques and high level of discipline; otherwise, they can likely result in a low quality of software production. © Springer International Publishing Switzerland 2016.},
author_keywords={Agile methodology;  Formal methodology;  Software development methodology},
keywords={Formal methods;  Life cycle;  Software design, Agile Methodologies;  Complex Processes;  Formal methodology;  Large-scale products;  Software development methodologies;  Software development tools;  Software methodologies;  Software products, Software engineering},
}

@CONFERENCE{Scepanovic2015,
author={Scepanovic, S. and Beus-Dukic, L.},
title={Teaching requirements engineering: EUROWEB experience},
journal={ACM International Conference Proceeding Series},
year={2015},
volume={07-11-September-2015},
doi={10.1145/2797433.2797473},
art_number={a38},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958551751&doi=10.1145%2f2797433.2797473&partnerID=40&md5=219bbb803d1ac061a60f4af66b5eba49},
abstract={In this paper, we describe the results of cooperation between University of Westminster (UK) and Mediterranean University (Montenegro) in the development of a curriculum for teaching Requirements Engineering (RE). RE is traditionally taught in academia using an RE process which starts from a well-defined problem. Our approach focuses on the early stages of requirements discovery, where students have to learn both about the application domain and about what stakeholders think is the problem. We share our experiences gained through teaching RE to several student cohorts in both institutions and discuss some of the advantages and disadvantages of our approach. © 2015 ACM.},
author_keywords={Agile Software Development;  Requirements Engineering education;  Scrum},
keywords={Curricula;  Requirements engineering;  Software architecture;  Software design;  Software engineering, Agile software development;  Requirements discovery;  Scrum;  Westminster, Engineering education},
}

@CONFERENCE{Bosníc2015,
author={Bosníc, I. and Ciccozzi, F. and Čavrak, I. and Di Nitto, E. and Feljan, J. and Mirandola, R.},
title={Introducing SCRUM into a distributed software development course},
journal={ACM International Conference Proceeding Series},
year={2015},
volume={07-11-September-2015},
doi={10.1145/2797433.2797469},
art_number={a34},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958536298&doi=10.1145%2f2797433.2797469&partnerID=40&md5=f16e1053c23e863077b5890cddf758dd},
abstract={The growing enactment of Global Software Engineering in industry has triggered educational institutions to perceive the importance of preparing students for distributed software development. During the last twelve years we have disclosed advantages and pitfalls of GSE to our students through our Distributed Software Development course. After running the projects according to the iterative process model for eleven years, we decided to shift to an agile development model, SCRUM. This decision was due to the growing industrial adoption of agile methods, but more importantly to increase proactiveness, sense of responsibility, and to balance the workload among the project team members. In this paper we describe the process and outcomes of our first attempt at introducing SCRUM in our distributed course. © 2015 ACM.},
author_keywords={Agile methods;  Distributed software development;  Education;  Global Software Engineering;  SCRUM},
keywords={Curricula;  Education;  Education computing;  Iterative methods;  Software architecture;  Software engineering;  Students, Advantages and pitfalls;  Agile methods;  Distributed software development;  Educational institutions;  Global software engineering;  Industrial adoption;  Iterative process model;  SCRUM, Software design},
}

@CONFERENCE{Rojas2015,
author={Rojas, L.A. and Macías, J.A.},
title={An agile information-architecture-driven approach for the development of user-centered interactive software},
journal={ACM International Conference Proceeding Series},
year={2015},
volume={07-09-September-2015},
doi={10.1145/2829875.2829919},
art_number={a50},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960080563&doi=10.1145%2f2829875.2829919&partnerID=40&md5=b3b5f99228d313888ad2f6ace26418c4},
abstract={For the most part, Information Architecture processes include sets of activities and techniques to be carried out by the development team to create interactive applications effectively, involving usability concerns at every development step. In fact, plenty of process models have already been proposed to bridge the gap between User-Centered Development and Information Architecture, empowering the development team to build usable applications successfully. However, the combination of User- Centered Development and Information Architecture paradigms sometimes results in cumbersome process models containing lots of phases and activities to be considered, which increases the cycle time to have partial and validated software increments readily. As less effort has been devoted to speed up the usable Information Architecture development, the aim of this paper is to address such problem. To do so, we present Scrum-UIA, an agile and usable development process driven by the Information Architecture. This process is intended to develop web applications by splitting up responsibilities and tasks, and decreasing the time to perform technical activities, in order to readily obtain usable software increments. © 2015 ACM.},
author_keywords={Agile Development;  Information Architecture;  Usability;  User-Centered Design},
keywords={Application programs;  Computer software;  Information management;  Information retrieval;  Information science;  User centered design, Agile development;  Information architectures;  Interactive applications;  Interactive software;  Technical activities;  Usability;  User-centered development;  Validated softwares, Human computer interaction},
}

@BOOK{Misra2015417,
author={Misra, R. and Panigrahi, C.R. and Panda, B. and Pati, B.},
title={Software design},
journal={Handbook of Research on Computational Simulation and Modeling in Engineering},
year={2015},
pages={417-454},
doi={10.4018/978-1-4666-8823-0.ch014},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958139738&doi=10.4018%2f978-1-4666-8823-0.ch014&partnerID=40&md5=7ba722e5a1ca652b7ccd49588211a186},
abstract={This chapter on "Software Design" emphasizes the role of modeling, prototyping, and simulation in software design. The chapter introduces the principles of software design, issues and challenges. Modeling techniques used in procedural and object oriented methodologies is presented along with the Unified Modeling Language (UML). The suitability of prototyping, as a design artifact and a simulation method is briefly discussed. Software processes such as Rapid Application Development (RAD), Rational Unified Process (RUP) and Agile methodologies which influence the design process have been discussed and recommended. The chapter then deals with Design Metrics for Quality Analysis, Software Risk Analysis and Threat Modeling for design of secure software. Finally, some of the recent research topics such as Model Driven Architecture (MDA), Model Driven Development (MDD), Meta Object Facility (MOF), and Model Driven Testing (MDT) have been covered. © 2016 by IGI Global. All rights reserved.},
}

@ARTICLE{Rodriguez20153142,
author={Rodriguez, G. and Soria, A. and Campo, M.},
title={Supporting assessment of practices in software engineering courses},
journal={IEEE Latin America Transactions},
year={2015},
volume={13},
number={9},
pages={3142-3148},
doi={10.1109/TLA.2015.7350070},
art_number={7350070},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961738580&doi=10.1109%2fTLA.2015.7350070&partnerID=40&md5=4087e1ab91418051879ed9de937db0f7},
abstract={The main goal of the software engineering courses is to prepare students to face typical problems that occur in professional contexts. Thus, students need to be provided with tools and resources to be trained correctly, and therefore, courses need to be reoriented towards software industry demands without neglecting the academic quality. In this context, Scrum, which is widely used for manufacturing software, arises as a suitable teaching strategy to introduce students the main software engineering practices usually performed by the industry. This work proposes a teaching model based on Scrum and reinforced with agile coaching. This novel model has been compared to RUP (Rational Unified Process) and validated using the framework CMMI (Capability Maturity Model Integration) to measure the coverage of practices achieved by our model. The results show that our agile teaching model allows students to achieve higher coverage of software engineering practices, and maximize their learning experience. © 2003-2012 IEEE.},
author_keywords={CMMI;  Scrum;  Software engineering education;  Teaching strategies},
keywords={Education;  Education computing;  Engineering education;  Software engineering;  Students;  Technical presentations, Capability maturity model integration;  CMMI;  Manufacturing software;  Rational Unified Process;  Scrum;  Software engineering course;  Software engineering practices;  Teaching strategy, Teaching},
}

@CONFERENCE{Olszewska20157,
author={Olszewska, M. and Waldén, M.},
title={DevOps meets formal modelling in high-criticality complex systems},
journal={1st International Workshop on Quality-Aware DevOps, QUDOS 2015 - Proceedings},
year={2015},
pages={7-12},
doi={10.1145/2804371.2804373},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960408966&doi=10.1145%2f2804371.2804373&partnerID=40&md5=d580e8abc2aeab687ea05e7c3bdf027e},
abstract={Quality is the cornerstone of high criticality systems, since in case of failure not only major financial losses are at stake, but also human lives. Formal methods that support model based-development are one of the methodologies used to achieve correct-by-construction systems. However, these are often heavyweight and need a dedicated development process. In our work we combine formal and agile software engineering approaches. In particular, we use Event-B and Scrum to assure the quality and more rapid and flexible development. Since we identified that there are more prerequisites for a successful IT project, we use DevOps to embrace the development, quality assurance and IT operations. In this paper we show how formal modelling can function within DevOps and thus promote vanous dimensions of quality and continuous delivery.},
author_keywords={Agile;  DevOps;  Event-B;  Formal modelling;  Scrum},
}

@CONFERENCE{Paasivaara2015285,
author={Paasivaara, M. and Blincoe, K. and Lassenius, C. and Damian, D. and Sheoran, J. and Harrison, F. and Chhabra, P. and Yussuf, A. and Isotalo, V.},
title={Learning Global Agile Software Engineering Using Same-Site and Cross-Site Teams},
journal={Proceedings - International Conference on Software Engineering},
year={2015},
volume={2},
pages={285-294},
doi={10.1109/ICSE.2015.157},
art_number={7202974},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951848904&doi=10.1109%2fICSE.2015.157&partnerID=40&md5=8129808b1ff0c61b01cf81184452d5ca},
abstract={We describe an experience in teaching global software engineering (GSE) using distributed Scrum augmented with industrial best practices. Our unique instructional technique had students work in both same-site and cross-site teams to contrast the two modes of working. The course was a collaboration between Aalto University, Finland and University of Victoria, Canada. Fifteen Canadian and eight Finnish students worked on a single large project, divided into four teams, working on interdependent user stories as negotiated with the industrial product owner located in Finland. Half way through the course, we changed the teams so each student worked in both a local and a distributed team. We studied student learning using a mixed-method approach including 14 post-course interviews, pre-course and Sprint questionnaires, observations, meeting recordings, and repository data from git and Flow dock, the primary communication tool. Our results show no significant differences between working in distributed vs. Non-distributed teams, suggesting that Scrum helps alleviate many GSE problems. Our post-course interviews and survey data allows us to explain this effect, we found that students over time learned to better self-select tasks with less inter-team dependencies, to communicate more, and to work better in teams. © 2015 IEEE.},
author_keywords={Distributed scrum;  Global software engineering;  Project;  Scrum;  Teaching},
keywords={Software engineering;  Students;  Surveys, Agile software engineering;  Communication tools;  Distributed scrums;  Global software engineering;  Industrial product;  Instructional techniques;  Project;  Scrum, Teaching},
}

@CONFERENCE{Schleier-Smith20152059,
author={Schleier-Smith, J.},
title={An architecture for agile machine learning in real-time applications},
journal={Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
year={2015},
volume={2015-August},
pages={2059-2068},
doi={10.1145/2783258.2788628},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954120914&doi=10.1145%2f2783258.2788628&partnerID=40&md5=b43ba396032467f35be3fe986179b1d9},
abstract={Machine learning techniques have proved effective in recom-mender systems and other applications, yet teams working to deploy them lack many of the advantages that those in more established software disciplines today take for granted. The well-known Agile methodology advances projects in a chain of rapid development cycles, with subsequent steps often informed by production experiments. Support for such workflow in machine learning applications remains primitive. The platform developed at if(we) embodies a specific machine learning approach and a rigorous data architecture constraint, so allowing teams to work in rapid iterative cycles. We require models to consume data from a time-ordered event history, and we focus on facilitating creative feature engineering. We make it practical for data scientists to use the same model code in development and in production deployment, and make it practical for them to collaborate on complex models. We deliver real-time recommendations at scale, returning top results from among 10,000,000 candidates with sub-second response times and incorporating new updates in just a few seconds. Using the approach and architecture described here, our team can routinely go from ideas for new models to production-validated results within two weeks.},
author_keywords={Agile;  Machine learning;  Recommender systems},
keywords={Agile manufacturing systems;  Application programs;  Artificial intelligence;  Data mining;  Iterative methods;  Recommender systems, Agile;  Agile Methodologies;  Feature engineerings;  Machine learning applications;  Machine learning approaches;  Machine learning techniques;  Real-time application;  Software disciplines, Learning systems},
}

@CONFERENCE{Rindell201561,
author={Rindell, K. and Hyrynsalmi, S. and Leppänen, V.},
title={A comparison of security assurance support of agile software development methods},
journal={ACM International Conference Proceeding Series},
year={2015},
volume={1008},
pages={61-68},
doi={10.1145/2812428.2812431},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957689583&doi=10.1145%2f2812428.2812431&partnerID=40&md5=bbcc997a682ec2ef2947504722e98114},
abstract={Agile methods increase the speed and reduce the cost of software projects; however, they have been criticized for lack of documentation, traditional quality control, and, most importantly, lack of security assurance - mostly due to their informal and self-organizing approach to software development. This paper clarifies the requirements for security assurance by using an evaluation framework to analyze the compatibility of established agile security development methods: XP, Scrum and Kanban, combined with Microsoft SDL security framework, against Finland's established national security regulation (Vahti). We also analyze the selected methods based on their role definitions, and provide some avenues for future research. Copyright © 2015 ACM.},
author_keywords={DESMET;  Kanban;  Scrum;  SDL;  Secure agile development;  Security assurance;  Vahti;  XP},
keywords={Agile manufacturing systems;  Computer software;  National security;  Network security;  Quality control;  Software engineering;  X ray photoelectron spectroscopy, Agile development;  DESMET;  Kanban;  Scrum;  Security assurance;  Vahti, Software design},
}

@CONFERENCE{Khelladi20151518,
author={Khelladi, D.-E. and Bendraou, R. and Baarir, S. and Laurent, Y. and Gervais, M.-P.},
title={A framework to formally verify conformance of a software process to a software method},
journal={Proceedings of the ACM Symposium on Applied Computing},
year={2015},
volume={13-17-April-2015},
pages={1518-1525},
doi={10.1145/2695664.2695789},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955477278&doi=10.1145%2f2695664.2695789&partnerID=40&md5=d01c267a6a113779786ad7b5cb45f9be},
abstract={The increasing complexity of development projects requires methodological frameworks to support development processes. A method comes with a set of best practices that are enforced and instantiated into processes to drive the realization steps of the development project. However, those best practices come in the form of text in guides and books, or they are in the developer's mind. Thus, during an instantiation of a method, there is no guaranty to enforce its best practices into the process, which could impact negatively the criteria: cost, time, and quality. To cope with this issue, we propose a library of best practices to be checked for four popular methods: Unified Process, Extreme Programming, Scrum and Kanban. On top of this library we have built up a template-based constraint language and implemented it to express additional constraints on processes that are modeled with UML Activity Diagrams (AD). To apply formal verification, we leverage on a formalization based on fUML semantics. The evaluation showed the feasibility of our approach which covers all the aspects of the process, i.e. time, resource, control-flow, and data-flow. Copyright 2015 ACM.},
author_keywords={Constraints;  Extreme programming;  Kanban;  Scrum;  Software process model;  Unified process;  Verification},
keywords={Digital storage;  Formal verification;  Semantics;  Software engineering, Constraints;  EXtreme Programming;  Kanban;  Scrum;  Software process modeling;  Unified process, Verification},
}

@CONFERENCE{Rover2014,
author={Rover, D. and Ullerich, C. and Scheel, R. and Wegter, J. and Whipple, C.},
title={Advantages of agile methodologies for software and product development in a capstone design project},
journal={Proceedings - Frontiers in Education Conference, FIE},
year={2014},
volume={2015-February},
number={February},
doi={10.1109/FIE.2014.7044380},
art_number={7044380},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938150587&doi=10.1109%2fFIE.2014.7044380&partnerID=40&md5=0ba4818421ba20d77e5e4d2ed4bb5f15},
abstract={Professional skills are often emphasized in a capstone engineering design course, especially in relation to addressing ABET Engineering Criteria. Learning of these skills is typically a product of the project management approach followed by design teams. The principles behind agile development and the features of the Scrum methodology match up well with the expected outcomes of a major engineering design experience and preparation needed by students for engineering practice. This paper presents a case study on design team use of an agile process for the successful development and release on the Google Play store of an Android app for a client during the span of a two-semester senior design course in electrical and computer engineering. The agile project management used in the case study was found to be beneficial to all involved (students, mentors, and clients). It emphasizes behaviors that lead to greater satisfaction and higher quality results with the senior design experience. Student learning opportunities related to professional skills are examined. This work adds to emerging literature promoting agile development as a model for capstone projects. © 2014 IEEE.},
author_keywords={agile development;  capstone engineering design;  professional skills;  student learning outcomes},
keywords={Design;  Education;  Education computing;  Engineering education;  Human resource management;  Product design;  Product development;  Professional aspects;  Project management;  Students, Abet engineering criterion;  Agile development;  Agile project management;  Capstone design projects;  Capstone Engineering;  Electrical and computer engineering;  Professional skills;  Student learning outcomes, Curricula},
}

@CONFERENCE{Nejmeh2014,
author={Nejmeh, B. and Weaver, D.S.},
title={Leveraging scrum principles in collaborative, inter-disciplinary service-learning project courses},
journal={Proceedings - Frontiers in Education Conference, FIE},
year={2014},
volume={2015-February},
number={February},
doi={10.1109/FIE.2014.7044087},
art_number={7044087},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938099295&doi=10.1109%2fFIE.2014.7044087&partnerID=40&md5=700382da64846f357e02e5f08d62b1d3},
abstract={This paper presents two primary results: (1) an adaptation of a Scrum-based, software-tools enabled process used in international service-learning project courses in the Computer and Information Sciences and other disciplines and (2) the software applications resulting from this process. The paper begins with an overview of Scrum and the challenges of applying it in the classroom. We survey the literature regarding adaptations of Scrum in an academic setting. Unlike a number of applications of Scrum in the academy, we applied Scrum in the context of international service-learning courses where we completed software application projects for clients, typically non-profit organizations that needed a system to address some key issue. The challenges encountered with the application of Scrum in a multi-course project setting are discussed along with the adaptations made to address these problems. We summarize some of our successful project results and experiences to date. Finally, we discuss known issues with our approach and future directions of our work, including our interest in partnering with other institutions and in pursuing an open source model for our projects. © 2014 IEEE.},
keywords={Application programs;  Education;  Open source software;  Societies and institutions, Course projects;  International service learning;  Key Issues;  Non profit organizations;  Open-source model;  Service learning project;  Software applications, Teaching},
}

@CONFERENCE{Bell2014,
author={Bell, J.T. and Prabhu, A.},
title={An innovative approach to Software Engineering term projects, coordinating student efforts between multiple teams over multiple semesters},
journal={Proceedings - Frontiers in Education Conference, FIE},
year={2014},
volume={2015-February},
number={February},
doi={10.1109/FIE.2014.7044099},
art_number={7044099},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938153488&doi=10.1109%2fFIE.2014.7044099&partnerID=40&md5=e83aa9d3baf97e91c1c4e9e7f40f0676},
abstract={Software Engineering projects typically go through stages of development, with implementation near the end. Following the normal order in a school semester leaves students with little time to develop code and little to show for their efforts besides long written reports. Students also work in a bubble, having little contact with anyone outside their immediate group. This paper describes an innovative approach in which students work on two half-projects in parallel during a semester, implementing a design developed by previous students while simultaneously developing a new design to be implemented by a following group. This approach not only starts implementation early, it also forces the students to coordinate their efforts with two different groups of students, whom they may or may not ever meet in person. That experience has not always been enjoyable, but it has demonstrated the value of quality documentation far more effectively than any lecture ever could. An added benefit is that they experience two different approaches to software engineering, and work on problems in two different domains. This novel approach to a team-based semester project is easily applied to any field in which a term project is employed, with little adjustment needed for particular subject areas. © 2014 IEEE.},
author_keywords={Agile;  Capstone project;  Experiential learning;  SCRUM;  Software engineering;  Teamwork},
keywords={Education;  Software engineering, Agile;  Capstone projects;  Experiential learning;  SCRUM;  Teamwork, Students},
}

@CONFERENCE{Kamthan2015770,
author={Kamthan, P.},
title={Using personas to support the goals in user stories},
journal={Proceedings - 12th International Conference on Information Technology: New Generations, ITNG 2015},
year={2015},
pages={770},
doi={10.1109/ITNG.2015.136},
art_number={7113575},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936818112&doi=10.1109%2fITNG.2015.136&partnerID=40&md5=969c68691148ea177cf016bacbc4b396},
abstract={This paper proposes a conceptual framework, motivated by personas and composed of certain interrelated artifacts, to provide a better support for the goals included in the contents of structured user story statements. © 2015 IEEE.},
author_keywords={Agile methodology;  Artifact;  Ethnography;  Quality;  Software requirements engineering;  Traceability},
keywords={Image quality, Agile Methodologies;  Artifact;  Ethnography;  Software requirements;  Traceability, Requirements engineering},
}

@ARTICLE{Ordóñez2015298,
author={Ordóñez, H. and Villada, A.F.E. and Vanegas, D.L.V. and Cobos, C. and Ordóñez, A. and Segovia, R.},
title={An impact study of business process models for requirements elicitation in XP},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2015},
volume={9155},
pages={298-312},
doi={10.1007/978-3-319-21404-7_22},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949033278&doi=10.1007%2f978-3-319-21404-7_22&partnerID=40&md5=677ece922e7b863c23f0a0271abef34a},
abstract={Many communication problems may appear during requirements elicitation causing that final products do not accomplish client expectations. This paper analyzes the impact of using business processes management notation (BPMN) instead of user stories during requirements analysis in agile methodologies. For analyzing the effectiveness of our approach, we compare the use of user stories vs. BP models in eleven software projects during requirements elicitation phase. Experiments evidence that BPMN models improve quality and quantity of information collected during requirements elicitation and ease that clients specify clearly their needs and business goals. © Springer International Publishing Switzerland 2015.},
author_keywords={BPMN (Business Process Management Notation);  Requirements elicitation;  Software;  User stories;  XP (eXtreme programming)},
keywords={Administrative data processing;  Computer software;  Enterprise resource management, Agile Methodologies;  Business process management notation;  Business process model;  Communication problems;  EXtreme Programming;  Requirements analysis;  Requirements elicitation;  User stories, Requirements engineering},
}

@CONFERENCE{Medeiros2015460,
author={Medeiros, J.D.R.V. and Alves, D.C.P. and Vasconcelos, A. and Silva, C. and Wanderley, E.},
title={Requirements engineering in agile projects: A systematic mapping based in evidences of industry},
journal={CIBSE 2015 - XVIII Ibero-American Conference on Software Engineering},
year={2015},
pages={460-473},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936074918&partnerID=40&md5=7f3dbeb28ef69f2a2b7e18d85aa89381},
abstract={Interest in the adoption of Agile methodologies has grown in recent years as a strategy to minimize problems in software development. However recent studies indicate high rates of failure also in projects that use agile processes. In this context, this research conducted an exploratory study to investigate how Requirements Engineering is used in projects that adopt agile methodologies. For this, a Systematic Mapping was performed and it identified the engineering requirements techniques that are running in the industry, the problems and limitations in projects that adopt agile methodologies. The low involvement of users and the constant changes of requirements were identified as the main challenges to be overcome. Copyright © 2015 by the authors.},
author_keywords={Agile methodologies;  Requirements;  Systematic mapping},
keywords={Mapping;  Requirements engineering;  Software design, Agile Methodologies;  Agile process;  Exploratory studies;  High rate;  Requirements;  Requirements techniques;  Running-in;  Systematic mapping, Software engineering},
}

@ARTICLE{Ikram201595,
author={Ikram, N. and Naz, S.},
title={Extreme requirements engineering (XRE)},
journal={Communications in Computer and Information Science},
year={2015},
volume={558},
pages={95-108},
doi={10.1007/978-3-662-48634-4_7},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983475043&doi=10.1007%2f978-3-662-48634-4_7&partnerID=40&md5=f8093d3b6a8cc80c375bba8c2afb4f50},
abstract={The importance of requirements engineering process in success or failure of software projects has tempted the organizations to improve their RE processes. In our previous study, we assessed the relative perceived values of RE practices by conducting a global survey of practitioners. The survey revealed six RE practices that were perceived as having high values by RE experts worldwide. These practices were related to stakeholder’s consultation, requirements specification, and requirements management. In this paper, we are presenting an RE approach Extreme Requirements Engineering (XRE) which is based on these valuable RE practices and feedback from the practitioners on the role of customer representative. XRE complements the existing agile methods, Scrum and XP (eXtreme Programming) with six guidelines for agile teams. These guidelines ensure the extreme use of the valuable RE practices. The XRE can be helpful for practitioners to overcome many challenges faced by RE in agile. © Springer-Verlag Berlin Heidelberg 2015.},
author_keywords={Agile requirements;  Agile software development;  Index terms - requirements engineering;  Requirements engineering practices},
keywords={Big data;  Software design;  Software engineering;  Surveys, Agile requirements;  Agile software development;  Customer representative;  EXtreme Programming;  Index terms;  Requirements engineering process;  Requirements management;  Requirements specifications, Requirements engineering},
}

@CONFERENCE{Medeiros2015859,
author={Medeiros, J. and Vasconcelos, A. and Silva, C.},
title={Integration of agile practices: An approach to improve the quality of software specifications},
journal={CIBSE 2015 - XVIII Ibero-American Conference on Software Engineering},
year={2015},
pages={859-865},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936139164&partnerID=40&md5=a29e96d77e413cb2b2a13fd1d48a38f2},
abstract={Customer unavailability and insufficient requirements gathering are challenges that have compromised the adoption of agile methodologies. This research proposes an exploratory study in the industry to investigate how requirements engineering is used in agile projects. A Systematic Literature Review (SLR) was conducted and its results indicated the existence of problems in requirements engineering activities applied to agile projects. This research plan to perform a Survey with software engineers who uses agile practices, aiming to understand the perception of professionals about the best practices, challenges and limitations of the requirements engineering approaches currently used by the software industry. Then a new approach to the specification of requirements will be proposed using principles such as: Decrease constant dependence customer; Document only what is necessary to implement a requirement; Agile Practices; Quality Requirements. A experiment will be conducted to evaluate the quality and productivity of the proposed approach. Copyright © 2015 by the authors.},
author_keywords={Agile;  Quality of software specifications;  Quasi-experiment;  Survey},
keywords={Requirements engineering;  Specifications;  Surveying;  Surveys, Agile;  Agile Methodologies;  Exploratory studies;  Quality of softwares;  Quality requirements;  Quasi-experiments;  Requirements gathering;  Systematic literature review (SLR), Software engineering},
}

@CONFERENCE{Domah2015,
author={Domah, D. and Mitropoulos, F.J.},
title={The NERV methodology: A lightweight process for addressing non-functional requirements in agile software development},
journal={Conference Proceedings - IEEE SOUTHEASTCON},
year={2015},
volume={2015-June},
number={June},
doi={10.1109/SECON.2015.7133028},
art_number={7133028},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938118274&doi=10.1109%2fSECON.2015.7133028&partnerID=40&md5=146f13e1786b53f7faa7eb4a116fc09c},
abstract={Agile software development has become very popular around the world in recent years, with methods such as Scrum and Extreme Programming (XP). Literature suggests that functionality is the primary focus in Agile processes while non-functional requirements (NFRs) are either ignored or ill-defined. However, for software to be of good quality both functional requirements (FRs) and NFRs need to be taken into consideration; lack of attention to NFRs has been documented to be the cause of failure for many software projects. Hence special attention needs to be focused on NFRs in Agile software development. Requirements elicitation, implementation in design, development, and validation are important activities of software development. Agile has good processes to elicit functional requirements that are captured as user stories. However, NFRs elicitation has not been given enough attention within Agile processes. Additionally, reasoning and validating of NFRs have been lacking. This research proposes the 'NERV Methodology: Nonfunctional Requirements Elicitation, Reasoning, and Validation in Agile Processes.' Current results show the artifacts developed in this research can potentially help software development organizations address NFRs in early Agile processes. © 2015 IEEE.},
author_keywords={Agile software development;  Agile user stories;  functional requirements;  NERV Methodology;  NFR;  NFR Elicitation Taxonomy;  NFR Quantification Taxonomy;  NFR Reasoning Taxonomy;  NFRusCOM;  non-functional requirements;  Scrum},
keywords={Requirements engineering;  Software engineering;  Taxonomies, Agile software development;  Functional requirement;  NERV Methodology;  NFR;  NFRusCOM;  Non-functional requirements;  Scrum;  User stories, Software design},
}

@ARTICLE{Zapata2015368,
author={Zapata, C.},
title={Integration of usability and agile methodologies: A systematic Review},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2015},
volume={9186},
pages={368-378},
doi={10.1007/978-3-319-20886-2_35},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947220733&doi=10.1007%2f978-3-319-20886-2_35&partnerID=40&md5=03f5520a66112d16708d294ddaa78842},
abstract={Nowadays, Agile Methodologies are widely used and accepted among software development teams. These methodologies allow speeding up the development process while permitting less documentation and more flexible processes. Moreover, Usability is a measure of software quality and has become more important with the changes that users have experienced. This paper aims to answer how usability and agile methodologies have been integrated into the various stages of software development through a systematic review. © Springer International Publishing Switzerland 2015.},
author_keywords={Agile methodologies;  Software engineering;  Systematic review;  Usability;  User centered design},
keywords={Computer software selection and evaluation;  Design;  Human computer interaction;  Software engineering;  Usability engineering;  User centered design, Agile Methodologies;  Development process;  Flexible process;  Software development teams;  Software Quality;  Systematic Review;  Usability, Software design},
}

@CONFERENCE{Chauhan20152204,
author={Chauhan, V.K.},
title={How to reduce user story reopen count in scrum development?},
journal={2015 International Conference on Computing for Sustainable Global Development, INDIACom 2015},
year={2015},
pages={2204-2208},
art_number={7100629},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960909170&partnerID=40&md5=a22f5316872829e9db2a47da787cddc1},
abstract={A user story (US) is reopened for reworking due to shortcomings from four major fronts-business analyst (BA), developer, quality analyst (QA) and environmental issues. BA is responsible for capturing requirements and documenting the requirements in the form of user stories; developer is responsible for the implementation of the user story; and the QA is responsible for testing of US. Now if any of three does not perform his job accurately then the probability of reopening of US increases. So we can reduce the probability of reopening of US by improving on shortcoming from three ends BA, developer and QA. As for as environmental issues, are concerned, they can be controlled by QA, developer and BA. The aim of the paper is to identify different areas from BA, Developer and QA's end to reduce the probability of reopening of a US and thereby reducing the user story reopen count in the Scrum development. © 2015 IEEE.},
author_keywords={Bug;  Bug reopening;  Business Analyst;  Developer;  Quality Analyst;  Scrum;  User story;  User story reopening},
keywords={Environmental protection;  Probability, Bug reopening;  Business analysts;  Developer;  Scrum;  User stories, Sustainable development},
}

@CONFERENCE{Thakur20151593,
author={Thakur, S. and Singh, H.},
title={FDRD: Feature driven reuse development process model},
journal={Proceedings of 2014 IEEE International Conference on Advanced Communication, Control and Computing Technologies, ICACCCT 2014},
year={2015},
pages={1593-1598},
doi={10.1109/ICACCCT.2014.7019376},
art_number={7019376},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923278845&doi=10.1109%2fICACCCT.2014.7019376&partnerID=40&md5=cf5f03499befa6873f6542091e2af7be},
abstract={As fast the business requirements changes, the need of rapid of development and economical feasible software also increases. The new software development techniques and models are coming to picture to solve the problems of rapid changing requirements. Agile methodology is one of the approaches to fulfill the current business requirements, which is flexible to adapt the change at any phase of development. Feature driven development (FDD) is an agile based process model based on feature development, adapted by many organizations. The limitation of agile process is its incapability to reuse components those are developed through agile processes. Adopting reuse is a challenging task but it can be used at an initial level by integrating with various development processes. Reuse oriented development of software is considered to be one of the most efficient techniques to improve software quality as it increases the productivity and reduces the development effort and cost. This paper purposes a reengineered Feature driven reuse development (FDRD) process model which integrate reuse concept with feature driven development process model. The model improves the productivity of organization and quality of the produced product. © 2014 IEEE.},
author_keywords={Feature Driven Development (FDD);  Software Reuse},
keywords={Computer software reusability;  Computer software selection and evaluation;  Productivity, Agile Methodologies;  Business requirement;  Development process;  Development process models;  Feature driven development;  Process Modeling;  Software development techniques;  Software Quality, Software design},
}

@CONFERENCE{Khatri2015,
author={Khatri, S.K. and Bahri, K. and Johri, P.},
title={Best practices for managing risk in adaptive agile process},
journal={Proceedings - 2014 3rd International Conference on Reliability, Infocom Technologies and Optimization: Trends and Future Directions, ICRITO 2014},
year={2015},
doi={10.1109/ICRITO.2014.7014759},
art_number={7014759},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923094075&doi=10.1109%2fICRITO.2014.7014759&partnerID=40&md5=4c58f39380bc2df0358a865210cd9d49},
abstract={Agile methodologies has given a break from traditional software development models and has proved to be powerful in accommodating requirement changes and induce degree of flexibility in the software development life cycle. These characteristics have made agile an obvious choice among all software development models. One of the main objectives of any model is to cater to risk, identify, analyze, assess and plan. On the contrary agile does not clearly states anything in regard to risk management. This paper targets in analyzing agile methodologies and risk management model, amount of risk handling capabilities in agile and requirement of merging risk management in agile. © 2014 IEEE.},
author_keywords={Abstraction Levels;  Agile;  Risk Management;  Scrum;  Sprint},
keywords={Computer software;  Life cycle;  Risk assessment;  Risk management;  Risks;  Software design, Abstraction level;  Agile;  Degree of flexibility;  Risk management models;  Scrum;  Software development life cycle;  Software development models;  Sprint, Software engineering},
}

@ARTICLE{SelleriSilva201520,
author={Selleri Silva, F. and Soares, F.S.F. and Peres, A.L. and Azevedo, I.M.D. and Vasconcelos, A.P.L.F. and Kamei, F.K. and Meira, S.R.D.L.},
title={Using CMMI together with agile software development: A systematic review},
journal={Information and Software Technology},
year={2015},
volume={58},
pages={20-43},
doi={10.1016/j.infsof.2014.09.012},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84913558524&doi=10.1016%2fj.infsof.2014.09.012&partnerID=40&md5=403479be89f7e361e5f46e2a159f259d},
abstract={Background: The search for adherence to maturity levels by using lightweight processes that require low levels of effort is regarded as a challenge for software development organizations. Objective: This study seeks to evaluate, synthesize, and present results on the use of the Capability Maturity Model Integration (CMMI) in combination with agile software development, and thereafter to give an overview of the topics researched, which includes a discussion of their benefits and limitations, the strength of the findings, and the implications for research and practice. Methods: The method applied was a Systematic Literature Review on studies published up to (and including) 2011. Results: The search strategy identified 3193 results, of which 81 included studies on the use of CMMI together with agile methodologies. The benefits found were grouped into two main categories: those related to the organization in general and those related to the development process, and were organized into subcategories, according to the area to which they refer. The limitations were also grouped into these categories. Using the criteria defined, the strength of the evidence found was considered low. The implications of the results for research and practice are discussed. Conclusion: Agile methodologies can be used by companies to reduce efforts in getting to levels 2 and 3 of CMMI, there even being reports of applying agile practices that led to achieving level 5. However, agile methodologies alone, according to the studies, were not sufficient to obtain a rating at a given level, it being necessary to resort to additional practices to do so. © 2014 Elsevier B.V. All rights reserved.},
author_keywords={Agile methodology;  Benefits;  CMMI;  Limitations;  Software process improvement;  Systematic review},
keywords={Software engineering, Agile Methodologies;  Benefits;  CMMI;  Limitations;  Software Process Improvement;  Systematic Review, Software design},
}

@CONFERENCE{DeVasconcelos2015643,
author={De Vasconcelos, L.E.G. and Kusumoto, A.Y. and Leite, N.P.O. and Lopes, C.M.A.},
title={Using agile methods for software development in R&D scenario},
journal={Proceedings of the International Telemetering Conference},
year={2015},
volume={82},
pages={643-652},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958524398&partnerID=40&md5=60023c4393e3b98a226de571cc261102},
abstract={Due to the quick change of business processes in organizations, software needs to adapt quickly to meet new requirements by implementing new business rules. In Research and Development (R&D) scenario, the research is highly non-linear and changes are inevitable. In this context, it is known that traditional methodologies (e.g. waterfall) may lead to the detection of failures late, increase the time and cost of development and maintenance of software. On the other hand, agile methodologies are based on Test-Driven Development (TDD), maintain the technical debt under control, maximize the Return on Investment and reduce the risks for customers and companies. In this paper, we show the use of Scrum and TDD in the development of an experimental tool that aims to make the calibration in real time of the rudder of a fighter aircraft. The preliminary results allowed to increase the coverage testing of the software and hence the quality of the tool.},
author_keywords={Agile methods;  Flight tests;  Research and development;  Test driven development},
keywords={Chemical detection;  Computer programming;  Software engineering;  Software testing;  Telemetering, Agile Methodologies;  Agile methods;  Business Process;  Coverage testing;  Flight test;  Research and development;  Technical debts;  Test driven development, Software design},
}

@CONFERENCE{Nagpal2015,
author={Nagpal, S. and Khatri, S.K. and Kumar, A.},
title={Comparative study of ERP implementation strategies},
journal={2015 IEEE Long Island Systems, Applications and Technology Conference, LISAT 2015},
year={2015},
doi={10.1109/LISAT.2015.7160177},
art_number={7160177},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941243395&doi=10.1109%2fLISAT.2015.7160177&partnerID=40&md5=32aa1bd786fc91a7ac004625da48f083},
abstract={Enterprise Resource Planning, ERP software has come a long way since its inception as Inventory Management and Control Systems of 1960s. The value of ERP Implementation Strategy has been stressed over the years and it has been included as an important Critical Success Factor, CSF, as recorded by previous researchers. Traditional ERP implementation followed more or less a sequential approach akin to the Waterfall Model. Researchers over the years have categorized ERP Implementation methodology and developed frameworks. These are based on varied ERP Implementation observations. Given the variety of methodologies and frameworks available, the real-world ERP implementation demands the development and adoption of a strategy as a guiding principle for underlying methods. This paper suggests a new classification approach based on the ERP implementation strategy that can be categorized as custom-made, vendor-specific or consultant-specific. This research paper also conducts a comparative study of leading vendor-specific ERP implementation methodologies along-with their example cases. It then discusses how the principles of Agile Methodology as laid down in the Agile Manifesto [1] are being incorporated in ERP implementations. © 2015 IEEE.},
author_keywords={Accelerated SAP (ASAP);  Agile Methodology;  Critical Success Factors (CSF;  Enterprise Resource Planning (ERP;  Microsoft Dynamics Sure Step Methodology;  Oracle Unified Method (OUM)},
keywords={Agile manufacturing systems;  Enterprise resource management;  Enterprise software;  Inventory control;  Resource allocation;  Software engineering, Accelerated SAP (ASAP);  Agile Methodologies;  Critical success factor;  MicroSoft;  Unified method, Enterprise resource planning},
}

@ARTICLE{Tekbulut2015131,
author={Tekbulut, T. and Inal, A. and Doğanay, B.},
title={Lapis - logo agile process improvement system},
journal={Communications in Computer and Information Science},
year={2015},
volume={526},
pages={131-144},
doi={10.1007/978-3-319-19860-6_11},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937404312&doi=10.1007%2f978-3-319-19860-6_11&partnerID=40&md5=284c97db16350aa09cf0861f9e4a09a6},
abstract={We propose a new approach to agile methodologies leading us to a new agile implementation that is formed as the result of works and studies conducted to make risks in development process predictable and manageable owing to analytical data. In this paper, the time parameter is taken as the most crucial independent variable to manage and secure efficiency and productivity for Software Intensive Organizations. Our work elaborates on the unique methodology obtained by adapting Agile Software Development methods, which are of late years being used in the industry in software development processes. We demonstrate a new approach to the concept of Story Point, which is defined in agile methods, and Business Value [3] - a topic of Lean-Agile Software Development and a performance index OTEQ which embodies measures related to efficiency and quality. © Springer International Publishing Switzerland 2015.},
author_keywords={Agile software methodologies;  Software engineering;  Statistical process management},
keywords={Process engineering;  Software engineering, Agile Methodologies;  Agile software development;  Agile softwares;  Development process;  Independent variables;  Performance indices;  Software development process;  Statistical process, Software design},
}

@CONFERENCE{Santos2015,
author={Santos, A. and Correia, I.},
title={Mobile testing in software industry using agile: Challenges and opportunities},
journal={2015 IEEE 8th International Conference on Software Testing, Verification and Validation, ICST 2015 - Proceedings},
year={2015},
doi={10.1109/ICST.2015.7102625},
art_number={7102625},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84935047998&doi=10.1109%2fICST.2015.7102625&partnerID=40&md5=2fdc590c6435c17824e0804488b8e3c0},
abstract={The use of mobile devices grows significantly in all situations of day-to-day. The intense rhythm of the mobile device market has been pushing the use of practical software development and accelerated implementation. Both development activities hand the testing for these applications has proven challenging. A number of reasons, indicate that conventional software testing efforts are not successful in mobile applications. The testing automation approach for mobile applications, in most of the cases, does not cover all of the application features, which makes the manual test using devices necessary. The challenge is even greater in projects with agile methodologies, where test automation is one of core parts of the development process. In this work, the main objective is the sharing of the biggest challenges that are faced, especially during testing of mobile applications from the point of view of product quality; as well as the same may be supplied with the collaboration of the entire team in an agile development environment. For this purpose we will use a real project with NFC technology as example. © 2015 IEEE.},
keywords={Application programs;  Mobile computing;  Mobile devices;  Mobile telecommunication systems;  Software design;  Software engineering;  Verification, Agile development environments;  Agile Methodologies;  Development activity;  Development process;  Mobile applications;  Nfc technologies;  Software industry;  Testing automation, Software testing},
}

@CONFERENCE{Salo2015164,
author={Salo, R. and Poranen, T. and Zhang, Z.},
title={Requirements management in GitHub with a lean approach},
journal={CEUR Workshop Proceedings},
year={2015},
volume={1525},
pages={164-178},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962620374&partnerID=40&md5=a68c4af372ea71c1b1b02ee293bc9d49},
abstract={GitHub is an online platform for hosting projects that use the Git revision control system to manage code. Its lightweight issue tracker helps to maintain lists of issues identified during the development process, including bugs, features, or other software artifacts. Although issue tracking software has been practically used in software industry, studies on using it to manage requirements remain insufficient. This pa- per tackles the issue by presenting a semi-formal guideline for managing requirements in agile software development projects using GitHub. The guideline is evaluated on a theoretical level by analyzing how well it guides to manage requirements and fits in an agile software development setting. It is compared against lean principles. In addition, the guideline is put into use in a case study. The studies indicate that the guideline and GitHub are well-suited for requirements management in an agile environment.},
author_keywords={GitHub;  Guideline;  Lean software development;  Requirements management},
keywords={Computational linguistics;  Computer software;  Formal methods;  Program debugging;  Requirements engineering;  Software engineering, Agile software development;  Agile software development projects;  GitHub;  Guideline;  Lean software development;  Managing requirements;  Requirements management;  Revision control systems, Software design},
}

@ARTICLE{Diebold201540,
author={Diebold, P. and Ostberg, J.-P. and Wagner, S. and Zendler, U.},
title={What do practitioners vary in using scrum?},
journal={Lecture Notes in Business Information Processing},
year={2015},
volume={212},
pages={40-51},
doi={10.1007/978-3-319-18612-2_4},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942740224&doi=10.1007%2f978-3-319-18612-2_4&partnerID=40&md5=1ae67e0abf19a2035a2ba8e06db65af3},
abstract={Background: Agile software development has become a popular way of developing software. Scrum is the most frequently used agile framework, but it is often reported to be adapted in practice. Objective: Thus, we aim to understand how Scrum is adapted in different contexts and what are the reasons for these changes. Method: Using a structured interview guideline, we interviewed ten German companies about their concrete usage of Scrum and analysed the results qualitatively. Results: All companies vary Scrum in some way. The least variations are in the Sprint length, events, team size and requirements engineering. Many users varied the roles, effort estimations and quality assurance. Conclusions: Many variations constitute a substantial deviation from Scrum as initially proposed. For some of these variations, there are good reasons. Sometimes, however, the variations are a result of a previous non-agile, hierarchical organisation. © Springer International Publishing Switzerland 2015.},
author_keywords={Agile processes;  Industrial case study;  Scrum variations},
keywords={Quality assurance;  Software design, Agile process;  Agile software development;  Effort Estimation;  German companies;  Industrial case study;  Scrum variations;  Team size, Software engineering},
}

@CONFERENCE{Galvan2015188,
author={Galvan, S. and Mora, M. and O'Connor, R.V. and Acosta, F. and Alvarez, F.},
title={A Compliance Analysis of Agile Methodologies with the ISO/IEC 29110 Project Management Process},
journal={Procedia Computer Science},
year={2015},
volume={64},
pages={188-195},
doi={10.1016/j.procs.2015.08.480},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962829475&doi=10.1016%2fj.procs.2015.08.480&partnerID=40&md5=7bfb90b2155230e447141f854a1aacd5},
abstract={Software process standards (e.g. ISO/IEC 12207, ISO/IEC 15504) and models (e.g. CMMI) provide a set of best practices and guidelines for improving the quality of the software process and products resulting from that process. However, they do not prescribe a particular software development methodology (i.e. RUP, MSF), and thus software development teams face a compliance problem between the selected development methodology and a pursued particular standard or model. In this research, the particular issue of compliance of Agile Software Development Methodologies (SCRUM, XP, and UPEDU) and the new ISO/IEC 29110 standard is studied. Because the new standard is focused on the software process in very small software development companies or small software project teams in the range from 1 to 25 people, and the Agile Software Development Methodologies (ASDMs) are primarily for same targets, this study is important. The ISO/IEC 29110 standard contains two processes: Project Management and Software Implementation. This study is focused on the first process. The main findings indicate that the UPEDU and SCRUM methodologies present and high compliance level with the ISO/IEC 29110 Project Management process, while XP has a moderate level. Thus, software developer teams interested in achieving compliance with the ISO/IEC 29110 Project Management process can count with two ASDMs. However, a full compliance study (with both Project Management and Software Implementation) is still missing. © 2015 Published by Elsevier B.V.},
author_keywords={agile software development methodology;  compliance to ISO/IEC standards;  ISO/IEC 29110;  SCRUM;  UPEDU;  XP},
keywords={Agile manufacturing systems;  Human resource management;  Information management;  Information systems;  Project management;  Regulatory compliance;  Software engineering;  Standardization;  Standards;  X ray photoelectron spectroscopy, Agile software development;  ISO/IEC;  ISO/IEC standard;  SCRUM;  UPEDU, Software design},
}

@CONFERENCE{Panda2015772,
author={Panda, A. and Satapathy, S.M. and Rath, S.K.},
title={Empirical Validation of Neural Network Models for Agile Software Effort Estimation based on Story Points},
journal={Procedia Computer Science},
year={2015},
volume={57},
pages={772-781},
doi={10.1016/j.procs.2015.07.474},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944072308&doi=10.1016%2fj.procs.2015.07.474&partnerID=40&md5=5651577c48607bcfb5ed1266a76ff45e},
abstract={Now-a-days agile software development process has become famous in industries and substituting the traditional methods of software development. However, an accurate estimation of effort in this paradigm still remains a dispute in industries. Hence, the industry must be able to estimate the effort necessary for software development using agile methodology efficiently. For this, different techniques like expert opinion, analogy, disaggregation etc. are adopted by researchers and practitioners. But no proper mathematical model exists for this. The existing techniques are ad-hoc and are thus prone to be incorrect. One popular approach of calculating effort of agile projects mathematically is the Story Point Approach (SPA). In this study, an effort has been made to enhance the prediction accuracy of agile software effort estimation process using SPA. For doing this, different types of neural networks (General Regression Neural Network (GRNN), Probabilistic Neural Network (PNN), Group Method of Data Handling (GMDH) Polynomial Neural Network and Cascade-Correlation Neural Network) are used. Finally performance of the models generated using various neural networks are compared and analyzed. © 2015 The Authors. Published by Elsevier B.V.},
author_keywords={Agile Software Development;  Cascade Correlation Neural Network;  General Regression Neural Network;  GMDH Polynomial Neural Network;  Probabilistic Neural Network;  Software Effort Estimation;  Story Point Approach},
keywords={Data handling;  Estimation;  Neural networks;  Software engineering, Agile software development;  Cascade correlation neural networks;  General regression neural network;  Point approach;  Polynomial neural networks;  Probabilistic neural networks;  Software effort estimation, Software design},
}

@ARTICLE{Balijepally201553,
author={Balijepally, V. and Nerur, S. and Mahapatra, R.},
title={Task mental model and sofware developers’ performance: An experimental investigation},
journal={Communications of the Association for Information Systems},
year={2015},
volume={36},
pages={53-76},
art_number={4},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923064618&partnerID=40&md5=078623ebbb63f14cc0c6daba0e22bea1},
abstract={Our understanding of factors influencing the effectiveness of software-development processes has evolved in recent times. However, few research studies have furthered our understanding of the cognitive factors underlying software development activities and their impact on performance and affective outcomes. To some extent, this may be attributed to the paucity of measurement approaches available for cognitive factors. In this study, we fill this gap by developing a measurement approach to capture and evaluate the quality of mental models. We investigate the efficacy of mental models in software development using the said approach. We assessed mental model quality by statistically comparing a software developer’s mental model with a referent model derived from multiple experts. Results of a controlled laboratory experiment suggest that a software developer’s mental model quality is a determinant of software quality. Further, we found this effect to be consistent across software development tasks of varying complexities. These results not only shed light on the impact of mental models in software development, but also have significant implications for stimulating future research on cognitive factors influencing software development practices. © 2014 by the Association for Information Systems.},
author_keywords={Agile methodologies;  Mental models;  Pair programming;  Software developer;  Task complexity},
keywords={Computer software selection and evaluation;  Quality control;  Software engineering, Agile Methodologies;  Mental model;  Pair-programming;  Software developer;  Task complexity, Software design},
}

@CONFERENCE{Entin2015,
author={Entin, V. and Winder, M. and Zhang, B. and Claus, A.},
title={A process to increase the model quality in the context of model-based testing},
journal={2015 IEEE 8th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2015 - Proceedings},
year={2015},
doi={10.1109/ICSTW.2015.7107471},
art_number={7107471},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84934300260&doi=10.1109%2fICSTW.2015.7107471&partnerID=40&md5=adc2fb36dd9fa4e71538bca25c6d9e9f},
abstract={In the past years model-based testing (MBT) has become a widely-used approach to the test automation in the industrial context. Until now the application of MBT has been limited to the software quality engineers with very good modelling skills. In order to guarantee the completeness of a model and to increase its precision there is a need to allow the usage of the approach by other project stakeholders such as requirements engineers as well as software quality engineers with a limited modelling experience. In this contribution we share the challenges discovered during the several years of the application of a certain MBT technique in a SCRUM project with particular regard to the definition of precise and complete models. A process which involves the entire software project team into the model definition starting at the very early stages of product development is presented along with its concrete implementation. First experiences with the application of the process in a particular project are presented.1 © 2015 IEEE.},
author_keywords={domain-specific languages;  maintainability;  model-based testing;  requirements engineering;  SCRUM},
}

@ARTICLE{Muñoz2015140,
author={Muñoz, M. and Mejía, J. and Gasca-Hurtado, G.P. and Vega-Zepeda, V. and Valtierra, C.},
title={Providing a starting point to help smes in the implementation of software process improvements},
journal={Communications in Computer and Information Science},
year={2015},
volume={543},
pages={140-151},
doi={10.1007/978-3-319-24647-5_12},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952360512&doi=10.1007%2f978-3-319-24647-5_12&partnerID=40&md5=4a972b0b5bb74df59b03bc1ffb0f2997},
abstract={Nowadays software development organizations look for tools and methods that help them maintain their competitiveness. A key approach for organizations in order to achieve this competitiveness is a successful implementation of software process improvement. Unfortunately, most of the times, software process improvement involves a path full of obstacles almost impossible to achieve. The most common and critical problem consists of the selection and application of the right reference model for guiding this implementation. To provide a solution to this problem this paper shows a framework, which aims to set a starting point regarding the model, standard or agile methodology to be used as reference based on the SME actual needs, features and work culture. © Springer International Publishing Switzerland 2015.},
author_keywords={Human factor;  Improvement effort;  Improvement starting Point;  Process patterns;  Small and medium enterprises;  SMEs;  Software process improvement},
keywords={Competition;  Human engineering;  Process engineering;  Software engineering, Improvement effort;  Improvement starting Point;  Process patterns;  Small and medium enterprise;  SMEs;  Software Process Improvement, Software design},
}

@ARTICLE{Lehtinen201593,
author={Lehtinen, T.O.A. and Virtanen, R. and Heikkilä, V.T. and Itkonen, J.},
title={Why the development outcome does not meet the product owners’ expectations?},
journal={Lecture Notes in Business Information Processing},
year={2015},
volume={212},
pages={93-104},
doi={10.1007/978-3-319-18612-2_8},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942814499&doi=10.1007%2f978-3-319-18612-2_8&partnerID=40&md5=2f821cea4b8a6eebae3de8aa250cd9f8},
abstract={Many software development projects fail due to problems in requirements, scope, and collaboration. This paper presents a case study of the mismatch between the expectations of Product Owners and the outcome of the development in a large distributed Scrum organization. The data was collected in retrospective meetings involving a team of Product Owners and two software development teams. A focused root cause analysis of the problem “Why the expectations of Product Owners do not meet the outcome of development teams?” was conducted. The analysis aimed at explaining why the problem occurred and how the causes were related to one another. The outcomes were analyzed both quantitatively and qualitatively. Our results illustrate the challenges of implementing the Product Owner role in the context of complex, high-variability requirements and distributed development. We highlight the importance of true collaboration, effective requirements specification activities, and sufficient resources for the Product Owner role. © Springer International Publishing Switzerland 2015.},
author_keywords={Global software development;  Product owner;  Requirements engineering;  Root cause analysis;  Scrum;  Software process improvement},
keywords={Requirements engineering;  Software engineering, Global software development;  Product owner;  Root cause analysis;  Scrum;  Software Process Improvement, Software design},
}

@ARTICLE{Misra2015214,
author={Misra, S.C. and Singh, V.},
title={Conceptualizing open agile software development life cycle (OASDLC) model},
journal={International Journal of Quality and Reliability Management},
year={2015},
volume={32},
number={3},
pages={214-235},
doi={10.1108/IJQRM-08-2013-0127},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923294337&doi=10.1108%2fIJQRM-08-2013-0127&partnerID=40&md5=bda2db9f406b5e03f67b3fd31c277170},
abstract={Purpose – Software development life cycle (SDLC) has always been the core methodology for any software engineer that depicts the entire development process which an organization is bound to utilize to achieve successful software. The purpose of this paper is to bring forth a conceptual model after analysing the best practices in SDLC, and extracting the best out of agile methodologies and the open source software, thereby bringing forward an optimised structure. Design/methodology/approach – The OASDLC is hypothesized specifically for “Brihaspati” project and is formulated keeping in mind the gaps and limitations posed by existing SDLC models. OASDLC is further put to test for achieving lower costs and efforts involved. The tests are further substantiated by means of hypothesis validation through execution of a survey based research. Findings – It has been observed that the present conceptual model further optimizes the efforts involved while adopting such a practice. Originality/value – This paper proposes a novel SDLC model so as to achieve a best practice for a software project. On analysing the issues involved such as tight budget and timelines, it led the authors to formulate a newer concept “Open Agile Software Development Life Cycle model” (OASDLC). © Emerald Group Publishing Limited.},
author_keywords={Agile methods;  Agile SDLC;  Open agile software;  Open source software development;  OSSDLC;  SDLC;  Software development life cycle},
}

@ARTICLE{Radhakrishnan2015432,
author={Radhakrishnan, P. and Kanmani, S. and Nandhini, M.},
title={XSOFT: A generic software teaching and learning model},
journal={Computer Applications in Engineering Education},
year={2015},
volume={23},
number={3},
pages={432-442},
doi={10.1002/cae.21613},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927616269&doi=10.1002%2fcae.21613&partnerID=40&md5=f8c8fc233e00b3a9eb76ca2407cccc40},
abstract={The attitude of software learning by students relies on transforming the Learning Model consistently into Software Development Model. The effort and time taken for development of different phases of software, has few issues, in particular, the principles and practices to be followed in academia. To address these issues, a generic software teaching and learning model called eXtreme Software Teaching (XSOFT) is proposed by integrating the essence of the Extreme Programming (XP) method with COSMIC FFP (Common Software Measurement Integration Consortium Full Function Point) Standards. The effectiveness of this proposed model was tested on real time projects assigned to students as a realistic study by selecting them with equal skill and knowledge on programming. They were divided into two groups, such as Pair Programmers and Solo Programmers. The performances of these groups are measured with respect to the trade in person-days using XSOFT. The empirical results show that the assessment of person-days are less on pair programming than solo programming and effective programming skill is found with pair programmers. In addition, the robustness of this model are confirmed by the results of another real time project as case study. © 2014 Wiley Periodicals, Inc.},
author_keywords={COSMIC FFP;  extreme programming;  learning;  pair programming;  software development;  solo programming;  teaching},
keywords={Computer programming;  Software engineering;  Students;  Teaching, COSMIC FFP;  EXtreme Programming;  Full function points;  learning;  Pair-programming;  Principles and practices;  Software development models;  Teaching and learning, Software design},
}

@ARTICLE{Ghani20151,
author={Ghani, I. and Abdullahisani and Niknejad, N. and Bello, M. and Kamal, S. and Chughtai, M.W. and Jeong, S.R.},
title={Secure dynamic system development method (SDSDM): A survey about its suitability},
journal={Journal of Theoretical and Applied Information Technology},
year={2015},
volume={74},
number={1},
pages={1-11},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926685144&partnerID=40&md5=fc514f55483c608feae735efead1a87b},
abstract={Building secure software is about taking security into account during all phases of software development. However, the major problem in agile methods is the lack of basic security elements in their phases and practices. One of such method is Dynamic System Development Method (DSDM).Based on this study, we have observed that the original/traditional DSDM does not help guide the agile to develop secure software. In order to address this issue, we introduced additional phases and sub-phases to the original/traditional DSDM to integrate security. The proposed model is named Secure Dynamic System Development Method (SDSDM), which has six phases. These phases and sub-phases are feasibility study, functional model iteration, secure functional model iteration, secure design, design and build iteration and implementation. Our findings highlight an improved agility in DSDM after integration of security. However, the study focuses on a questionnaire (survey) where the subject matter experts’ opinion has been used to validate our model. Based on the experts’ opinion, we can say that it is possible to develop secure software using SDSDM model without affecting its agility negatively. © 2005 - 2015 JATIT & LLS. All rights reserved.},
author_keywords={Agile methodology;  Degree of agility;  Dynamic system development method;  Software security},
}

@ARTICLE{Ahimbisibwe20157,
author={Ahimbisibwe, A. and Cavana, R.Y. and Daellenbach, U.},
title={A contingency fit model of critical success factors for software development projects: A comparison of agile and traditional plan-based methodologies},
journal={Journal of Enterprise Information Management},
year={2015},
volume={28},
number={1},
pages={7-33},
doi={10.1108/JEIM-08-2013-0060},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921862105&doi=10.1108%2fJEIM-08-2013-0060&partnerID=40&md5=452194083a70ae84bcd5f4e988014683},
abstract={Findings: Within the three major categories of CSFs, individual factors are ranked based on how frequently they have been cited in previous studies, overall as well as across the two main project management methodologies (traditional, agile). Differences in these rankings as well as mixed empirical support suggest that previous research may not have adequately theorized when particular CSFs will affect project success and lend support for the hypothesized contingency model between CSFs, project characteristics and project success criteria.
Research limitations/implications: This research is conceptual and meta-analytic in its focus. A crucial task for future research should be to test the contingency fit model developed using empirical data. There is no broad consensus among researchers and practitioners in categorizing CSFs for software development projects. However, through an extensive search and analysis of the literature on CSFs for software development projects, the research provides greater clarity on the categories of CSFs and how their direct, indirect and moderated effects on project success can be modelled.
Practical implications: This study proposes a contingency fit model and contributes towards developing a theory for assessing the role of CSFs for project success. While future empirical testing of this conceptual model is essential, it provides an initial step for guiding quantitative data collection, specifies detailed empirical analysis for comparative studies, and is likely to improve clarity in debate. Since previous studies have not rigorously assessed the impact of fit between project characteristics, project environment and project management methodology on project success, additional empirically robust studies will help to clarify contradictory findings that have limited theory development for CSFs of software development projects to date.
Originality/value: Previous research for software development projects has frequently not fully incorporated contingency as moderation or contingency as fit (traditional vs agile). This research sets out to develop fully a contingency fit perspective on software development project success, through contrasting traditional plan-driven and agile methodologies. To do this, the paper systematically identifies and ranks 37 CSFs for software projects from 148 journal publications and holistically categorizes them as organizational, team, customer and project factors.
Purpose: While the choices available for project management methodologies have increased significantly, questions remain on whether project managers fully consider their alternatives. When project categorization systems and criteria are not logically matched with project objectives, characteristics and environment, this may provide the key reason for why many software projects are reported to fail to deliver on time, budget or do not give value to the client. The purpose of this paper is to identify and categorize critical success factors (CSFs) and develop a contingency fit model contrasting perspectives of traditional plan-based and agile methodologies.
Design/methodology/approach: By systematically reviewing the previous literature, a total of 37 CSFs for software development projects are identified from 148 articles, and then categorized into three major CSFs: organizational, team and customer factors. A contingency fit model augments this by highlighting the necessity to match project characteristics and project management methodology to these CSFs. © Emerald Group Publishing Limited.},
author_keywords={Contingency;  Critical success factors;  Fit;  Methodology;  Project success;  Software development projects},
}

@ARTICLE{Mahnič201577,
author={Mahnič, V.},
title={Scrum in software engineering courses: An outline of the literature},
journal={Global Journal of Engineering Education},
year={2015},
volume={17},
number={2},
pages={77-83},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937675741&partnerID=40&md5=7d5140196e2eaacfac28ee268fcc26cb},
abstract={This article provides an outline of the literature dealing with teaching Scrum in software engineering courses. The search of studies in the Scopus database revealed 23 papers that were identified as primary studies relevant to this research. These studies are classified by their main topic and their main results are presented. All studies stress that the teaching of Scrum should not be limited to traditional lectures, but some practical experience should be provided in order to strengthen comprehension and achieve deep learning. For this reason, the use of Scrum in capstone (or similar) projects requiring students to work in teams is the most widely adopted strategy, described in seven studies. Four studies describe the use of simulation games as an alternative to practical project work (and even traditional lectures). Teaching Scrum through a capstone course provides a suitable environment for in-depth analyses of students' perceptions of typical Scrum practices (discussed in four studies), but also opens some pedagogical issues, such as the assessment of individual performance and consideration of students' learning styles (three studies). The remaining studies describe general experience and recommendations, the development of teaching aids and the combination of Scrum with other process models. © WIETE 2015.},
author_keywords={Agile methods;  Capstone project;  Problem-based learning;  Scrum;  Software engineering education},
}

@ARTICLE{Yli-Huumo201517,
author={Yli-Huumo, J. and Rissanen, T. and Maglyas, A. and Smolander, K. and Sainio, L.-M.},
title={The relationship between business model experimentation and technical debt},
journal={Lecture Notes in Business Information Processing},
year={2015},
volume={210},
pages={17-29},
doi={10.1007/978-3-319-19593-3_2},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937510941&doi=10.1007%2f978-3-319-19593-3_2&partnerID=40&md5=65fcd7acfd277ecb3f094255dee0ed8d},
abstract={The use of lean software development methodology and business model experimentation has become popular in software companies in recent years. Business model experimentation is used to validate assumptions made on a product from real customers before the actual product is created. A minimum viable product is used to test the business model by gathering and measuring customer feedback. However, in many cases creating a minimum viable product requires the development team to take shortcuts and workarounds in the product. This phenomenon in software development is called ‘technical debt’, where companies trade long-term software quality to short-term gain in time-tomarket. We investigated four software companies and conducted nine interviews to understand the relationship between business model experimentation and technical debt. The goal was to study how business model experimentation is affecting to technical debt. The results showed that business model experimentation has a clear relationship to technical debt. © Springer International Publishing Switzerland 2015.},
author_keywords={Business model experimentation;  Case study;  Large company;  Minimum viable product;  Software development lifecycle;  Startup company;  Technical debt},
keywords={Computer software selection and evaluation;  Life cycle;  Software engineering, Business modeling;  Large companies;  Minimum viable product;  Software development life cycle;  Start-up companies;  Technical debts, Software design},
}

@ARTICLE{Basso2015214,
author={Basso, F.P. and Pillat, R.M. and Roos-Frantz, F. and Frantz, R.Z.},
title={Combining MDE and scrum on the rapid prototyping of web information systems},
journal={International Journal of Web Engineering and Technology},
year={2015},
volume={10},
number={3},
pages={214-244},
doi={10.1504/IJWET.2015.072347},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944680050&doi=10.1504%2fIJWET.2015.072347&partnerID=40&md5=95d549d0c378b99da6d24ddda1d04207},
abstract={Rapid application prototyping (RAP) is recommended to obtain quick feedback from clients, allowing the validation of software requirements before acceptance tests. In this regard, model-driven engineering (MDE) and agile methods are two important approaches that suggest the use of techniques for RAP. Some fundamental differences between them exist: MDE focuses on software reuse through annotated system models while agile methods recommend the use simpler models to achieve quick feedback from clients. In order to comply with agility principles but still concerned about the future reuse of the developed software, the quick design of annotated models must be considered. This paper presents a MDE-based RAP methodology and tool support to quickly generate web front ends and models based on the MVC architectural pattern. In addition, we report a case study that has joined MDE and Scrum by applying our methodology and tool support for complete development of web information system in a Scrum-based industrial software project. We also present lessons learnt from the case study and point out some issues for future research in software engineering to facilitate the introduction of MDE in target contexts. Copyright © 2015 Inderscience Enterprises Ltd.},
author_keywords={Agility;  MDE;  MDE as service;  Mockup;  Model-driven engineering;  Prototyping;  RAP;  Rapid application prototyping;  Scrum},
keywords={Acceptance tests;  Agile manufacturing systems;  Application programs;  Information systems;  Mockups;  Software engineering;  Software prototyping;  Software testing;  World Wide Web, Agility;  MDE;  MDE as service;  Model-driven Engineering;  RAP;  Scrum, Computer software reusability},
}

@ARTICLE{Brandtner201597,
author={Brandtner, M. and Giger, E. and Gall, H.},
title={SQA-Mashup: A mashup framework for continuous integration},
journal={Information and Software Technology},
year={2015},
volume={65},
pages={97-113},
doi={10.1016/j.infsof.2014.10.004},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929515444&doi=10.1016%2fj.infsof.2014.10.004&partnerID=40&md5=fa4b0c2a468887ef9d54166414aad955},
abstract={Context Continuous Integration (CI) has become an established best practice of modern software development. Its philosophy of regularly integrating the changes of individual developers with the master code base saves the entire development team from descending into Integration Hell, a term coined in the field of extreme programming. In practice, CI is supported by automated tools to cope with this repeated integration of source code through automated builds and testing. One of the main problems, however, is that relevant information about the quality and health of a software system is both scattered across those tools and across multiple views. Objective This paper introduces a quality awareness framework for CI-data and its conceptional model used for the data integration and visualization. The framework called SQA-Mashup makes use of the service-based mashup paradigm and integrates information from the entire CI-toolchain into a single service. Method The research approach followed in our work consists out of (i) a conceptional model for data integration and visualization, (ii) a prototypical framework implementation based on tool requirements derived from literature, and (iii) a controlled user study to evaluate its usefulness. Results The results of the controlled user study showed that SQA-Mashup's single point of access allows users to answer questions regarding the state of a system more quickly (57%) and accurately (21.6%) than with standalone CI-tools. Conclusions The SQA-Mashup framework can serve as one-stop shop for software quality data monitoring in a software development project. It enables easy access to CI-data which otherwise is not integrated but scattered across multiple CI-tools. Our dynamic visualization approach allows for a tailoring of integrated CI-data according to information needs of different stakeholders such as developers or testers. © 2014 Elsevier B.V. All rights reserved.},
author_keywords={Continuous integration;  Controlled user study;  Information needs;  Software quality;  Tool integration},
keywords={Computer software selection and evaluation;  Data visualization;  Information science;  Integration testing;  Quality control;  Software design;  Software engineering;  Visualization, Continuous integrations;  Information needs;  Software Quality;  Tool integration;  User study, Data integration},
}

@CONFERENCE{Bougroun2015174,
author={Bougroun, Z. and Zeaaraoui, A. and Bouchentouf, T.},
title={The projection of the specific practices of the third level of CMMI model in agile methods: Scrum, XP and Kanban},
journal={Colloquium in Information Science and Technology, CIST},
year={2015},
volume={2015-January},
number={January},
pages={174-179},
doi={10.1109/CIST.2014.7016614},
art_number={7016614},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938076471&doi=10.1109%2fCIST.2014.7016614&partnerID=40&md5=29a56db36cb78d51f7d865aa4587ea73},
abstract={Most large companies have adopted CMMI in order to improve software quality, reduce the budget, and have customer satisfaction. But since the advent of agile methods, companies are looking to integrate these methods for software development. To adopt these methods in the project we need to know if they cover a part of CMMI. In this paper we present the CMMI model and Scrum XP and Kanban methods, than we make the mapping between these methods and CMMI level 3. The merge of the three methods covers 58% of process quality of the CMMI model level three. © 2014 IEEE.},
author_keywords={agile methods;  CMMI;  Kanban;  Scrum;  XP},
keywords={Budget control;  Computer software selection and evaluation;  Customer satisfaction;  Information science;  Software design, Agile methods;  CMMI;  Kanban;  Scrum;  XP, Software engineering},
}

@ARTICLE{Moyo2015,
author={Moyo, D. and Ally, A.K. and Brennan, A. and Norman, P. and Purshouse, R.C. and Strong, M.},
title={Agile development of an attitude-behaviour driven simulation of alcohol consumption dynamics},
journal={JASSS},
year={2015},
volume={18},
number={3},
page_count={14},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84934779714&partnerID=40&md5=02b408627306bde2274c7f7d41a02857},
abstract={Whilst there have been several advocates for the application of software engineering (SE) methodologies in the development of agent-based models and simulations in the social sciences, the uptake of these techniques in the research community has been limited – or if authors are using such techniques, their use is underreported. Software engineering provides structured processes and techniques for designing, documenting, implementing and testing computer software. Software processes have many variations, each with their own unique advantages and disadvantages depending on the constraints (such as: human resources, time, finance, quality) facing a project team. This paper sets out the methods of Scrum agile software development, and discusses the experience of using Scrum to organise workflow and guide the development of an agent-based model of alcohol consumption. By employing Scrum in conjunction with another software engineering method, the Unified Modelling Language, this paper represents a case study in SE methods applied to a real world research problem. © 2015 JASSS.},
author_keywords={Agent-based;  Agile;  Alcohol;  Attitudes;  Microsimulation;  Modelling},
}

@CONFERENCE{Mattei2015101,
author={Mattei, A.L.P. and Cunha, A.M.D. and Dias, L.A.V. and Fonseca, E. and Saotome, O. and Takachi, P. and Goncalves, G.S. and Pivetta, T.A. and Montalvao, V.D.S. and Kendi, C. and Freitas, F.L.D. and Ferreira, M.A. and Almeida, M.A. and Rodrigues, G.G.D.O.},
title={Nanosatellite Event Simulator Development Using Scrum Agile Method and Safety-Critical Application Development Environment},
journal={Proceedings - 12th International Conference on Information Technology: New Generations, ITNG 2015},
year={2015},
pages={101-106},
doi={10.1109/ITNG.2015.22},
art_number={7113456},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936750773&doi=10.1109%2fITNG.2015.22&partnerID=40&md5=18eddcb0f4815daaf528037170098949},
abstract={Development of satellite and launcher subsystems involves programming complex embedded systems and dealing with multiple system interactions while complying with both functional and technical requirements as well as software quality. Space onboard system project development is complex and is normally both time consuming and highly susceptible to errors. The combination of scrum agile methods with model-based programming addresses these restraints and allows synergetic interactions between team members. This paper describes the classroom experience of a group of students in the development of a Nanosatellite Event Simulator and its display interface for an Attitude Control and Determination Subsystem (ACDS). It was used the instructional technique of Interdisciplinary Project Based Learning (IPBL) and the software Safety-Critical Application Development Environment (SCADE). © 2015 IEEE.},
author_keywords={Interdisciplinary Project Based Learning;  Model-based programming;  Nanosatellite;  Safety-Critical Application Development Environment;  Scrum Agile Methods},
keywords={Agile manufacturing systems;  Application programs;  Attitude control;  Computer software selection and evaluation;  Embedded systems;  Functional programming;  Safety engineering;  Students, Agile methods;  Interdisciplinary project;  Model-based programming;  Nanosatellite;  Safety critical application development environments, Nanosatellites},
}

@ARTICLE{Kriksciuniene2015192,
author={Kriksciuniene, D. and Sakalauskas, V. and Strigunaite, S. and Masteika, S.},
title={Project performance evaluation by modified analytic hierarchy process model},
journal={Transformations in Business and Economics},
year={2015},
volume={14},
number={1},
pages={192-211},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928472921&partnerID=40&md5=c6ae8429eb33a8a92e2c77b08c59d492},
abstract={The main drawback of applying existing methods (Agile, Scrum, PMBOK) for evaluating project results and risks is their dependence on the direct observation, experience, expert-based judgements, and lack of quantitative measures for performance evaluation of the project team. The analysis and observation of the communication among project team members are mainly based on the subjective and mostly linguistic interpretation of statistics and communication intensity features. This type of information can be partially captured by the project environment software; it includes a number of exchanged messages, submitted flies, and responses registered as systems logs; yet, the data are unfit to be directly incorporated into the project management methods. It can be concluded that there is a need for a comprehensive aggregated model for evaluating project performance, which could not only use data captured by teamwork software, but also accumulate and effectively utilize experiential knowledge of project managers and external experts. The authors of this paper suggest to modify the classical analytical hierarchical process (AHP) model. The modification includes a method for defining probability values corresponding to each alternative outcome of project quality by using the hierarchical structure of variables acquiring linguistic values, and calculation of compound value of project quality. The authors of this article explored the performance evaluation possibilities by using the modified AHP (mAHP) model for IT projects experimental data. The experimental research shows high compatibility of evaluations defined by the project managers and the results of the proposed mAHP method, and enables to significantly improve project evaluation reliability. © Vilnius University, 2002-2015 © Brno University of Technology, 2002-2015 © University of Latvia, 2002-2015.},
author_keywords={AHP;  Analytical hierarchical process;  Project performance evaluation;  Teamwork software},
}

@ARTICLE{Turani2015120,
author={Turani, A.},
title={Applying case based reasoning in agile software development},
journal={Journal of Theoretical and Applied Information Technology},
year={2015},
volume={78},
number={1},
pages={120-124},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938942311&partnerID=40&md5=6b5522c7c08088b80734eb294cb313f8},
abstract={There is a common misconception among developers who follow Agile development methods, that following formal processes and modeling are unnecessarily and perceived as a waste of effort [1]. The initial intension of Agile was not an anti-methodology movement but rather a balance between processes and production. Nevertheless, the main challenges facing software that are developed using Agile development methods are the risk of higher architectural design mistakes, and the slower transfer rate of knowledge especially when valuable developers and expertise tend to leave their organizations. Agile advocates itself as a framework based on engaging knowledge workers in affective way. It focuses primary on transferring the tacit type of knowledge within production teams. Yet transferring the explicit type of knowledge is important as well. Reusing past projects' artifacts will have a positive impact on the reduction of costly architectural mistakes and the increasing of the overall learnability, productivity and efficiency of the organization as a whole. Both tacit and explicit knowledge are needed. A hybrid approach that combines both kinds of knowledge is vital and essential especially for teams with diversity skills and knowledge working closely throughout project’s development life cycle. This paper focuses on two main Knowledge Based Management processes that should be applied within Agile development methodologies. The first process focuses on the transformation of tacit knowledge into explicit knowledge using the traditional design models techniques. The second process focuses on usage of Case Based Reasoning systems for facilitating the retrieval and reuse of past projects' solution artifacts. We have selected CBR over other Knowledge Base systems due to its effectiveness in representing solutions for software development domain, which is considered a complex domain, without the need of having a large set of training cases. In this paper we have proposed an ICBR (Product Backlog Item Case Based Reasoning) that could be easily integrated within many Agile development methodologies to effectively disseminate valuable knowledge among organizations’ teams and personals. In this paper we have applied ICBR on the Scrum methodology as a proof o concept for facilitating the dissemination of various software artifacts among team’s developers to maximize the use of cooperative wisdom and experience found within organizational entity. © 2005-2015 JATIT & LLS. All rights reserved.},
author_keywords={Agile development;  And case based reasoning;  Knowledge based management;  Scrum},
}

@CONFERENCE{Griffith20151014,
author={Griffith, I. and Taffahi, H. and Izurieta, C. and Claudio, D.},
title={A simulation study of practical methods for technical debt management in agile software development},
journal={Proceedings - Winter Simulation Conference},
year={2015},
volume={2015-January},
pages={1014-1025},
doi={10.1109/WSC.2014.7019961},
art_number={7019961},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940490631&doi=10.1109%2fWSC.2014.7019961&partnerID=40&md5=0eb0a30f28eddd7fe9358a08bc1c9e3e},
abstract={Technical debt is a well understood yet understudied phenomena. A current issue is the verification and validation of proposed methods for technical debt management in the context of agile development. In practice, such evaluations are either too costly or too time consuming to be conducted using traditional empirical methods. In this paper, we describe a set of simulations based on models of the agile development process, Scrum, and the integration of technical debt management. The purpose of this study is to identify which strategy is superior and to provide empirical evidence to support existing claims. The models presented are based upon conceptual and industry models concerning defects and technical debt. The results of the simulations provide compelling evidence for current technical debt management strategies proposed in the literature that can be immediately applied by practitioners. © 2014 IEEE.},
keywords={Computer software;  Software engineering, Agile development;  Agile software development;  Empirical method;  Management strategies;  Practical method;  Simulation studies;  Technical debts;  Verification-and-validation, Software design},
}

@ARTICLE{Perkusich2015437,
author={Perkusich, M. and Soares, G. and Almeida, H. and Perkusich, A.},
title={A procedure to detect problems of processes in software development projects using Bayesian networks},
journal={Expert Systems with Applications},
year={2015},
volume={42},
number={1},
pages={437-450},
doi={10.1016/j.eswa.2014.08.015},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906860965&doi=10.1016%2fj.eswa.2014.08.015&partnerID=40&md5=a81a565609ba1abf50315c821352223e},
abstract={There are several software process models and methodologies such as waterfall, spiral and agile. Even so, the rate of successful software development projects is low. Since software is the major output of software processes, increasing software process management quality should increase the project's chances of success. Organizations have invested to adapt software processes to their environments and the characteristics of projects to improve the productivity and quality of the products. In this paper, we present a procedure to detect problems of processes in software development projects using Bayesian networks. The procedure was successfully applied to Scrum-based software development projects. The research results should encourage the usage of Bayesian networks to manage software processes and increase the rate of successful software development projects. © 2014 Elsevier Ltd. All rights reserved.},
author_keywords={Bayesian networks;  Software development project;  Software process management;  Software process simulation modeling},
keywords={Bayesian networks;  Computer simulation, Research results;  Software development projects;  Software process;  Software process management;  Software process models;  Software process simulation, Software design;  Bayesian networks},
}

@ARTICLE{Bjerke-Gulstuen2015239,
author={Bjerke-Gulstuen, K. and Larsen, E.W. and Stålhane, T. and Dingsøyr, T.},
title={High level test driven development – shift left},
journal={Lecture Notes in Business Information Processing},
year={2015},
volume={212},
pages={239-247},
doi={10.1007/978-3-319-18612-2_23},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942754431&doi=10.1007%2f978-3-319-18612-2_23&partnerID=40&md5=fe225327292c41e21874887c0b305352},
abstract={Agile development methods are increasingly used in large projects, with many development teams. Because acceptance testing can require a large chain of features to be completed, testing is often carried out late in such projects. In this experience report, we describe a large project where 11 development teams delivered a system in 12 three week iterations. We also describe how the focus of test activities was shifted towards the earlier phases of development, what we call “shift left”. This involved shifting the focus both within the iterations, and in how the overall testing work was organized. We describe the results of this change, and provide recommendations for how to organize test work in future large-scale development projects. © Springer International Publishing Switzerland 2015.},
author_keywords={Agile methods;  Inter-team coordination;  Large-scale agile development;  Scrum;  Software engineering;  Test;  Test organization},
keywords={Human resource management;  Software design;  Software engineering;  Software testing;  Testing, Acceptance testing;  Agile development;  Agile development methods;  Agile methods;  Inter-team coordinations;  Large-scale development;  Scrum;  Test driven development, Acceptance tests},
}

@ARTICLE{Heikkilä2015116,
author={Heikkilä, V.T. and Paasivaara, M. and Rautiainen, K. and Lassenius, C. and Toivola, T. and Järvinen, J.},
title={Operational release planning in large-scale scrum with multiple stakeholders - A longitudinal case study at F-secure corporation},
journal={Information and Software Technology},
year={2015},
volume={57},
number={1},
pages={116-140},
doi={10.1016/j.infsof.2014.09.005},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922489975&doi=10.1016%2fj.infsof.2014.09.005&partnerID=40&md5=8c83686f954667078389511d549a9c33},
abstract={Context: The analysis and selection of requirements are important parts of any release planning process. Previous studies on release planning have focused on plan-driven optimization models. Unfortunately, solving the release planning problem mechanistically is difficult in an agile development context. Objective: We describe how a release planning method was employed in two case projects in F-Secure, a large Finnish software company. We identify the benefits which the projects gained from the method, and analyze challenges in the cases and improvements made to the method during the case projects. Method: We observed five release planning events and four retrospectives and we conducted surveys in the first two events. We conducted six post-project interviews. We conjoined the observation notes, survey results and interviews and analyzed them qualitatively and quantitatively. Results: The focal point of the method was release planning events where the whole project organization gathered to plan the next release. The planning was conducted by the development teams in close collaboration with each other and with the other stakeholders. We identified ten benefits which included improved communication, transparency, dependency management and decision making. We identified nine challenges which included the lacking preparation and prioritization of requirements, unrealistic schedules, insufficient architectural planning and lacking agile mindset. The biggest improvements to the method were the introduction of frequent status checks and a big visible planning status board. Conclusion: The release planning method ameliorated many difficult characteristics of the release planning problem but its efficiency was negatively affected by the performing organization that was in transition from a plan-driven to an agile development mindset. Even in this case the benefits clearly outweighed the challenges and the method enabled the early identification of the issues in the project. © 2014 Elsevier B.V. All rights reserved.},
author_keywords={Agile software development;  Large projects;  Release planning;  Scrum;  Software project management},
keywords={Decision making;  Optimization;  Project management;  Software engineering;  Surveys, Agile software development;  Large project;  Release planning;  Scrum;  Software project management, Software design},
}

@ARTICLE{Garcia2015117,
author={Garcia, I.A. and Calvo-Manzano, J.A. and Pacheco, C.L. and Perez, C.A.},
title={Software Engineering education for a graduate course: A web-based tool for conducting process improvement initiatives with local industry collaboration},
journal={Computer Applications in Engineering Education},
year={2015},
volume={23},
number={1},
pages={117-136},
doi={10.1002/cae.21584},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920917101&doi=10.1002%2fcae.21584&partnerID=40&md5=e8ab5d82b60eac1298aa6173790963c5},
abstract={In recent years, there has been an on-going demand for better services and functionality in software products; as a consequence many models, techniques, and tools have been developed such as CMMI-DEV v1.2, TSP, or Scrum. However, software products still suffer from excessive costs, delays in delivery, and low quality. Furthermore, there is a lack of educational material providing high levels of interaction between students and the software industry to learn about how enterprises adopt these models, techniques, and tools into their daily work. This article describes a web-based Tool (EduSysProVAL) to support a graduate course in collaboration with the local software industry. The main goal of this research is to demonstrate that a Software Engineering course may use the EduSysProVAL tool to improve students' practical and professional skills, thus increasing their participation and effort in improvement initiatives, in comparison to traditional educational approaches which are only based on theory classes. This research uses a four-category questionnaire and follow-up interviews to evaluate a satisfactory level of tool effectiveness with undergraduate students and summarizes the industry's positive perceptions about its contribution to the course. © 2013 Wiley Periodicals, Inc.},
author_keywords={Graduate level;  Software Engineering education;  Software industry collaboration;  Web-based tool},
keywords={Education;  Education computing;  Engineering education;  Social networking (online);  Software engineering;  Surveys;  Websites;  World Wide Web, Educational materials;  Graduate levels;  Industry collaboration;  Process improvement initiatives;  Software engineering course;  Software industry;  Undergraduate students;  Web-based tools, Students},
}

@BOOK{Carroll20141,
author={Carroll, N.},
title={Open innovation: Assessing the socio-economic factors of global software development},
journal={Human Factors in Software Development and Design},
year={2014},
pages={1-22},
doi={10.4018/978-1-4666-6485-2.ch001},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946142955&doi=10.4018%2f978-1-4666-6485-2.ch001&partnerID=40&md5=1ae67e6950a1e832180a29f83ea7d391},
abstract={Software engineering is largely concerned with the methodical, systematic production of quality software. Despite significant advances in technology over the last decade, software engineering still heavily relies on human efforts and human interaction to generate economic contributions. In more recent years, the question of software service complexity has become central to Global Software Development (GSD). However, few efforts have surfaced to challenge the complexity of the relational infrastructure of software teams that support the development of software architecture. This is important in order to sustain and support lean software development organisational structures particularly in an open service innovation environment. However, from a socio-economic perspective, there are few theoretical efforts that attempt to introduce new insights on how the human factors contribute towards a GSD value cocreation. The objective of this chapter is to examine the application of Social Network Analysis (SNA) and i(i star) modelling techniques to examine how we could model the economic impact of software relational structures. The chapter explores how i models leverage SNA concepts to model GSD. This chapter also offers a discussion on the theoretical development of the socio-economics of GSD in an "open innovation" context. © 2015, IGI Global. All rights reserved.},
}

@CONFERENCE{Schmidt2014,
author={Schmidt, S. and Schnitzer, S. and Rensing, C.},
title={Domain-Independent sentence type classification: Examining the scenarios of scientific abstracts and scrum protocols},
journal={ACM International Conference Proceeding Series},
year={2014},
volume={16-19-September-2014},
doi={10.1145/2637748.2638409},
art_number={2638409},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988014610&doi=10.1145%2f2637748.2638409&partnerID=40&md5=0a157e7c3b6ee8112de8cf1869d94bf3},
abstract={The amount of available textual information in everybody's daily environment is increasing steadily. To satisfy a user's information needs, the user has to examine numerous documents until the required information has been found. Addi-Tionally, the relevant information is often contained in only short sections of the considered documents. This leads to a high amount of irrelevant text the user has to read what could be solved by filtering relevant information within tex-Tual documents automatically. In this article we present our findings on the classification of sentences according to the type of information contained. Our evaluation has been con- ducted on documents from the field of abstracts of scientific publications and protocols of Scrum retrospective meetings. The results show the feasibility of our approach for finding a higher percentage of relevant information within textual documents and hence reducing the information overload for the users. © Copyright 2014 ACM.},
author_keywords={Information extraction;  Knowledge discovery;  Text classifica-Tion},
keywords={Abstracting;  Classification (of information);  Data mining;  Information retrieval;  Information retrieval systems;  Information science, Domain independents;  Information overloads;  Scientific publications;  Text classifica-Tion;  Textual documents;  Textual information;  Type classifications, Information filtering},
}

@ARTICLE{Vijayakumaran2014,
author={Vijayakumaran, V. and Radhamani, G. and Thangaiah, P.R.J.},
title={Integrated framework for enhancing software development methodologies with comparative analysis},
journal={Journal of Computing and Information Science in Engineering},
year={2014},
volume={14},
number={3},
doi={10.1115/1.4027889},
art_number={031010},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993964705&doi=10.1115%2f1.4027889&partnerID=40&md5=ad97346467c006d488a0f638157406f0},
abstract={The delivery process of any IT organization depends on the effective software development methodologies. Along with conventional software development methodologies, corporates are also found to adopt various quality standards in order to enhance their development methodologies. Although there were substantial researches work carried out in past, majority of the study discusses about the theoretical implementation of quality standards. Due to various intermittent impediments, e.g., requirement volatility, skill gap, schedule slippage, etc., the standard quality models are very often violated in real time environment leading to degradation in development methodologies. Hence, this manuscript discusses an integrated framework using Scrum, Lean Six Sigma, and Agile which has been formulated on the basis on existing flaws in software development methodologies and propose some of the potential features to enhance it. Copyright © 2014 by ASME.},
author_keywords={Agile;  Lean six sigma;  Scrum;  Software methodologies},
keywords={Lean production;  Process engineering;  Process monitoring;  Quality control;  Software engineering;  Standardization;  Work simplification, Agile;  Development methodology;  Integrated frameworks;  Lean Six Sigma;  Real-time environment;  Scrum;  Software development methodologies;  Software methodologies, Software design},
}

@BOOK{Ghani2014293,
author={Ghani, I. and Arbain, A.F.B. and Azham, Z. and Yasin, N.I. and Jeong, S.R.},
title={Integrating security into agile models: Scrum, feature-driven development (FDD), and eXtreme programming (XP)},
journal={Handbook of Research on Emerging Advancements and Technologies in Software Engineering},
year={2014},
pages={293-308},
doi={10.4018/978-1-4666-6026-7.ch013},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945986749&doi=10.4018%2f978-1-4666-6026-7.ch013&partnerID=40&md5=17c7dd7f97f3cadcb97124912f03ccdc},
abstract={Agile methodologies have gained recognition in recent years as being efficient development processes through their quick delivery of software, even under time constraints. Agile methodologies consist of a few process models that have their own criteria in helping different types of projects. However, agile methods such as Scrum, Feature-Driven Development (FDD), and eXtreme Programming (XP) have been criticized due to the lack of availability of security elements in their various phases, resulting in the development of unsecure software. Thus, the authors propose the idea of a set of security-focused elements to enhance the existing agile models. In this chapter, the findings of the related research and the highlights of improved agile models after the integration of security are presented. © 2014 by IGI Global. All rights reserved.},
}

@BOOK{Scott2014250,
author={Scott, E. and Rodríguez, G. and Soria, A. and Campo, M.},
title={Experiences in software engineering education: Using scrum, agile coaching, and virtual reality},
journal={Overcoming Challenges in Software Engineering Education: Delivering Non-Technical Knowledge and Skills},
year={2014},
pages={250-276},
doi={10.4018/978-1-4666-5800-4.ch013},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949474313&doi=10.4018%2f978-1-4666-5800-4.ch013&partnerID=40&md5=e8a806da48816e218e9e893044182c11},
abstract={Software Engineering courses aim to train students to succeed in meeting the challenges within competitive and ever-changing professional contexts. Thus, undergraduate courses require continual revision and updating so as to cater for the demands of the software industry and guarantee academic quality. In this context, Scrum results in both a suitable and a flexible framework to train students in the implementation of professional software engineering practices. However, current approaches fail to provide guidance and assistance in applying Scrum, or a platform to address limitations in time, scope, and facilities within university premises. In this chapter, the authors present a software engineering training model based on the integration of the Agile Coach role and a virtual-reality platform called Virtual Scrum. The findings highlight the benefits of integrating this innovative model in a capstone course. Not only does this approach strengthen the acquisition of current software engineering practices but also opens new possibilities in the design of training courses. © 2014, IGI Global. All rights reserved.},
}

@CONFERENCE{Dragicevic201465,
author={Dragicevic, S. and Celar, S. and Novak, L.},
title={Use of method for elicitation, documentation, and validation of software user requirements (MEDoV) in agile software development projects},
journal={Proceedings - 6th International Conference on Computational Intelligence, Communication Systems and Networks, CICSyN 2014},
year={2014},
pages={65-70},
doi={10.1109/CICSyN.2014.27},
art_number={7059146},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946689872&doi=10.1109%2fCICSyN.2014.27&partnerID=40&md5=0d80044920509d002f12fcaea87e8ad7},
abstract={Agile and lean software development methodologies appear as a popular alternative to plan-driven methodologies, but these methodologies have no structure in the process of user requirements specification. This paper shows how Method for Elicitation, Documentation and Validation of Software User Requirements (MEDoV) supports agile and lean software development methodologies. The MEDoV helps stakeholders in their everyday work with minimal impact on agility. The method also ensures an active role of business users, a wide-picture what usually is the problem for agile development, and definition of non-functional requirements, what the even bigger problem is. The MEDoV ensures that no unnecessary features are produced so that no extra code is created, and maintenance is easier, as well as code correction and improvement. Using models enables agility in product maintenance, especially for integrated systems where one change can have multiple impacts on different parts of system. © 2014 IEEE.},
author_keywords={Agile Methodologies;  Business Process Management;  Event-driven Process Chain (EPC) Method;  Lean Software Development;  Requirements Engineering;  UML Diagrams},
keywords={Administrative data processing;  Agile manufacturing systems;  Artificial intelligence;  Enterprise resource management;  Maintenance;  Requirements engineering;  Software engineering, Agile Methodologies;  Business process management;  Event driven process chain;  Lean software development;  UML diagrams, Software design},
}

@ARTICLE{Randall201426,
author={Randall, R.M.},
title={Agile at IBM: Software developers teach a new dance step to management},
journal={Strategy and Leadership},
year={2014},
volume={42},
number={2},
pages={26-29},
doi={10.1108/SL-01-2014-0003},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898732918&doi=10.1108%2fSL-01-2014-0003&partnerID=40&md5=7b0ccb1108fff26c6f6af6118c4a08a3},
abstract={Purpose: Explains how companies that are seeking to implement rapid innovation can adopt the Agile software development approach. In Agile, self-organizing teams work in short cycles called "sprints" and develop the features to enable the product to continuously evolve in the light of the experience they gain and through customer feedback. Design/methodology/approach: For insight into how Agile is being implemented at a leading software services firm with clients in hundreds of industries, Strategy & Leadership asked Rob Purdie, Agile Practice Lead for the IBM Design Lab, how Agile software development methods were contributing to the success of IBM's key digital marketing initiatives. Findings: The traditional approach to software development is to define, design, develop and test everything - before delivering anything. With Agile, managers can reduce waste by prioritizing features based on relative business value, evaluating and re-designing as the project proceeds. Practical implications: Agile requires leaders and teams to work and learn through problems, designs and options in an open and transparent environment. It places new demands on technical leaders in terms of negotiation and planning skills. Originality/value: Managers outside the software industry should note that Agile/Scrum is likely to be increasingly essential to the future of product development and manufacturing. Nowadays many products for consumers and businesses include embedded software systems, so developing products in the future will require deeper collaboration across multiple engineering disciplines and marketing teams and familiarity with the Agile approach. © Emerald Group Publishing Limited.},
author_keywords={Agile software development;  Continuous innovation;  IBM Design Lab;  Product development;  Scrum},
}

@ARTICLE{Aziz2014123,
author={Aziz, K.A.},
title={Problem solving representations in systems development},
journal={International Journal of Business Information Systems},
year={2014},
volume={15},
number={2},
pages={123-144},
doi={10.1504/IJBIS.2014.059249},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894487047&doi=10.1504%2fIJBIS.2014.059249&partnerID=40&md5=ad399d4db9ece9fb1843d557dd06bb51},
abstract={The contemporary trend of utilising rapid and agile methodologies in systems development indicates the importance of the iterative refinement of the representation of user problems, which usually begins with an inadequate representation of the actual problems. Although the iterative element is a well-acknowledged process among practitioners, it has yet to be incorporated in general theories of problem solving. This study performs a qualitative analysis on the development tasks of 11 respondents utilising the cognitive fit theory (CFT) as a lens to uncover the iterative nature of systems development as a problem solving task. The present study suggests the explicit inclusion of iterative elements into the CFT by modifying the theory. The study finds that while problem representations do inform the formation of mental representation and affect problem solving performance through a typical input-process-output flow, iterative processes also occur when mental representation affects problem representations. Additionally, the findings of the present study also establish three further branch-out models, based upon the modified CFT, to cater for specific circumstances: the cognitive fit model with learning; the cognitive fit model for recurring tasks; and the cognitive fit model for decision making triggered tasks. Copyright © 2014 Inderscience Enterprises Ltd.},
author_keywords={Cognitive fit;  Iterative;  Mental representation;  Problem representation;  Problem solving;  Qualitative method;  Systems development},
}

@BOOK{Meyer20141,
author={Meyer, B.},
title={Agile!: The good, the hype and the ugly},
journal={Agile!: The Good, the Hype and the Ugly},
year={2014},
pages={1-170},
doi={10.1007/978-3-319-05155-0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930793395&doi=10.1007%2f978-3-319-05155-0&partnerID=40&md5=48d0b330908f949fe7878f61702af4a4},
abstract={Are you attracted by the promises of agile methods but put off by the fanaticism of many agile texts? Would you like to know which agile techniques work, which ones do not matter much, and which ones will harm your projects? Then you need Agile!: the first exhaustive, objective review of agile principles, techniques and tools. Agile methods are one of the most important developments in software over the past decades, but also a surprising mix of the best and the worst. Until now every project and developer had to sort out the good ideas from the bad by themselves. This book spares you the pain. It offers both a thorough descriptive presentation of agile techniques and a perceptive analysis of their benefits and limitations. Agile! serves first as a primer on agile development: one chapter each introduces agile principles, roles, managerial practices, technical practices and artifacts. A separate chapter analyzes the four major agile methods: Extreme Programming, Lean Software, Scrum and Crystal. The accompanying critical analysis explains what you should retain and discard from agile ideas. It is based on Meyer's thorough understanding of software engineering, and his extensive personal experience of programming and project management. He highlights the limitations of agile methods as well as their truly brilliant contributions - even those to which their own authors do not do full justice. Three important chapters precede the core discussion of agile ideas: an overview, serving as a concentrate of the entire book; a dissection of the intellectual devices used by agile authors; and a review of classical software engineering techniques, such as requirements analysis and lifecycle models, which agile methods criticize. The final chapters describe the precautions that a company should take during a transition to agile development and present an overall assessment of agile ideas. This is the first book to discuss agile methods, beyond the brouhaha, in the general context of modern software engineering. It is a key resource for projects that want to combine the best of established results and agile innovations. © Springer International Publishing Switzerland 2014. All rights are reserved.},
}

@CONFERENCE{Esteban201481,
author={Esteban, G. and Fernandez, C. and Conde, M.A. and Lera, F.J.R.},
title={Implementation of a haptic simulation environment for surgical learning systems},
journal={2014 International Symposium on Computers in Education, SIIE 2014},
year={2014},
pages={81-86},
doi={10.1109/SIIE.2014.7017709},
art_number={7017709},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946689668&doi=10.1109%2fSIIE.2014.7017709&partnerID=40&md5=c174a488c5275850fc59c602356cface},
abstract={The acquisition of manual and visual skills for a surgery student is related with their practical experience. An alternative to traditional methods of surgical learning is the use of virtual reality simulators. However, there is not a standard to guarantee proper learning with virtual reality simulators. In order to solve this, we have designed a framework that facilitates developing this type of surgery simulators. The present work summarizes the design of the framework and delves into implementation details gathered through the application of SCRUM agile methodology. Among this details this research is specially focused in how to model the information obtained while using the simulator, that allow assessing students performance. © 2014 IEEE.},
author_keywords={design patterns;  haptic simulator;  teaching-learning environment},
keywords={Computer aided instruction;  Education computing;  Simulators;  Students;  Surgery;  Virtual reality, Agile Methodologies;  Design Patterns;  Haptic simulations;  Haptic simulators;  Practical experience;  Surgery Simulator;  Teaching-learning environment;  Virtual reality simulator, Surgical equipment},
}

@CONFERENCE{Pascual-Miguel201475,
author={Pascual-Miguel, F.J. and Conde-Gonzalez, M.A. and Acquila-Natale, E. and Alvarez-Pedroviejo, R.},
title={Design and development of a business simulation game application for service-based and digital economy},
journal={2014 International Symposium on Computers in Education, SIIE 2014},
year={2014},
pages={75-80},
doi={10.1109/SIIE.2014.7017708},
art_number={7017708},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946686208&doi=10.1109%2fSIIE.2014.7017708&partnerID=40&md5=8e20dc50d69ecc8a5f2c433b92268ab9},
abstract={Business simulation games have been used for some decades now as a training complement for business administration studies, but more recently they have already been included as part of engineering teaching. Although there is little debate about the usefulness and efficacy of business simulation games, most of them are based on traditional concepts of economy related to manufacturing and distribution of physical goods. Therefore, they are a reflection of an analog economy and they may not be adequate to represent situations and scenarios of the digital economy. This study aims to overcome this problem and proposes the development of a new business simulation tool that suits the new training needs of engineers. © 2014 IEEE.},
author_keywords={business simulation;  business simulation games;  digital economy;  SCRUM},
keywords={Personnel training, Business administration;  Business simulation;  Business simulation games;  Design and Development;  Digital economy;  Engineering teachings;  SCRUM;  Training needs, Distribution of goods},
}

@CONFERENCE{Kumar2014515,
author={Kumar, M. and Shukla, M. and Agarwal, S.},
title={A hybrid approach of requirement engineering in agile software development},
journal={Proceedings - 2013 International Conference on Machine Intelligence Research and Advancement, ICMIRA 2013},
year={2014},
pages={515-519},
doi={10.1109/ICMIRA.2013.108},
art_number={6918885},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910004614&doi=10.1109%2fICMIRA.2013.108&partnerID=40&md5=3b68454763a27364c0518eaaf0f67319},
abstract={Requirement engineering is the important phase in the software development. Here, we gather all requirements of the software which is proposed for development. An agile methodology produces high quality software and takes less time in comparison to traditional methods. Agile was discovered for managing the development process in the environment where requirement could be changed during development process. Requirement engineering is the important phase in the agile development methodology. In this paper, we are providing a hybrid approach for requirement engineering in the agile with the help of JAD and the prioritization of the requirements in the agile is helped by the viewpoint. © 2013 IEEE.},
author_keywords={Agile methodology;  JAD;  Requirement engineering;  Viewpoint},
keywords={Artificial intelligence, Agile development methodologies;  Agile Methodologies;  Agile software development;  Development process;  High-quality software;  JAD;  Requirement engineering;  Viewpoint, Software design},
}

@ARTICLE{Kumar2014913,
author={Kumar, S. and Ranjan, R. and Trivedi, A.K.},
title={A new paradigm for open source software development},
journal={Advances in Intelligent Systems and Computing},
year={2014},
volume={243},
pages={913-918},
doi={10.1007/978-81-322-1665-0_92},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927623714&doi=10.1007%2f978-81-322-1665-0_92&partnerID=40&md5=6992597981e0996af17e211d8f719ea2},
abstract={Any software development process requires different expertise, such as software engineering and project management. While software management works on the issues related to design, coding, testing, and maintenance, project management deals with planning, monitoring, risk management, etc. In software management, we try to work on the problem domain for a wider scope so that we can solve all related problems by applying a single model. Today, we have different models available for software development, and some are suited for open source software system. Agile methodology is one of those methods for the development of software project. This paper gives refined model based on Agile methodology for open source software systems (OSS). © Springer India 2014.},
author_keywords={Agile;  Agile methodology;  Extreme programming;  Incremental;  Iterative},
keywords={Agile manufacturing systems;  Computer software;  Information science;  Intelligent computing;  Iterative methods;  Open systems;  Project management;  Risk management;  Software design;  Software engineering;  Software testing, Agile;  Agile Methodologies;  EXtreme Programming;  Incremental;  Iterative, Open source software},
}

@CONFERENCE{Lin2014,
author={Lin, J. and Yu, H. and Shen, Z. and Miao, C.},
title={Using goal net to model user stories in agile software development},
journal={2014 IEEE/ACIS 15th International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD 2014 - Proceedings},
year={2014},
doi={10.1109/SNPD.2014.6888731},
art_number={6888731},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908680852&doi=10.1109%2fSNPD.2014.6888731&partnerID=40&md5=5e953ca4d3eb9a5a62ec4664bbb1f456},
abstract={Agile methodologies use user stories to capture software requirements. This often results in team members over emphasizing their understanding of the goals, without proper incorporation of goals from other stakeholders or customers. Existing UML or other goal oriented modeling methods tend to be overly complex for non-technical stakeholders to properly express their goals and communicate them to the agile team. In this paper, we propose a light weight Goal Net based method to model goal requirements in agile software development process to address this problem. It can be used to decompose complex processes into phased goals, and model low level user stories to high level hierarchy goal structures. Our preliminary analysis and studies in educational software engineering contexts show that it can improve agile team's group awareness to project goals and, thus, improve team productivity and artifact quality. The proposed approach was evaluated in university level agile software engineering projects. It has achieved an improvement of over 50 percentage points in terms of the proportion of high quality user stories generated by students compared to the standard user story template used in Scrum, © 2014 IEEE.},
author_keywords={Agile Software Development;  Goal Net;  Software Engineering},
keywords={Artificial intelligence;  Quality control;  Software design, Agile software development;  Agile software development process;  Agile software engineering;  Goal Net;  Goal oriented modeling;  Preliminary analysis;  Software requirements;  Technical stakeholders, Software engineering},
}

@ARTICLE{Wautelet2014211,
author={Wautelet, Y. and Heng, S. and Kolp, M. and Mirbel, I.},
title={Unifying and extending user story models},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2014},
volume={8484 LNCS},
pages={211-225},
doi={10.1007/978-3-319-07881-6_15},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903202178&doi=10.1007%2f978-3-319-07881-6_15&partnerID=40&md5=8ef9c264b9cb03bfeb5c3b82ae6cbab6},
abstract={Within Agile methods, User Stories (US) are mostly used as primary requirements artifacts and units of functionality of the project. The idea is to express requirements on a low abstraction basis using natural language. Most of them are exclusively centered on the final user as only stakeholder. Over the years, some templates (in the form of concepts relating the WHO, WHAT and WHY dimensions into a phrase) have been proposed by agile methods practitioners or academics to guide requirements gathering. Using these templates can be problematic. Indeed, none of them define any semantic related to a particular syntax precisely or formally leading to various possible interpretations of the concepts. Consequently, these templates are used in an ad-hoc manner, each modeler having idiosyncratic preferences. This can nevertheless lead to an underuse of representation mechanisms, misunderstanding of a concept use and poor communication between stakeholders. This paper studies templates found in literature in order to reach unification in the concepts' syntax, an agreement in their semantics as well as methodological elements increasing inherent scalability of US-based projects. © 2014 Springer International Publishing.},
author_keywords={Agile Requirements Modeling;  eXtreme Programming;  Scrum;  User Story Template},
keywords={Information systems;  Semantics;  Syntactics, Agile methods;  Agile Requirements Modeling;  EXtreme Programming;  Natural languages;  Representation mechanism;  Requirements gathering;  Scrum;  User stories, Systems engineering},
}

@ARTICLE{Misaghi2014697,
author={Misaghi, M. and Bosnic, I.},
title={Lean Mindset in Software Engineering: A Case Study in a Software House in Brazilian State of Santa Catarina},
journal={Communications in Computer and Information Science},
year={2014},
volume={466 CCIS},
pages={697-707},
doi={10.1007/978-3-319-11854-3_60},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907340987&doi=10.1007%2f978-3-319-11854-3_60&partnerID=40&md5=f25eafd36444e4d6f3a2adbfe1feae9f},
abstract={This article presents a literature review whose purpose is to identify the key characteristics of lean software development and its similarities and differences with agile methodologies. For concept proof, a case study conducted in a team of software developers is presented, where lean concepts were applied within the current process, previously based on agile methodologies. It was found at the end of this work that the indicator used by the team, percentage of the time spent on improvements and new features, had a significant increase, causing the team be able to add more value to the product, and to increase the level of quality. This article ends with the presentation of the steps required for the development of lean mindset in software engineering. © Springer International Publishing Switzerland 2014.},
author_keywords={Agile methodologies;  Lean mindset;  Scrum;  Software},
keywords={Computer software;  Knowledge based systems, Agile Methodologies;  Key characteristics;  Lean mindset;  Lean software development;  Literature reviews;  Scrum;  Software developer;  Software house, Software engineering},
}

@CONFERENCE{Usman201482,
author={Usman, M. and Mendes, E. and Weidt, F. and Britto, R.},
title={Effort estimation in Agile Software Development: A systematic literature review},
journal={ACM International Conference Proceeding Series},
year={2014},
pages={82-91},
doi={10.1145/2639490.2639503},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905666395&doi=10.1145%2f2639490.2639503&partnerID=40&md5=3a589a32a9893400f14a098a22a06b8a},
abstract={Context: Ever since the emergence of agile methodologies in 2001, many software companies have shifted to Agile Software Development (ASD), and since then many studies have been conducted to investigate effort estimation within such context; however to date there is no single study that presents a detailed overview of the state of the art in effort estimation for ASD. Objectives: The aim of this study is to provide a detailed overview of the state of the art in the area of effort estimation in ASD. Method: To report the state of the art, we conducted a systematic literature review in accordance with the guidelines proposed in the evidence-based software engineering literature. Results: A total of 25 primary studies were selected; the main findings are: i) Subjective estimation techniques (e.g. expert judgment, planning poker, use case points estimation method) are the most frequently applied in an agile context; ii) Use case points and story points are the most frequently used size metrics respectively; iii) MMRE (Mean Magnitude of Relative Error) and MRE (Magnitude of Relative Error) are the most frequently used accuracy metrics; iv) team skills, prior experience and task size are cited as the three important cost drivers for effort estimation in ASD; and v) Extreme Programming (XP) and SCRUM are the only two agile methods that are identified in the primary studies. Conclusion: Subjective estimation techniques, e.g. expert judgment-based techniques, planning poker or the use case points method, are the one used the most in agile effort estimation studies. As for the size metrics, the ones that were used the most in the primary studies were story points and use case points. Several research gaps were identified, relating to the agile methods, size metrics and cost drivers, thus suggesting numerous possible avenues for future work. Copyright 2014 ACM.},
author_keywords={Agile software development;  Effort estimation;  Systematic literature review},
keywords={Computer applications;  Computer programming, Agile Methodologies;  Agile software development;  Effort Estimation;  Estimation techniques;  Evidence Based Software Engineering;  EXtreme Programming;  Mean magnitude of relative errors;  Systematic literature review, Software design},
}

@CONFERENCE{Kumar2014189,
author={Kumar, G. and Bhatia, P.K.},
title={Comparative analysis of software engineering models from traditional to modern methodologies},
journal={International Conference on Advanced Computing and Communication Technologies, ACCT},
year={2014},
pages={189-196},
doi={10.1109/ACCT.2014.73},
art_number={6783451},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899529370&doi=10.1109%2fACCT.2014.73&partnerID=40&md5=a69298e53f628ce3a04b8867b0e1b126},
abstract={Software Engineering aims to produce a quality software product that is delivered on time, within the allocated budget, and with the requirements expected by the customer but unfortunately maximum of the times this goal is rarely achieved. A software life cycle is the series of identifiable stages that a software product undergoes during its lifetime. However, a properly managed project in a matured software engineering environment can consistently achieve this goal. This research is concerned with the methodologies that examine the life cycle of software through the development models, which are known as software development life cycle. Hereby, we are representing traditional i.e. waterfall, Iteration, Spiral models as well as modern development methodologies like Agile methodologies that includes Extreme programming, Scrum, Feature Driven Development, Component based software development methodologies etc. All of these models have advantages and disadvantages as well. Therefore, the main objective of this research is to represent different models of software development by showing the good and bad practices of each model. A comparative analysis of traditional as well as modern methodologies is made. © 2014 IEEE.},
author_keywords={Modern models;  Software Engineering;  Software Engineering Models;  Traditional models},
keywords={Communication systems;  Life cycle;  Software design;  Software engineering, Comparative analysis;  Component-based software development;  Feature driven development;  Modern development methodologies;  Software development life cycle;  Software engineering environments;  Software engineering model;  Traditional models, Iterative methods},
}

@CONFERENCE{Wei2014978,
author={Wei, Q. and Danwei, G. and Yaohong, X. and Jingtao, F. and Cheng, H. and Zhengang, J.},
title={Research on software development process conjunction of scrum and UML modeling},
journal={Proceedings - 2014 4th International Conference on Instrumentation and Measurement, Computer, Communication and Control, IMCCC 2014},
year={2014},
pages={978-982},
doi={10.1109/IMCCC.2014.206},
art_number={6995176},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921816227&doi=10.1109%2fIMCCC.2014.206&partnerID=40&md5=d84ab0e868830ee6f77d928198ee96c2},
abstract={Scrum has become the most popular agile methodology in recent years. It focuses on management and organization of software project, and doesn't provide descriptions about how everything is to be done on a project. This paper presents an approach of combining the Scrum methodology with the UML modeling methods, in which UML modeling technologies are mapped onto the scrum practices. This approach follows the organization and management pattern of scrum, and provides a detailed implementation methods technologically based on the UML modeling methods. It inherits the merits of both scrum and UML modeling. © 2014 IEEE.},
author_keywords={agile;  Agile requirement analysis;  scrum;  UML modeling},
keywords={Software engineering, agile;  Agile Methodologies;  Agile requirements;  Organization and management;  scrum;  Scrum methodologies;  Software development process;  UML Model, Software design},
}

@CONFERENCE{VanDenBroek2014561,
author={Van Den Broek, R. and Bonsangue, M.M. and Chaudron, M. and Van Merode, H.},
title={Integrating testing into agile software development processes},
journal={MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
year={2014},
pages={561-569},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906898151&partnerID=40&md5=1554a7a0ad959788f31a82b85f5d3be7},
abstract={Although Agile methodologies have grown very popular, there is a limited amount of literature that combines Agile software methodologies and testing, especially on how testing is integrated with Scrum. In this paper we present an analysis of problem based on case study performed at the IT department of KLM regarding testing in a Scrum team. After having triangulated our results with several interviews with external topical experts and existing literature we propose a visual model that integrates testing activities in Scrum. Copyright © 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.},
author_keywords={Agile development;  Agile testing;  Scrum;  Software processes;  Testing},
keywords={Software design;  Testing, Agile development;  Agile Methodologies;  Agile software development process;  Agile softwares;  Agile testing;  Problem-based;  Scrum;  Software process, Integration testing},
}

@ARTICLE{AlberoPomar2014776,
author={Albero Pomar, F. and Calvo-Manzano, J.A. and Caballero, E. and Arcilla-Cobián, M.},
title={Understanding sprint velocity fluctuations for improved project plans with Scrum: a case study},
journal={Journal of Software: Evolution and Process},
year={2014},
volume={26},
number={9},
pages={776-783},
doi={10.1002/smr.1661},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979896356&doi=10.1002%2fsmr.1661&partnerID=40&md5=96a4b531005f1c7594c325238701eccc},
abstract={Starting from the documentation of high sprint velocity fluctuations in a Scrum project, this paper presents a thorough approach to identify the sources of issues arising in the context of Scrum implementation. Given that Scrum provides guidance on identifying process issues but not their root causes, various approaches are explored. This is of great relevance because Scrum defines project schedules relying heavily on sprint velocity and because it is the most widely used agile methodology. The findings provide a new approach to evaluate such fluctuations and establish a more realistic project assessment than what is currently defined by Scrum. In this respect, this paper contributes to improve the understanding of the software development process using this agile framework. Copyright © 2014 John Wiley & Sons, Ltd. Copyright © 2014 John Wiley & Sons, Ltd.},
author_keywords={agile methodologies;  agile planning;  Scrum;  sprint velocity},
keywords={Copyrights;  Software design;  Velocity, Agile Methodologies;  New approaches;  Process issues;  Project schedules;  Realistic projects;  Scrum;  Software development process;  Velocity fluctuations, Software engineering},
}

@CONFERENCE{Silva2014139,
author={Silva, F.S. and Soares, F.S.F. and Peres, A.L. and De Azevedo, I.M. and Pinto, P.P. and De Lemos Meira, S.R.},
title={A reference model for agile quality assurance: Combining agile methodologies and maturity models},
journal={Proceedings - 2014 9th International Conference on the Quality of Information and Communications Technology, QUATIC 2014},
year={2014},
pages={139-144},
doi={10.1109/QUATIC.2014.25},
art_number={6984105},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921027020&doi=10.1109%2fQUATIC.2014.25&partnerID=40&md5=1d567ba845e5a053fce36be40d2722ad},
abstract={The area of Quality Assurance (QA) is a challenge for many software development organizations that want to implement maturity models level rating, like Capability Maturity Model Integration (CMMI), together with agile methodologies. This study aims to present AgileQA-RM, an Agile Quality Assurance Reference Model to help organizations in QA implementation. The model proposition considers results of a systematic literature review about CMMI and agile, and a case study about QA in an organization with CMMI and agile. The methodology for model evaluation started with a check of its process areas adherence with other maturity models and with agile practices and activities. A survey based on expert opinion was also performed. Five maturity levels and eighteen process areas compose AgileQA-RM. Each process area has mandatory purpose, expected results and informative work products. Initial model assessments indicates that it can contribute to help organizations assessing its current situation about agile QA practices and supporting quality improvement through adoption of agile QA practices. © 2014 IEEE.},
author_keywords={agile methodologies;  CMMI;  maturity models;  quality assurance},
keywords={Quality assurance;  Societies and institutions;  Software design, Agile Methodologies;  Capability maturity model integration;  CMMI;  Maturity model;  Quality improvement;  Reference modeling;  Software development organizations;  Systematic literature review, Software engineering},
}

@ARTICLE{Scott201456,
author={Scott, E. and Rodríguez, G. and Soria, Á. and Campo, M.},
title={Are learning styles useful indicators to discover how students use Scrum for the first time?},
journal={Computers in Human Behavior},
year={2014},
volume={36},
pages={56-64},
doi={10.1016/j.chb.2014.03.027},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898603935&doi=10.1016%2fj.chb.2014.03.027&partnerID=40&md5=61271e2c64051678d788b78133653d52},
abstract={Teaching agile practices is in the cutting-edge of Software Engineering education since agile methodologies are widely used in the industry. An effective strategy to teach agile practices is the use of a capstone project, in which students develop requirements following an agile methodology. To improve students' learning experience, professors have to keep track and analyze the information generated by the students during the capstone project development. The problem here arises from the large amount of information generated in the learning process, which hinders professors to meet each student's learning profile. Particularly, to know the students skills and preferences are key aspects on a learner-centered approach of education in order to personalize the teaching. In this work, we aim to discover the relationships between students' performance along a Scrum-based capstone project and their learning style according to the Felder-Silverman model, towards a first step to build the profiles. To address this issue, we mined association rules from the interaction of 33 Software Engineering students with Virtual Scrum, a tool that supports the development of the capstone project in the course. In the present work we describe promising results in experiments with a case-study. © 2014 Elsevier Ltd. All rights reserved.},
author_keywords={Agile software development;  Learning styles;  Software Engineering;  Software Engineering education},
keywords={Education computing;  Engineering education;  Software engineering;  Teaching;  Virtual addresses;  Association reactions;  Curricula;  Education;  Education computing;  Engineering education;  Software design;  Software engineering;  Teaching;  Virtual addresses, Agile Methodologies;  Agile software development;  Capstone projects;  Learner-centered approach;  Learning profiles;  Learning Style;  Software engineering students;  Students' learning experiences, Students;  Students},
}

@CONFERENCE{Sadiq2014552,
author={Sadiq, M. and Hassan, T.},
title={An extended adaptive software development process model},
journal={Proceedings of the 2014 International Conference on Issues and Challenges in Intelligent Computing Techniques, ICICT 2014},
year={2014},
pages={552-558},
doi={10.1109/ICICICT.2014.6781341},
art_number={6781341},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899067818&doi=10.1109%2fICICICT.2014.6781341&partnerID=40&md5=88184c1d6de0f8183de707b9fef254c3},
abstract={Agile software development has received much attention in software development community because it promotes fast development of software product On the basis of our literature review, we have identified certain limitation of agile methods, i.e., there is no proper documentation, poor quality software due to fast development etc. Adaptive software development process (ASDP) model is modified approach of extreme programming (XP) which includes communication and planning; analysis; design and development; and testing and deployment There are four control variables in XP like cost, time, quality, and scope. This paper presents an extended version of ASDP model by integrating the esrcTool for the computation of cost of each requirement Finally, we identify the research issues for future work. © 2014 IEEE.},
author_keywords={Agile methods;  ASDP;  esrcTool;  XP},
keywords={Computer software selection and evaluation;  Cost benefit analysis;  Intelligent computing;  Product design;  Software design;  Software testing, Adaptive software development;  Agile methods;  Agile software development;  ASDP;  Design and Development;  Development community;  esrcTool;  XP, Quality control},
}

@CONFERENCE{Noor2014189,
author={Noor, M. and Khan, A. and Khan, M. and Brekhna},
title={Vendors' challenges in e-Government projects in Pakistan: Experience report of prisons automation},
journal={Proceedings of the European Conference on e-Government, ECEG},
year={2014},
pages={189-197},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006474658&partnerID=40&md5=7a748fea9e6ac1bf31d77403645de4e5},
abstract={There are a variety of ways an e-Government project is conceived, proposed, approved, implemented and maintained. In Pakistan there is a triangle between Private Vendor (which develops system / software), Executing Agency (Directorate of IT, which awards the project and is responsible for overall execution of the project), and Client Department (for whom the system is being developed). Each entity in the triangle, has its own objectives, and faces corresponding challenges in achieving those objectives. Some of the challenges are due to distribution of project responsibility in this inter-dependent manner. This paper specifically focuses on the challenges faced by the IT vendor in successfully delivering an e-Government project while satisfying all concerned stakeholders. Many organizations in Pakistan shy away from e- Government projects because of these challenges. Ample literature exists regarding challenges in implementation of IT projects in private and public sector. Different studies have been conducted in developing countries as well but limited specific research has been done with respect to the problems faced by the IT vendors in a developing country such as Pakistan. This study provides an overview of the e-Government implementation process and presents most pressing challenges faced by private vendors, through experience report of a successful implementation of Prison department of Pakistan. The study will be useful for each participant of earlier mentioned triangle, in understanding the problems and vendors may find direction of a solution for commonly faced problems. The paper also briefly reports, apart from challenges, beneficial factors which contributed towards the success of the project: higher management commitment, support, trust, and flexibility. The experience report consists of in depth case study of a real e-Government project. Two of the authors were part of the development team of the said project from inception till completion. Following sources were used for data collection: documentation i.e., SRS, Design, change log, minutes of external and internal meetings, personal experiences, emails and documentation exchanged between various stakeholders etc. and interviews with the development team regarding knowledge which is not contained in any form of documentation. The results show that requirement engineering (RE) is a very challenging task in e-Government automation projects. Mainly, lack of understanding of the domain by the vendor and software requirements by the personnel of the client department contribute to the phenomena of requirement creep and requirement change. The problems trace back to multiple factors such as: lack of skills, time and number of IT personnel in Client department, unrealistic objectives, limited time and resources allocated, limited documentation, discrepancies between policies and actual practices, etc. RE should not be done at once on the onset rather it should be an ongoing process as agile methodologies propose. Our experience shows that incremental and frequent delivery can ensure success of the project. A vendor should welcome requirement changes; however the scope should be well defined and well guarded by the vendor in order to ensure economic viability of the project.},
author_keywords={Agile development of e-Government project;  e-Government challenges in developing countries;  Requirements elicitation & management;  Success factors of e-Government},
keywords={Agile manufacturing systems;  Developing countries;  Prisons;  Requirements engineering, Agile Methodologies;  Automation project;  E-government implementation;  E-governments;  Personal experience;  Requirement engineering;  Requirements elicitation;  Software requirements, Government data processing},
}

@CONFERENCE{Sobiech2014266,
author={Sobiech, F. and Eilermann, B. and Rauch, A.},
title={On iteration optimization for non-cross-functional teams in Scrum},
journal={Proceedings of the 2014 Research in Adaptive and Convergent Systems, RACS 2014},
year={2014},
pages={266-271},
doi={10.1145/2663761.2664198},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910001908&doi=10.1145%2f2663761.2664198&partnerID=40&md5=e40568661019277ca532ae5b3ed0a81f},
abstract={One goal of Scrum is to deliver as much added value as possible for the customer at the end of an iteration but in an environment with multiple different customers and stakeholders the definition of value varies. Therefore we defined the concept of value in the context of an OEM in the automotive industry for management information systems. We identified seven relevant value dimensions in a first case study and in a second case study we investigated the relation between the seven different value dimensions. Afterwards we define an optimal iteration based on our value definition for multiple non-cross-functional teams and show that this problem is a NP-hard problem. © 2014 ACM.},
author_keywords={Agile development;  Scram;  Sprint optimization;  Value of user stories},
keywords={Automotive industry;  Computational complexity;  Information management, Added values;  Agile development;  Cross-functional teams;  Iteration optimizations;  Optimal iterations;  Scram;  User stories;  Value dimensions, Optimization},
}

@CONFERENCE{Torrecilla-Salinas2014348,
author={Torrecilla-Salinas, C.J. and Sedeño, J. and Escalona, M.J. and Mejías, M.},
title={Mapping agile practices to CMMI-DEV level 3 in web development environments},
journal={Information Systems Development: Transforming Organisations and Society Through Information Systems - Proceedings of the 23rd International Conference on Information Systems Development, ISD 2014},
year={2014},
pages={348-355},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923668614&partnerID=40&md5=6fe0647fc7a4a99901f8bffcbbfb6766},
abstract={Agile approaches formally appeared ten years ago and nowadays are a valid alternative for organizations developing software. Agile methodologies are especially interesting to those developing Web environments applications, as they can fit properly the special characteristics of this type of developments. In addition, maturity models like CMMI-DEV (Capability Maturity Model Integration for Development) focus on assessing the maturity level of organizations developing or acquiring software. These models are well established and can increment quality of development processes to enhance costumers' satisfaction. CMMI-DEV level 3 provides a good compromise on maturity gained and effort needed. The feasibility of getting it through a combination of Agile methods can be very useful to organizations developing systems in Web environments, as they can keep the adaptability of Agile together with a more mature development process. This paper proposes a set of Agile methods so as to reach all CMMI-DEV maturity level 3 generic and specific goals. Based on this analysis, the paper proposes further research lines.},
author_keywords={Agile;  CMMI;  Scrum;  Software engineering;  Web engineering},
keywords={Social networking (online);  Societies and institutions;  Software engineering;  World Wide Web, Agile;  Agile approaches;  Agile Methodologies;  Capability maturity model integration;  CMMI;  Development process;  Scrum;  Web engineering, Agile manufacturing systems},
}

@CONFERENCE{Peres201461,
author={Peres, A.L. and Da Silva, T.S. and Silva, F.S. and Soares, F.F. and De Carvalho, C.R.M. and De Lemos Meira, S.R.},
title={AGILEUX model: Towards a reference model on integrating UX in developing software using agile methodologies},
journal={Proceedings - 2014 Agile Conference, AGILE 2014},
year={2014},
pages={61-63},
doi={10.1109/AGILE.2014.15},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910059828&doi=10.1109%2fAGILE.2014.15&partnerID=40&md5=9604f151daca3e54d1126d1548caf8d1},
abstract={This paper presents a maturity model for integrating agile methods and user experience in the software development cycle that may be suitable for small companies. The proposal is in line with CMMI, MPS. BR and ISO18529. The model focuses on the first level of maturity where seeks to establish a standard process within an organization by defining agile practices, principles, techniques and artifacts of user experience. It also offers guidelines on how to integrate practices that are important for the evolution of maturity in order to evolve to more advanced levels. The preliminary model was verified by panels of experts. Future studies will be conducted so as to extend the model and do so by detailing other process levels and conducting action research at companies with experience in the maturation of process of integrating user experience into the software development cycle with CMMI and/or MPS. BR certifications. © 2014 IEEE.},
author_keywords={Agile methodologies;  CMMI;  Maturity models;  User experience},
keywords={Action research;  Agile Methodologies;  CMMI;  Maturity model;  Preliminary model;  Reference modeling;  Software development cycles;  User experience, Software design},
}

@CONFERENCE{Jabeen2014,
author={Jabeen, J. and Motla, Y.H. and Abbasi, M.A. and Batool, D.-E.-B. and Butt, R. and Nazir, S. and Anwer, S.A.},
title={Incorporating artificial intelligence technique into DSDM},
journal={Asia-Pacific World Congress on Computer Science and Engineering, APWC on CSE 2014},
year={2014},
doi={10.1109/APWCCSE.2014.7053838},
art_number={7053838},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988286611&doi=10.1109%2fAPWCCSE.2014.7053838&partnerID=40&md5=92672dd3b67c5c5931f6d9665ea8354c},
abstract={Dynamic System Development Method has been criticized because of absence security practices in its phases. The key objective is proposed the secure software development framework. CBR-DSDM model had proposed in this paper to cover the security in an entire development life cycle of DSDM phases from the beginning to final phase. This paper proposes a way to map security activities into the dynamic system development method. A Case based reasoning technique is used for maintaining security requirement repository. The main purpose of this research is to fill the gap by integrating security into DSDM phases and maintaining its agility. Our model is evaluated using publish case study. For the Assessment of CBR-DSDM used the control experiment and expert review evaluation methods. © 2014 IEEE.},
author_keywords={Agile methodology;  Case based reasoning;  Dynamic system development method;  Security},
keywords={Artificial intelligence;  Life cycle;  Software design, Agile Methodologies;  Artificial intelligence techniques;  Integrating security;  Secure software development;  Security;  Security activities;  Security requirements;  System development, Case based reasoning},
}

@ARTICLE{Gebhart2014279,
author={Gebhart, M. and Mevius, M. and Wiedmann, P.},
title={Business process evaluation in agile business process management using quality models},
journal={International Journal on Advances in Life Sciences},
year={2014},
volume={6},
number={3-4},
pages={279-290},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930841115&partnerID=40&md5=27871229de2ad5c3a200775385335942},
abstract={Agile business process management is an adaptation of the agile methodology, which is well-known in the area of software development. It supports the tight and efficient collaboration between customer and process analysts when designing processes. However, this methodology requires a governance approach that ensures the high quality of the processes. This article shows the usage of quality models to evaluate business processes in agile business process management environments and its specific challenges. To illustrate the approach, an existing quality model is reused and formalized. Afterwards, a business process in the context of offer management is captured and evaluated by means of this quality model. © by authors.},
author_keywords={Agile;  Business process;  Business process management;  Design;  ISO 25000;  Quality},
}

@CONFERENCE{DuqueM.Nathalia201429,
author={Duque M. Nathalia, B. and Pulgarín M. Mauricio, A. and Ríos P. Jorge, I.},
title={Foundations for a development methodology software agile model - Driven from a modeling graphic customer-oriented language},
journal={2014 9th Computing Colombian Conference, 9CCC 2014},
year={2014},
pages={29-34},
doi={10.1109/ColumbianCC.2014.6955364},
art_number={6955364},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84917709209&doi=10.1109%2fColumbianCC.2014.6955364&partnerID=40&md5=813c9a70e5f42bc1b8f7bad2052fa967},
abstract={The software modeling languages have been designed for systems engineers, computer or software developers. This is why they are in charge of interpret customer's specifications and build the business model that after a process of software engineering it will become into software. In this point it begins to open the gap between customer specifications and software development. This work provides an alternative to reduce the semantic loss during communication between the client and the developer, using business rules that can be modeled by the customer from a graphical modeling language that is easy to learn and using the principles of the development of model-driven software so that by automating the coding process it can be ensured that the specifications are modeled by the customer and that they are in the developed software. © 2014 IEEE.},
author_keywords={Graphic Model Languages;  Model Driven Development;  Software Development;  Software Engineering;  Ágile Methodologies},
keywords={Sales;  Semantics;  Software engineering;  Specifications, Business modeling;  Customer specifications;  Development methodology;  Graphic modeling language;  Graphical modeling language;  Model driven development;  Software developer;  Software modeling languages, Software design},
}

@CONFERENCE{Agarwal201444,
author={Agarwal, A. and Garg, N.K. and Jain, A.},
title={Quality assurance for product development using Agile},
journal={ICROIT 2014 - Proceedings of the 2014 International Conference on Reliability, Optimization and Information Technology},
year={2014},
pages={44-47},
doi={10.1109/ICROIT.2014.6798281},
art_number={6798281},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900344764&doi=10.1109%2fICROIT.2014.6798281&partnerID=40&md5=1e28bd535dc5d925fa6116b85a0fa5a9},
abstract={Achieving the highest level of quality for the software product being delivered is the goal of any IT organization. Every organization wants to implement processes and practices that would help achieving this goal of increasing the quality of a software product. There are so many models available today that an organization can use for developing a software but considering the dynamics of today s world where technology is changing at a fast pace and innovative products are hitting the market at great speed, these organizations do not want a software development model that consume lot of time and efforts, and hence most of the business houses are moving towards Agile approach for software development. With this change in approach for software development, the big question is that how to ensure Quality of product developed using Agile model. The traditional approach has a separate phase for testing a software product which ensures that an independent team has validated the product per specified requirements. However, with Agile way of software development, this leverage of involvement of independent test teams and test levels has taken a back. This paper, will highlight broadly the role of QA within Agile development model, with focus on fresh thoughts and approaches to improve the overall quality of product developed using Agile methodology. The use and importance of Metrics for accessing the Quality within Agile model will also be discussed. © 2014 IEEE.},
author_keywords={Agile;  Development Model;  Quality},
keywords={Image quality;  Information technology;  Optimization;  Product development;  Quality assurance;  Quality control;  Software design, Agile;  Agile Methodologies;  Development model;  Innovative product;  Quality of product;  Software development models;  Software products;  Traditional approaches, Software testing},
}

@CONFERENCE{Ramos20141417,
author={Ramos, H. and Vasconcelos, A.},
title={EXtreme enterprise architecture planning},
journal={Proceedings of the ACM Symposium on Applied Computing},
year={2014},
pages={1417-1419},
doi={10.1145/2554850.2555130},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905638818&doi=10.1145%2f2554850.2555130&partnerID=40&md5=fb24a0454ddccf6a3418466cea2a1c7c},
abstract={When developing enterprise architectures, in the same way as software products, companies have to deal a constant growth on the clients demand for faster results, while facing, at the same time, a big uncertainty on the requirements surrounding the project. This paper tries to investigate the similarities between the difficulties faced in both industries of EA and software development, and propose an extension to Enterprise Architecture Planning methodology [1], by introducing "agile" characteristics into it as a way to address the problems identified. Copyright 2014 ACM.},
author_keywords={Agile;  Business model;  Cycles;  Enterprise Architecture;  Enterprise Architecture Planning;  Extreme Programming;  Iterations;  Methodology;  Partitioning;  Processes;  Reference model;  Scrum;  Software Development},
keywords={Computation theory;  Processing;  Software engineering, Agile;  Business modeling;  Cycles;  Enterprise Architecture;  Enterprise architecture planning;  EXtreme Programming;  Iterations;  Methodology;  Partitioning;  Reference modeling;  Scrum, Software design},
}

@CONFERENCE{Manuja20141392,
author={Manuja, M. and Manisha, M.},
title={Moving agile based projects on Cloud},
journal={Souvenir of the 2014 IEEE International Advance Computing Conference, IACC 2014},
year={2014},
pages={1392-1397},
doi={10.1109/IAdCC.2014.6779530},
art_number={6779530},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899093701&doi=10.1109%2fIAdCC.2014.6779530&partnerID=40&md5=259a7be4a2fd88c8a3924fe3c31577be},
abstract={Cost, time and quality (CTQ) have been the primary factors behind continuous advancements in the field of Software development methodologies. Waterfall model has been with the software industry for over 30 years offering a sequential and linear development approach. However, the impending issues with regards to CTQ have led to rise of agile development methodologies in last couple of decades offering incremental & iterative development, customer collaboration and reduced time to market. The new agile paradigm, on the other side, is also bringing its own challenges and risks primarily in terms of runtime infrastructure cost, network accessibility and platform availability steering towards CTQ issues in a disguised manner. With Cloud Computing gaining popularity over the last few years offering almost zero CAPEX (Capital Expenditure), reduced OPEX (Operational Expenditure), high scalability & availability, it has been considered worthwhile to explore Agile based software development on Cloud. In this article, migration of Agile based project to Cloud has been discussed along with its benefits and challenges at both the stages. While Cloud adoption is a catalyst for Agile based development, there are a few open issues to be addressed. © 2014 IEEE.},
author_keywords={Agile Methodologies;  Cloud Computing;  IaaS;  PaaS;  SaaS;  Scrum},
keywords={Cloud computing;  Software design, Agile Methodologies;  IaaS;  PaaS;  SaaS;  Scrum, Iterative methods},
}

@CONFERENCE{Llamosa-Villalba2014119,
author={Llamosa-Villalba, R. and Delgado, D.J. and Camacho, H.P. and Paéz, A.M. and Valdivieso, R.F.},
title={Organizational leadership process for university education},
journal={11th International Conference on Cognition and Exploratory Learning in Digital Age, CELDA 2014},
year={2014},
pages={119-126},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925068561&partnerID=40&md5=da8c29fd95f749f140d4b17bdbc12f1b},
abstract={This paper relates the "Agile School", an emerging archetype of the enterprise architecture: "Processes of Organizational Leadership" for leading and managing strategies, tactics and operations of forming in Higher Education Institutions. Agile School is a system for innovation and deep transformation of University Institutions in which it starts with the identity and it ends at the self-governance and social responsibility, around satisfaction and transcendence by the outcomes at environment, resources and people. Our work research is based on the "Executables Enterprise Architectures" using "Lean and Agile methodologies through of Serious Play paradigm" for linking the senses with emotional and cognitive areas as a means to accelerate identification, analysis and problem solving, enhance decision-making and develop commitment actions by all stakeholders. With Agile School, it is possible acknowledge and reach consensus to propose architectural solutions supported in the holistic views of individuals and collectives, using simulation scenarios of past and future, to build concrete and clear architectures that enable innovation and iterative improvement using information and communication technologies through of real and virtual environments. With this perspective it could ensure efficient and effective quality of design and development according of required products and services. Particularly, Agile School is based in the "Educational Process Maturity Model - EPMM/PE" with five high performance levels, in which products or services are on a continuous improvement due to innovation, competitiveness, flexibility and productivity. © 2014 IADIS.},
author_keywords={Agile methods;  Enterprise architecture;  Maturity models;  Quality assurance;  Simulation},
keywords={Behavioral research;  Decision making;  E-learning;  Economic and social effects;  Iterative methods;  Product design;  Quality assurance;  Social aspects;  Virtual reality, Agile methods;  Architectural solutions;  Continuous improvements;  Enterprise Architecture;  Higher education institutions;  Information and Communication Technologies;  Maturity model;  Simulation, Problem solving},
}

@CONFERENCE{Ramos2014376,
author={Ramos, H. and Vasconcelos, A.},
title={Extreme enterprise architecture planning (XEAP): Extrapolating agile characteristics to the development of enterprise architectures},
journal={ICEIS 2014 - Proceedings of the 16th International Conference on Enterprise Information Systems},
year={2014},
volume={3},
pages={376-383},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902342317&partnerID=40&md5=e6578c9da9e25775748369b51da51113},
abstract={When developing enterprise architectures, in the same way as software products, companies have to deal a constant growth on the clients demand for faster results, while facing, at the same time, a big uncertainty on the requirements surrounding the project. This paper tries to investigate the similarities between the difficulties faced in both industries of enterprise architecture (EA) and software development, and propose an extension to an existent EA development methodology, in order to address those difficulties using particular agile software development methodologies characteristics. This new extension tries to introduce agile characteristics such as several iterations, solution partitioning and constant client feedback in order to deliver faster results and have a bigger capacity of response to the change of requirements, when compared with the standard methodologies. To do so, the first iteration is based on a reference model and the next ones follow the Enterprise Architecture Planning (EAP) methodology steps and are adaptable to the business itself. After presenting our proposal we make the demonstration of the methodology developed, applying it to a real-world problem of local organization called Cascais Ambiente, responsible for the maintenance of the environmental health in Cascais city.},
author_keywords={Agile;  Business Model;  Cycles;  Enterprise Architecture;  Enterprise Architecture Planning;  Extreme Programming;  Iterations;  Macro-Processes;  Methodology;  Partitioning;  Processes;  Reference Model;  Scrum;  Software Development;  Sub-Processes;  TOGAF ADM},
keywords={Industry;  Information systems;  Models;  Processing;  Software design;  Software engineering, Agile;  Business modeling;  Cycles;  Enterprise Architecture;  Enterprise architecture planning;  EXtreme Programming;  Iterations;  Macro-Processes;  Methodology;  Partitioning;  Reference modeling;  Scrum;  Sub-Processes, Iterative methods},
}

@CONFERENCE{Asta201435,
author={Asta, S. and Özcan, E. and Siebers, P.-O.},
title={An investigation on test driven discrete event simulation},
journal={2014 Operational Research Society Simulation Workshop, SW 2014},
year={2014},
pages={35-45},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982318603&partnerID=40&md5=9d94f901b179f135a0c9f7ea42e5ecb0},
abstract={This paper deals with the application of modern software development tools on simulation development. Recently, Agile Software Development (ASD) methods enjoy an increasing popularity. eXtreme Programming (XP) techniques, one of the techniques which belong to the ASD group of methods is a software development method which improves software quality and responsiveness of software projects through introducing short development cycles and a Test Driven Development (TDD) philosophy throughout the development. In this paper, we particularly pay attention to the application of the TDD by approaching simulation development from a test-first perspective. This study consists of a feasibility study of applying the TDD technique in simulation development in its various levels, say, acceptance and unit testing. Moreover, a simulation case study of a surgical ward has been considered, designed and implemented using the AnyLogic simulation toolkit. Our study differs from the mainstream in many ways. It addresses the feasibility of Test-Driven Simulation Development in Visual Interactive Modelling and Simulation (VIMS) environments as well as providing an insight into how the test-first concept can further help with the choice of components and acceptance testing.},
author_keywords={Discrete Event Simulation;  Extreme Programming;  Modelling;  Test-Driven Development},
keywords={Application programs;  Computer programming;  Computer software;  Computer software selection and evaluation;  Discrete event simulation;  Models;  Software design;  Software engineering;  Software testing, Agile software development;  EXtreme Programming;  Modelling and simulations;  Simulation development;  Simulation toolkits;  Software development methods;  Software development tools;  Test driven development, Acceptance tests},
}

@CONFERENCE{Bansal2014767,
author={Bansal, S.K. and Jolly, A.},
title={An encyclopedic approach for realization of security activities with agile methodologies},
journal={Proceedings of the 5th International Conference on Confluence 2014: The Next Generation Information Technology Summit},
year={2014},
pages={767-772},
doi={10.1109/CONFLUENCE.2014.6949242},
art_number={6949242},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84914128854&doi=10.1109%2fCONFLUENCE.2014.6949242&partnerID=40&md5=152c922f8a4e6629ff116796e4e83b42},
abstract={Agility among the software is searching concern during the development phase, as it boost adaptive planning, incremental and evolutionary development with many other features that are lightweight in nature. Security is one of the considerable concern in today's highly agile software development industry. More assertion is on to produce a protected software, so as to lessen the amount of risk and damage caused by the software. Evolving protected software with high agile characteristics is always a tough task to do because of heavy weight quality of security activities. This paper submit a innovative approach by which security activities can be combined with agile activities by calculating the mean agility value of both activities i.e. agile likewise security keeping in mind the aspects such as cost, time, recurrence, benefits affecting the agility of the activity. By accepting fuzzy value compatibility table (FVCT), rapport of embodiment of both the activities is done with fuzzy values. © 2014 IEEE.},
author_keywords={Agility Degree;  Fuzzy Logics;  Security Activities},
}

@CONFERENCE{Weitzel201453,
author={Weitzel, B. and Rost, D. and Scheffe, M.},
title={Sustaining agility through architecture: Experiences from a joint research and development laboratory},
journal={Proceedings - Working IEEE/IFIP Conference on Software Architecture 2014, WICSA 2014},
year={2014},
pages={53-56},
doi={10.1109/WICSA.2014.38},
art_number={6827100},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903727159&doi=10.1109%2fWICSA.2014.38&partnerID=40&md5=539f665d386cbecb810f097173c77f36},
abstract={This paper is an experience report of a long running Scrum project, conducted in a collaboration between industry and research, in a so called 'Joint Research and Development Laboratory'. Over time in the collaboration, we experienced a constant decrease in the pace of our development progress. Planning forward only within the limits of single sprints was the main reason for this. It resulted in a degenerating design and therefore a lack of flexibility that affected the agility of our project. Therefore, we introduced the concept of 'epic-architectures', an architecture design for a coherent group of user stories. Shifting the planning horizon further, across single sprints, helped us to create more stable and reusable concepts and to construct simpler, more elegant, and more maintainable solutions. We were able to significantly reduce the refactoring effort and increase the development speed, without significant overhead. With reporting on our experiences we hope to provide practically applicable guidance on how to integrate lightweight architecting in agile development processes, to sustain agility while creating high quality products. © 2014 IEEE.},
author_keywords={agile;  agility;  Architecture;  development;  experience report;  industry;  Scrum;  sustainable},
keywords={Industry;  Research;  Software architecture, agile;  agility;  development;  Experience report;  Scrum;  sustainable, Architecture},
}

@ARTICLE{Venkatesan20142020,
author={Venkatesan, V. and Sankar, A.},
title={Investigation of student's personality on pair programming to enhance the learning activity in the academia},
journal={Journal of Computer Science},
year={2014},
volume={10},
number={10},
pages={2020-2028},
doi={10.3844/jcssp.2014.2020.2028},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905233937&doi=10.3844%2fjcssp.2014.2020.2028&partnerID=40&md5=6a12a9bccdf1883b3be827a797546786},
abstract={Agile Software development is now a global phenomenon and is rapidly becoming organizations' most preferred IT process. Extreme Programming (XP) is one of the Agile Methods and Collaborative Pair Programming (CPP) is one of the very important practices of eXtreme Programming. Agile focuses team work which is very important in the field of software development. The software industry has practiced CPP, where two programmers working side by side on one computer on the same problem with great success. Similar experiments have been conducted in academia and pair programming has been shown to be beneficial for both students and teaching staffin university courses. In this study, we conducted some set of experiments about the "human" aspect of the CPP; in particular the effects that personality attributes may have on pair programmer's effectiveness as a pedagogical tool. A formal experiment has been conducted during 2012-13 odd semester at the PSG College of Technology, India to investigate the influence of personality differences among paired students using the five-factor model as a personality measurement framework. The aim of this research is to improve the implementation of CPP as a pedagogical tool to the academic setup through understanding the impact of the variation in the personality profile of paired students towards their academic performance. © 2014 Science Publications.},
author_keywords={Extreme programming five factor model;  Pair programming},
}

@CONFERENCE{Rahim201460,
author={Rahim, W.A. and Isa, W.M. and Lokman, A.M. and Taharim, N.F. and Wahid, N.D.},
title={Engineering m-learning using agile user-centered design},
journal={Proceedings - 2014 8th International Conference on Next Generation Mobile Applications, Services and Technologies, NGMAST 2014},
year={2014},
pages={60-65},
doi={10.1109/NGMAST.2014.46},
art_number={6982892},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921051984&doi=10.1109%2fNGMAST.2014.46&partnerID=40&md5=5150968f86c762f7b8543e71d07207d1},
abstract={There are pedagogical shifts in learning where self-educated are being encouraged to be active in their own learning. Educational research increasingly recognizes the fact that a significant amount of learning is happening in the informal settings. Furthermore, due to the proliferation of varieties of products, consumers need to be educated with relevant information of the products in the informal settings. Cultural background, health reasons and religious inclinations are considered influencing factors to the decision on whether to consume or not. As such, relevant information such as ingredients of the food products may provide strong inclination on the decision to purchase. Thus, consumers may benefit from mobile learning in informal setting (e.g., scanning codes to obtain further information of the ingredient of the product). Thus, the main objective of this study is to design Halal-Checker Mobile Application by using agile user centered design. Agile user centered design is the integration of User-Centered Design and agile methods. The Human Computer Interaction (HCI) technique and agile approach adapted are Contextual Design Model, User Personas and extreme programming. The results shown in this study are, (i) contextual design model and user personas and (ii) development of Halal-checker mobile application prototype using extreme programming. Future work may involve including more HCI techniques and agile approaches together in the agile user centered design methodology to improve the quality of the digital mobile artifacts. © 2014 IEEE.},
author_keywords={Agile User Centered Design;  Contextual Design Model;  Human Computer Interaction;  Mobile Learning (M-Learning);  Persona},
keywords={Computer programming;  Design;  E-learning;  Food products;  Human computer interaction;  Mobile computing;  Mobile telecommunication systems;  Model checking;  Software prototyping, Contextual design;  Cultural backgrounds;  Educational research;  EXtreme Programming;  Human computer interaction (HCI);  M-Learning;  Mobile applications;  Persona, User centered design},
}

@CONFERENCE{Grzegrzólka2014,
author={Grzegrzólka, P.},
title={Configuration management in agile software development},
journal={BIR 2009 - 8th International Conference on Perspectives in Business Informatics Research},
year={2014},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84918804841&partnerID=40&md5=5f0d43103e913139ae1b5ff3eb2b6d62},
abstract={Today's software projects become more and more complex in size and degree of sophistication. All around the world, software professionals keep developing multipart software systems which consist of numerous components, each evolving in accordance with the system for which it was developed and maintained. In order to help software development teams to avoid chaos and confusion in the process of creation of a top-quality software, a software project managing system (the so-called Software Configuration Management-SCM) should be implemented. If correct control mechanisms and procedures are not implemented, software development can easily get out of control, which may lead to the failure of a project. SCM ensures that the development and evolution of different components of a given system are well controlled and work efficiently, so that individual elements fit together to create a coherent whole. On the other hand, Software Configuration Management is often considered to be a bureaucratic method, an approach that causes additional work and proliferates documentation. Sometimes, configuration management tasks have to be done manually, hence configuration management can become a difficult, monotonous and time-consuming activity. However, those disadvantages are too much extent outweighed by the benefits of having an SCM system. The most noticeable change in the approach to software process in the last few years was the introduction of the word 'agile'. Agile project management methodologies emphasize individuals, interactions, working software, customer collaboration, and responding to change, rather than focus solely on processes, documentation, tools, plans and contracts. This approach assumes that software development becomes incremental, simple, cooperative and adaptive, as agile methodologies. The main aim of this research is to present a specific aspect of agile development-the concept of Agile Software Configuration Management (Agile SCM)-a well-designed, light form of SCM that can be used in software development projects involving agile development methods. Agile software methods are described; it is explained how to introduce agility into a team development, how to survive in the changing environment and how to transform this new concept into a well-established practice. In particular, the research concentrates on the ways in which Agile SCM can be efficiently implemented not only in individual projects, but also across projects in large enterprises, where specific operational and governance requirements have to be met. Mismatches between well-defined, documented Software Configuration Management concept and fast, adaptive agile methodologies are discussed together with imperfections of the SCM approaches to agile methods. Additionally, the work presents a systematic review of the existing literature on SCM techniques from an agile software development methodologies point of view. Software Configuration Management is often viewed as the least agile of all the software development disciplines. A decision to implement the agile philosophy to SCM results in the improvement of the efficiency of all team members. In order to work effectively, agile software development should be coordinated with an appropriate SCM system. The most crucial task of Agile Software Configuration Management is to keep the three fundamental watchwords-repeatability, reproducibility, traceability-active and observed during the whole project. Future work will present a model of a new SCM concept that aims at raising the quality of software application and additional business benefits. Future work will be focused on evaluation of the suggestions put forward in this paper. The intention is to run this study again to collect more empirical data, bringing more accuracy to the results. Also, future research will explore some alternatives and solutions related to the processes identified, considering different difficulties and critical success factors, like tools, communication, coordination and cooperation focused in the Agile SCM process. Another comparison may be done between the projects analyzed in order to understand the way each team worked considering the distribution level and the team's profile.},
keywords={Agile manufacturing systems;  Application programs;  Human resource management;  Management science;  Project management;  Research and development management, Agile development methods;  Agile project management;  Agile software development;  Configuration management;  Critical success factor;  Software configuration management;  Software development projects;  Software development teams, Software design},
}

@ARTICLE{Tarhan2014477,
author={Tarhan, A. and Yilmaz, S.G.},
title={Systematic analyses and comparison of development performance and product quality of Incremental Process and Agile Process},
journal={Information and Software Technology},
year={2014},
volume={56},
number={5},
pages={477-494},
doi={10.1016/j.infsof.2013.12.002},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84895919491&doi=10.1016%2fj.infsof.2013.12.002&partnerID=40&md5=b73cca27ccf795ef4ab80bc605bc85bf},
abstract={Context Although Agile software development models have been widely used as a base for the software project life-cycle since 1990s, the number of studies that follow a sound empirical method and quantitatively reveal the effect of using these models over Traditional models is scarce. Objective This article explains the empirical method of and the results from systematic analyses and comparison of development performance and product quality of Incremental Process and Agile Process adapted in two projects of a middle-size, telecommunication software development company. The Incremental Process is an adaption of the Waterfall Model whereas the newly introduced Agile Process is a combination of the Unified Software Development Process, Extreme Programming, and Scrum. Method The method followed to perform the analyses and comparison is benefited from the combined use of qualitative and quantitative methods. It utilizes; GQM Approach to set measurement objectives, CMMI as the reference model to map the activities of the software development processes, and a pre-defined assessment approach to verify consistency of process executions and evaluate measure characteristics prior to quantitative analysis. Results The results of the comparison showed that the Agile Process had performed better than the Incremental Process in terms of productivity (79%), defect density (57%), defect resolution effort ratio (26%), Test Execution V&V Effectiveness (21%), and effort prediction capability (4%). These results indicate that development performance and product quality achieved by following the Agile Process was superior to those achieved by following the Incremental Process in the projects compared. Conclusion The acts of measurement, analysis, and comparison enabled comprehensive review of the two development processes, and resulted in understanding their strengths and weaknesses. The comparison results constituted objective evidence for organization-wide deployment of the Agile Process in the company. © 2014 Elsevier B.V. All rights reserved.},
author_keywords={Agile development;  Empirical method;  Process performance;  Qualitative analysis;  Quantitative analysis;  Software measurement},
keywords={Chemical analysis;  Software design, Agile development;  Empirical method;  Process performance;  Qualitative analysis;  Software Measurement, Quality control},
}

@ARTICLE{Sungkur2014394,
author={Sungkur, R.K. and Ramasawmy, M.},
title={Knowledge4Scrum, a novel knowledge management tool for agile distributed teams},
journal={VINE},
year={2014},
volume={44},
number={3},
pages={394-419},
doi={10.1108/VINE-12-2013-0068},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927524119&doi=10.1108%2fVINE-12-2013-0068&partnerID=40&md5=c9820d33e4cf8e986a1292632e681b95},
abstract={Purpose - The purpose of this paper is to propose Knowledge4Scrum, a novel knowledge management tool for agile distributed teams. Agile software development (ASD) refers to a group of software development methodologies based on iterative development, where requirements and solutions evolve through collaboration between self-organizing cross-functional teams. The two most widely used methodologies based on the agile philosophy are scrum and extreme programming. Whichever methodology is considered, agile teams usually consist of few members and are collocated under the same roof. However, nowadays, agile practices for distributed development are gaining much momentum. The main reasons behind such practice are cheaper skilled labour, minimizing production cost, reducing time to market and increasing the quality and performance of projects. Along with the benefits obtained through globally distributed development, there are, however, many difficulties faced by various organisations. These problems are caused mostly due to distance, time and cultural differences. To meet up with the level of complexity of projects, ASD also has to keep up with many challenges, especially in cases of distributed teams. Four major challenges have been identified. First, the introduction of global software development entails a number of difficulties, especially related to knowledge sharing. For instance, lack of transparency is frequently observed within such teams, whereby a team member is totally unaware of the activities of his/her colleagues. Second, the unavailability of team members due to time zone differences adds up to the list of problems confronted by distributed teams. Third, there can be misunderstanding amongst the team member due to communication problems, especially in cases where the mother language of the team members is different. Fourth, a common issue faced by distributed teams is the loss of knowledge when an employee resigns from his/her post. Design/methodology/approach - Based on the main problems outlined above, what has been proposed is Knowledge4Scrum, a novel knowledge management tool for agile distributed teams. Knowledge4Scrum will act as a global repository for knowledge sharing in Scrum distributed teams with the possibility of creating new knowledge through data mining techniques. Valid past projects data have been collected to train and test the data mining models. The research also investigates the suitability of knowledge management in Scrum distributed teams to address the various challenges addressed above. Findings - Knowledge4Scrum supports the four knowledge management processes, namely, knowledge creation/acquisition, knowledge storage, knowledge dissemination and knowledge application. It has been found that the aforementioned tool satisfactorily addressed issues of distance, time and cultural differences that crop-up in distributed development teams. Data mining has been the main aspect for the knowledge creation and application processes, whereby new knowledge has been determined by examining and extracting patterns from existing data found in the repository. Originality/value - A major feature of the Knowledge4Scrum tool lies in the knowledge creation and application section, where a number of data mining techniques have been utilised to identify trends and patterns in past data collected. When compared to the COnstructive COst MOdel to estimate project duration, Knowledge4Scrum gives more than satisfactory results. Such functionalities will actually help managers for future project planning and in decision-making. © 2014, Emerald Group Publishing Limited.},
author_keywords={Agile software development;  Classification tree;  Clustering;  Data mining;  Knowledge management;  Knowledge management tools;  Mean absolute error;  Project duration;  Scrum;  Task complexity},
keywords={Decision making;  Digital storage;  Human resource management;  Information management;  Iterative methods;  Knowledge management;  Software design;  Software engineering;  Trees (mathematics), Agile software development;  Classification trees;  Clustering;  Knowledge management tool;  Mean absolute error;  Project duration;  Scrum;  Task complexity, Data mining},
}

@ARTICLE{Kim2014617,
author={Kim, D. and In, H.P.},
title={GRAS: Non-programming approach to generate an adaptation strategy in runtime},
journal={Contemporary Engineering Sciences},
year={2014},
volume={7},
number={13-16},
pages={617-628},
doi={10.12988/ces.2014.4668},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906259243&doi=10.12988%2fces.2014.4668&partnerID=40&md5=8a768dff26466f0bff36cd167ad938ac},
abstract={Increasingly complex and rapidly changing software requirements have advanced the principles of adaptive software development. However, defining every potential problem scenario during the design phase that will require the system to adapt is difficult and time consuming. According to current research, defining new adaptation strategies for problems undefined during the design phase frequently requires engineers to modify the system's programs, and occasionally to modify programs in the target system. This can include scenarios when the problem is not especially critical to the system. To avoid this situation in the future, we suggest a novel approach that enables Human Actors to create an adaptation strategy through our framework, GRAS (Generator for Runtime Adaptation Strategy). GRAS, which does not require programming, provides an interface and knowledge base enabling Human Actors to participate in the adaptation process and define new strategies. Each problem scenario the system encounters is defined as a Situation to resolve ambiguity, and managed by the applicable Situation Handler, which can be created in runtime with the aid of a Human Actor. With GRAS, a Human Actor with the proper domain knowledge for a system can define additional adaptation strategies, and is not required to be askilled programmer. © 2014 Donghyeon Kim and Hoh Peter In.},
author_keywords={Adaptive system;  Human interface;  Situation-based;  Software engineering},
}

@CONFERENCE{Takahira20142664,
author={Takahira, R.Y. and Laraia, L.R. and Dias, F.A. and Yu, A.S. and Nascimento, P.T.S. and Camargo, A.S., Jr.},
title={Scrum and Embedded Software development for the automotive industry},
journal={PICMET 2014 - Portland International Center for Management of Engineering and Technology, Proceedings: Infrastructure and Service Integration},
year={2014},
pages={2664-2672},
art_number={6921029},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910139088&partnerID=40&md5=70ed69997218e5c94e40a44f72f1795e},
abstract={Embedded Software is becoming a key buying criterion for new vehicle customers. Workshops, Conferences and Presentations worldwide are showing that SCRUM methodology is increasing software development speed. So far SCRUM has seen little application in automotive industry where V-model, a more rigid methodology, is dominant. Scientific journals have not been sensitive to the opportunity of speeding up the Embedded Software development by applying SCRUM methodology. The purpose of this study is to provide a firsthand investigation about the factors that may speed up the development and integrate SCRUM with the regular methodology in automotive industry. The challenge is to find the best framework to combine SCRUM and the V-model for Systems Engineering Process. Both should be together applied, as a hybrid methodology, to keep the accepted levels of quality and safety powertrain requirements. © 2014 PICMET.},
keywords={Automotive industry;  Embedded software, Hybrid methodologies;  Quality and safeties;  Scientific journals;  Scrum methodologies;  Speed up;  Systems engineering process;  V-model, Software design},
}

@ARTICLE{Maciaszek2014159,
author={Maciaszek, L.A. and Sienkiewicz, L.D.},
title={Complexity-aware software process management: A case of scrum in network organization},
journal={Lecture Notes in Business Information Processing},
year={2014},
volume={176 LNBIP},
pages={159-171},
doi={10.1007/978-3-319-06695-0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904578570&doi=10.1007%2f978-3-319-06695-0&partnerID=40&md5=6e022d0782bf1c921eef21010b8a8a89},
abstract={Software quality models and standards distinguish between product and process quality. Clearly, process quality determines product quality, yet surprisingly little research has been done on complexity-aware software process management. In this paper, we consider a software process as a system that (like a product) must minimize dependencies between system elements, and therefore minimize its complexity. We do so by applying holonic thinking to software process management and by adjusting traditional Scrum method for managing work in network organizations (where third party service providers may act outside of the Scrum process). © Springer International Publishing Switzerland 2014.},
author_keywords={Complexity;  Network organization;  Process management;  Scrum},
keywords={Computer software selection and evaluation;  Information systems, Complexity;  Network organization;  Process management;  Scrum, Complex networks},
}

@CONFERENCE{Antinyan2014154,
author={Antinyan, V. and Staron, M. and Meding, W. and Österström, P. and Wikström, E. and Wranker, J. and Henriksson, A. and Hansson, J.},
title={Identifying risky areas of software code in Agile/Lean software development: An industrial experience report},
journal={2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings},
year={2014},
pages={154-163},
doi={10.1109/CSMR-WCRE.2014.6747165},
art_number={6747165},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898413196&doi=10.1109%2fCSMR-WCRE.2014.6747165&partnerID=40&md5=ce93fe5adfb24ce1c152321ca7731f86},
abstract={Modern software development relies on incremental delivery to facilitate quick response to customers' requests. In this dynamic environment the continuous modifications of software code can cause risks for software developers; when developing a new feature increment, the added or modified code may contain fault-prone or difficult-to-maintain elements. The outcome of these risks can be defective software or decreased development velocity. This study presents a method to identify the risky areas and assess the risk when developing software code in Lean/Agile environment. We have conducted an action research project in two large companies, Ericsson AB and Volvo Group Truck Technology. During the study we have measured a set of code properties and investigated their influence on risk. The results show that the superposition of two metrics, complexity and revisions of a source code file, can effectively enable identification and assessment of the risk. We also illustrate how this kind of assessment can be successfully used by software developers to manage risks on a weekly basis as well as release-wise. A measurement system for systematic risk assessment has been introduced to two companies. © 2014 IEEE.},
author_keywords={agile;  correlation;  metric risk;  software},
keywords={Computer software;  Computer software maintenance;  Correlation methods;  Industry;  Reengineering;  Reverse engineering;  Software design, agile;  Continuous modification;  Dynamic environments;  Incremental delivery;  Industrial experience;  Large companies;  Measurement system;  Software developer, Risk assessment},
}

@CONFERENCE{Malgonde2014,
author={Malgonde, O. and Chari, K.},
title={A probabilistic model for predicting agile software development effort research-in-progress},
journal={24th Workshop on Information Technology and Systems},
year={2014},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924690220&partnerID=40&md5=c510a3adce368c51493cfde914f5fff4},
abstract={In this paper, we present a simple, and yet effective model for effort prediction in agile software development using Scrum methodology. Our research problem is motivated by the need to develop tools that software project managers could use to plan software projects. We develop a Bayesian model for effort prediction and compare it to a linear regression model. Our results indicate that Bayesian model outperforms the linear regression model in predicting effort.},
keywords={Bayesian networks;  Forecasting;  Linear regression;  Regression analysis;  Software design, Agile software development;  Bayesian model;  Effort prediction;  Linear regression models;  Probabilistic modeling;  Research problems;  Scrum methodologies;  Software project, Software engineering},
}

@ARTICLE{Al-Baik20142019,
author={Al-Baik, O. and Miller, J.},
title={Waste identification and elimination in information technology organizations},
journal={Empirical Software Engineering},
year={2014},
volume={19},
number={6},
pages={2019-2061},
doi={10.1007/s10664-014-9302-3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910012247&doi=10.1007%2fs10664-014-9302-3&partnerID=40&md5=59e8b9e414f3037edbfe0e9014fdecb5},
abstract={In this paper, we propose a new model to classify wastes in IT organizations. In the beginning, we discuss the potential reasons behind the relatively low success rate of lean initiatives in knowledge-based industries in general and in IT organizations in particular. The virtual nature of business processes in IT organizations calls into question the applicability of Toyota’s categorization of physical wastes in IT settings. Then, through a real-life project, we develop a new model of waste categorization for the operation of a “medium-sized” IT department. In addition to the new classifications specific to IT, we discuss suitable elimination strategies and how they have improved the daily operations of the organization by reducing the lead-time by 56–60 %, increasing customer satisfactions by 15.7 %, and saving hundreds of thousands of the operational cost. Finally, we emphasize the need to think lean when developing the waste elimination strategies by eliminating the root cause of the waste and not the subsequent wastes. © 2014, Springer Science+Business Media New York.},
author_keywords={Agile;  Lean production;  Lean software development;  Lean thinking;  Software process improvement;  Waste in IT},
keywords={Agile;  Lean production;  Lean software development;  Lean thinking;  Software Process Improvement},
}

@ARTICLE{Štrba2014408,
author={Štrba, R. and Štolfa, J. and Štolfa, S. and Košinár, M.},
title={Intelligent software support of the SCRUM process},
journal={Frontiers in Artificial Intelligence and Applications},
year={2014},
volume={272},
pages={408-416},
doi={10.3233/978-1-61499-472-5-408},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922509046&doi=10.3233%2f978-1-61499-472-5-408&partnerID=40&md5=5844dcb29f8c9e5481b7cdb667695d9f},
abstract={Company success in a highly competitive agile environment depends on the speed of right decisions making process. The quality of those decisions depends on availability of statistical reports, results of simulation and other information gathered from various supporting software systems. This calls for establishment method that allows combining developed intelligent software tools. This paper presents a method for support of the SCRUM software process. We proposed the method for modeling and simulating of the software process model, with the aid of a neural network. In particular, we aim at improving software process development using results of the simulation and effort estimation. © 2014 The authors and IOS Press. All rights reserved.},
author_keywords={Agile Methods;  Effort Estimation;  Neural Networks;  SCRUM;  Software Process},
keywords={Information theory;  Neural networks;  Software design;  Software engineering, Agile methods;  Effort Estimation;  Intelligent software;  Intelligent software tools;  Modeling and simulating;  SCRUM;  Software process;  Software process modeling, Computer software},
}

@CONFERENCE{Mokhtar2014102,
author={Mokhtar, R. and Jaafar, N.H. and Tahar, N.F. and Sukiman, S.A. and Aris, A. and Abu Bakar, N.F.},
title={An integrated document management system for managing self programme accreditation using scrum approach},
journal={ISTMET 2014 - 1st International Symposium on Technology Management and Emerging Technologies, Proceedings},
year={2014},
pages={102-106},
doi={10.1109/ISTMET.2014.6936487},
art_number={6936487},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912115146&doi=10.1109%2fISTMET.2014.6936487&partnerID=40&md5=4529d34209cf90b3a4fcaa611b9de99c},
abstract={Handling documents using information technology have been applied in more than decades. It can save paper, speed up communications, save time and increase productivity of work. It is important because there is much valuable information in the form of documents such as books, letters, minutes of meeting, rules and regulations memo that support the programme accreditation process. However, the current practice is still using the traditional file system. This is very challenging for document search process, particularly during the audit process. The major purpose of this paper is to indicate that electronic document management technology can truly support in managing document evidences. This scenario leads towards the development of an integrated document management for academic quality assurance system (iDMQA). iDMQA is certainly useful in reducing the duplication of document evidences that occurs with the current system. Still, this system can be enhanced, especially in terms of tracking the history of document uploads. © 2014 IEEE.},
author_keywords={agile development;  Electronic document management;  programme accreditation;  quality assurance},
keywords={Accreditation;  Quality assurance, Accreditation process;  Agile development;  Current practices;  Document management;  Document management systems;  Electronic document management;  Quality assurance systems;  Rules and regulations, Information services},
}

@ARTICLE{Heeager201462,
author={Heeager, L.T.},
title={How can agile and documentation-driven methods be meshed in practice?},
journal={Lecture Notes in Business Information Processing},
year={2014},
volume={179 LNBIP},
pages={62-77},
doi={10.1007/978-3-319-06862-6},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904542337&doi=10.1007%2f978-3-319-06862-6&partnerID=40&md5=4a3fc2035e35b10d5140f0999e248e44},
abstract={Agile methods are becoming increasingly popular in software development; even by organizations complying with quality standards. The literature reports on scattered examples of organizations that have succeeded in meshing agile and documentation-driven methods. However, due to a lack of empirical research, it is not well understood how to implement a meshed software development practice. To increase the understanding of how to do this, this paper presents two case studies of the development of safety-critical software. The first case study presents challenges of adopting quality assurance in an agile software practice. The second case study shows how agile practices are adopted in a documentation-driven practice compliant with the US Food and Drug Administration standard. Based on a framework that identifies nine practice areas in which the methods differ, the challenges of and possibilities in implementing a meshed software development practice is presented. © Springer International Publishing Switzerland 2014.},
author_keywords={Agile Software Development;  Documentation-Driven Software Development;  FDA;  Safety-Critical Software Development;  Scrum},
keywords={Quality assurance;  Research;  Safety engineering, Agile software development;  Empirical research;  FDA;  Quality standard;  Safety critical software;  Scrum;  Software development practices;  US Food and Drug Administration, Software design},
}

@ARTICLE{Jahr201435,
author={Jahr, M.},
title={A hybrid approach to quantitative software project scheduling within agile frameworks},
journal={Project Management Journal},
year={2014},
volume={45},
number={3},
pages={35-45},
doi={10.1002/pmj.21411},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901820618&doi=10.1002%2fpmj.21411&partnerID=40&md5=0b788d36cf822deaac0f69e8b6f77396},
abstract={In this article we focus on the quantitative project scheduling problem in IT companies that apply the agile management philosophy and Scrum, in particular. We combine mathematical programming with an agile project flow using a modified multi-mode resource constrained project scheduling model for software projects (MRCPSSP). The proposed approach can be used to generate schedules as benchmarks for agile development iterations. Computational experiments based on real project data indicate that this approach significantly reduces the project cycle time. The approach can be a useful addition to agile project management, especially for software projects with predefined deadlines and budgets. © 2014 by the Project Management Institute.},
author_keywords={agile software development;  quantitative project management;  Scrum;  software project scheduling},
}

@CONFERENCE{Usman2014,
author={Usman, M. and Azam, F. and Hashmi, N.},
title={Analysing and reducing risk factor in 3-C's model communication phase used in global software development},
journal={ICISA 2014 - 2014 5th International Conference on Information Science and Applications},
year={2014},
doi={10.1109/ICISA.2014.6847362},
art_number={6847362},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904480365&doi=10.1109%2fICISA.2014.6847362&partnerID=40&md5=0f061c34035d4427c92269560bf17a4a},
abstract={Global Software Development is becoming the cutting edge for researchers in the field of Software Engineering. Distribution of Software Engineers in GSD impose challenges in communication phase in 3-C's Collaboration Model. My Review, Analysis and Results indicates that about more than 70 percent of Software Engineers face the problem in communicating and developing the applications for off-shore clients. In this paper I presented a systematic way, how to deal or communicate and develop software applications for off-shore clients. The communication is based on Project Communication Management Techniques and development of software is based on Agile Scrum Terminology which can improve the communication and application development phase between Software Engineer and Client at its best level. © 2014 IEEE.},
author_keywords={Agile Development;  Global Software Development (GSD);  Project Management;  Scrum Model},
keywords={C (programming language);  Communication;  Engineers;  Information science;  Project management;  Software design, Agile development;  Application development;  Collaboration models;  Cutting edges;  Global software development;  Project communications;  Risk factors;  Software applications, Application programs},
}

@CONFERENCE{Sultana2014256,
author={Sultana, S. and Motla, Y.H. and Asghar, S. and Jamal, M. and Azad, R.},
title={A hybrid model by integrating agile practices for Pakistani software industry},
journal={CONIELECOMP 2014 - 24th International Conference on Electronics, Communications and Computers},
year={2014},
pages={256-262},
doi={10.1109/CONIELECOMP.2014.6808600},
art_number={6808600},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901255899&doi=10.1109%2fCONIELECOMP.2014.6808600&partnerID=40&md5=c1bfb85ba3b3af7f966d2fb1769c20e8},
abstract={CONTEXT -The software industry can be widely seen as a key driver for business improvement and is likely to provide an opportunity to the countries to make dramatic improvements in economic growth. Software industry of Pakistan can also play a major role in strengthening the sluggish economy. A well-organized suitable framework according to the industry needs helps to engineer quality products within budget and time. © 2014 IEEE.},
author_keywords={Agile;  DSDM;  Scrum;  XP},
keywords={Budget control;  Economics, Agile;  Agile practices;  Business improvements;  DSDM;  Economic growths;  Scrum;  Software industry;  XP, Software engineering},
}

@ARTICLE{Bider2014143,
author={Bider, I.},
title={Analysis of agile software development from the knowledge transformation perspective},
journal={Lecture Notes in Business Information Processing},
year={2014},
volume={194},
pages={143-157},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919627082&partnerID=40&md5=cb4bef74c3387a4449c6a08c4b47f1e1},
abstract={While the Agile Software Development (ASD) has been successfully promoted in the last 15 years, there is no agreement on how to determine whether a particular project is agile or not. Some practitioners consider agility as strict usage of a specific methodology, e.g. SCRUM, others consider agility as adhering to Agile Manifesto. The lack of common view on ASD prevents creating common guidelines on when the usage of ASD is appropriate. This paper presents a model of ASD that helps to differentiate it from the traditional, phase-based development, and more strictly defines the area of its applicability. The model has been built based on the knowledge transformation perspective, as the author considers it to be the most differentiating perspective when comparing ASD to traditional software development. For building the model, the ideas from SECI model of Nonaka have been exploited. The results, in the form of requirements to be fulfilled for successful employment of ASD, are demonstrated through analysis of completed ASD projects. © Springer International Publishing Switzerland 2014.},
author_keywords={Agile;  Knowledge transformation;  SECI model;  Software Engineering;  Software project;  System},
keywords={Information science;  Software engineering, Agile;  Knowledge transformation;  SECI model;  Software project;  System, Software design},
}

@CONFERENCE{Larusdottir2014817,
author={Larusdottir, M. and Cajander, Å. and Gulliksen, J. and Cockton, G. and Gregory, P. and Salah, D.},
title={On the integration of user centred design in agile development},
journal={Proceedings of the NordiCHI 2014: The 8th Nordic Conference on Human-Computer Interaction: Fun, Fast, Foundational},
year={2014},
pages={817-820},
doi={10.1145/2639189.2654836},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911425866&doi=10.1145%2f2639189.2654836&partnerID=40&md5=be02d58611358c474361d37f4557bb6a},
abstract={The integration of the User Centred Design (UCD) in gile systems development processes (Agile) is not without problems. The context of Agile strongly affects the possibilities of IT professionals to conduct user centred activities in their work. In this workshop we will address challenges and success stories and best practices from integrating UCD into Agile in practice, values and perspectives underpinning UCD and Agile in theory, theories and methods relevant for doing research on Agile and UCD as well as the future of research trends on the integration of UCD in Agile. The overall objective of this workshop is to provide a venue for researchers and practitioners, from within and outside of HCI, to begin the process of shaping the future of Agile and UCD research. The workshop has two goals: (1) Identifying future trends for research on Agile and UCD (2) Identify challenges and success stories when working with UCD and Agile. Copyright is held by the owner/author(s).},
author_keywords={Agile Software Development;  Scrum;  Usability;  User Centred Design;  User Experience},
keywords={Design;  Human computer interaction;  Integration;  Software design, Agile software development;  Scrum;  Usability;  User centred design;  User experience, Software engineering},
}

@CONFERENCE{Matuck2014115,
author={Matuck, G.R. and De Oliveira, R.L. and Pivetta, T.A. and Dias, L.A.V. and Da Cunha, A.M.},
title={Applying agile method on academic access and fraud control system},
journal={ITNG 2014 - Proceedings of the 11th International Conference on Information Technology: New Generations},
year={2014},
pages={115-120},
doi={10.1109/ITNG.2014.25},
art_number={6822185},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903448635&doi=10.1109%2fITNG.2014.25&partnerID=40&md5=5cee4b97a0d73f2c106ad3c7e6a12afd},
abstract={This paper presents an application of agile method on academic access and fraud control system. It describes the conceptualization, development, and testing process of a case study, using Problem Based Learning (PBL) and some collaborative tools. It was developed, on the 1st semester of 2012, at the Brazilian Aeronautics Institute of Technology (Instituto Tecnologico de Aeronautica - ITA) by graduate students during three different multidisciplinary courses involving geographically distributed teams. Its main results are presented, discussed, and analyzed, providing an overview of a successful new academic application development. © 2014 IEEE.},
author_keywords={Banking fraud transactions;  Collaborative tools;  Interdisciplinary teams;  Model-based software development;  Problem-based learning - PBL;  Scrum agile development},
keywords={Control systems;  Crime;  Distributed computer systems;  Information technology;  Students, Agile development;  Banking fraud transactions;  Collaborative tools;  Interdisciplinary teams;  Problem based learning, Software engineering},
}

@CONFERENCE{Janakova201461,
author={Janakova, M.},
title={Errors in E-learning: The key is global approach for optimal education},
journal={2014 International Conference on Education Technologies and Computers, ICETC 2014},
year={2014},
pages={61-66},
doi={10.1109/ICETC.2014.6998903},
art_number={6998903},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942880745&doi=10.1109%2fICETC.2014.6998903&partnerID=40&md5=da861f9964c2b15908a4e099d105e202},
abstract={This paper is focused on error elimination in education for better IT knowledge and skills according to societal preferences. Education is a continuous process not restricted to age, area, discipline, and interest. The aim is to support creative activities via tested methods and good cases from practice. Information technology and education have many common features from areas of development, implementation, or work with users (students). Unfortunately, there are also errors. In this paper, the method design is described using a combination of a project education method and SCRUM agile method for IT implementation. The benefit is close cooperation within a team (students, teachers), transparent work procedures, and support the invention of better solutions to defined tasks. © 2014 IEEE.},
author_keywords={E-learning;  Education quality;  Errors;  Links to practice;  Teacher roles},
keywords={E-learning;  Education;  Errors;  Students;  Teaching, Continuous process;  Education quality;  Error elimination;  Global approaches;  Links to practice;  Societal preferences;  Teacher role;  Technology and educations, Engineering education},
}

@BOOK{Yeo2014,
author={Yeo, Y.N. and Hahn, J.},
title={The role of project modularity in information systems development},
journal={35th International Conference on Information Systems "Building a Better World Through Information Systems", ICIS 2014},
year={2014},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923434435&partnerID=40&md5=c6186b52ac46bb6446ee113fb4322008},
abstract={Recent surveys have shown that ISD project success rates are particularly low. Organizations are applying a wide array of information systems development methodologies (ISDMs)-both plan-based and agile, such as waterfall, scrum and XP-to improve information systems development (ISD) performance. However, as ISD projects often have different characteristics such as size, scope and complexity, prior studies have been focused on helping organizations better choose an ISDM for projects. Nevertheless, prior research has not taken into consideration the notion of problem modularity of ISD projects. In this study, we utilize the NK fitness landscapes model to computationally examine via computer simulations the effects of problem modularity alongside various project environmental factors, and aim to answer the question: under various environmental factors, which ISDM should an ISD team adopt under various degree of problem modularity?},
author_keywords={Agile development;  Computer simulation;  Information system development (ISD);  Information systems development methodologies (ISDM);  ISD project complexity;  Problem modularity;  Waterfall development},
keywords={Computer simulation;  Information systems;  Management information systems, Agile development;  Information system development;  Information systems development methodologies;  Problem modularity;  Project complexity;  Waterfall development, Agile manufacturing systems},
}

@ARTICLE{Paasivaara20141556,
author={Paasivaara, M. and Lassenius, C.},
title={Communities of practice in a large distributed agile software development organization - Case Ericsson},
journal={Information and Software Technology},
year={2014},
volume={56},
number={12},
pages={1556-1577},
doi={10.1016/j.infsof.2014.06.008},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906312680&doi=10.1016%2fj.infsof.2014.06.008&partnerID=40&md5=8871e976fe069485529a634f8dfa50c0},
abstract={Context Communities of practice - groups of experts who share a common interest or topic and collectively want to deepen their knowledge - can be an important part of a successful lean and agile adoption in particular in large organizations. Objective In this paper, we present a study on how a large organization within Ericsson with 400 persons in 40 Scrum teams at three sites adopted the use of Communities of Practice (CoP) as part of their transformation from a traditional plan-driven organization to lean and agile. Methods We collected data by 52 semi-structured interviews on two sites, and longitudinal non-participant observation of the transformation during over 20 site visits over a period of two years. Results The organization had over 20 CoPs, gathering weekly, bi-weekly or on a need basis. CoPs had several purposes including knowledge sharing and learning, coordination, technical work, and organizational development. Examples of CoPs include Feature Coordination CoPs to coordinate between teams working on the same feature, a Coaching CoP to discuss agile implementation challenges and successes and to help lead the organizational continuous improvement, an end-to-end CoP to remove bottlenecks from the flow, and Developers CoPs to share good development practices. Success factors of well-functioning CoPs include having a good topic, passionate leader, proper agenda, decision making authority, open community, supporting tools, suitable rhythm, and cross-site participation when needed. Organizational support include creating a supportive atmosphere and providing a suitable infrastructure for CoPs. Conclusions In the case organization, CoPs were initially used to support the agile transformation, and as part of the distributed Scrum implementation. As the transformation progressed, the CoPs also took on the role of supporting continuous organizational improvements. CoPs became a central mechanism behind the success of the large-scale agile implementation in the case organization that helped mitigate some of the most pressing problems of the agile transformation. © 2014 The Authors. Published by Elsevier B.V.},
author_keywords={Communities of practice;  Large-scale agile software development;  Scaling agile},
keywords={Human resource management;  Knowledge acquisition;  Metadata;  Software design, Agile software development;  Communities of Practice;  Continuous improvements;  Organizational development;  Organizational improvement;  Organizational support;  Scaling agile;  Semi structured interviews, Knowledge management},
}

@CONFERENCE{Yothino2013751,
author={Yothino, M. and Rueangsirasak, W. and Chaisricharoen, R.},
title={Novel management model to increase visual effect productivity},
journal={13th International Symposium on Communications and Information Technologies: Communication and Information Technology for New Life Style Beyond the Cloud, ISCIT 2013},
year={2013},
pages={751-756},
doi={10.1109/ISCIT.2013.6645954},
art_number={6645954},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891074713&doi=10.1109%2fISCIT.2013.6645954&partnerID=40&md5=c8a1b6a2cf5f45aafea8e3bd3ab2e5eb},
abstract={A visual effect production in the film or the motion picture is produced various knowledge from the experts in production team such as anatomy, drawing, programming, etc. This production process has a complex procedure to maximize the overall effect. This is a cause of delay output about release date, when they lack good planning of production. In this paper, an adaptive scrum framework is proposed to plan visual effects production. The proposed framework was evaluated by the experts working in a different position of visual effects. The results are considered as a good score with more than 90% in the quality plan and scope management. Therefore, this proposed framework should be applied as a novel management model to increase visual effects production. © 2013 IEEE.},
author_keywords={Digital element;  Film production;  Scrum;  Team management;  Visual Effects},
keywords={Digital elements;  Film production;  Scrum;  Team management;  Visual effects, Communication;  Human resource management;  Management;  Motion pictures, Information technology},
}

@CONFERENCE{Mukhtar2013820,
author={Mukhtar, M. and Motla, Y.H. and Riaz, M. and Khan, M.A. and Ahmed, M. and Abbas, M.A. and Naz, H. and Batool, A.},
title={A hybrid model for agile practices using case based reasoning},
journal={Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
year={2013},
pages={820-823},
doi={10.1109/ICSESS.2013.6615431},
art_number={6615431},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84890051546&doi=10.1109%2fICSESS.2013.6615431&partnerID=40&md5=bb598cd73d0df066ed15f71dfa59194d},
abstract={Agile Software Development works as the bridge that establishes the path to handle changes in the composite task of Software Development. In this research, we present a hybrid model which has been introduced for evolution of the Agile Software Development Practices by using Artificial Intelligence (AI) technique. The methods we used in this research are published reports, articles and existing case studies. Expert's response method is applied to accomplish the appraisal of this model. This model has resulted in improving the Agile Practices by using the concept of Case Based Reasoning (CBR). The model provides a guideline to the Agile Software Development regarding enhancement of Agile Practices incorporated with CBR. © 2013 IEEE.},
author_keywords={Agile;  Case Based Reasoning;  Hybrid Software Engineering Process;  RUP;  Scrum Model;  Software Engineering Practices},
keywords={Agile;  Agile practices;  Agile software development;  Casebased reasonings (CBR);  Hybrid model;  Hybrid software engineerings;  RUP;  Software engineering practices, Artificial intelligence;  Research;  Software design, Case based reasoning},
}

@CONFERENCE{Staron2013325,
author={Staron, M. and Meding, W. and Hoglund, C. and Eriksson, P. and Nilsson, J. and Hansson, J.},
title={Identifying implicit architectural dependencies using measures of source code change waves},
journal={Proceedings - 39th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2013},
year={2013},
pages={325-332},
doi={10.1109/SEAA.2013.9},
art_number={6619529},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889054459&doi=10.1109%2fSEAA.2013.9&partnerID=40&md5=e2ff9d674e28ea1fb8f3ec0a07d8e232},
abstract={The principles of Agile software development are increasingly used in large software development projects, e.g. using Scrum of Scrums or combining Agile and Lean development methods. When large software products are developed by self-organized, usually feature-oriented teams, there is a risk that architectural dependencies between software components become uncontrolled. In particular there is a risk that the prescriptive architecture models in form of diagrams are outdated and implicit architectural dependencies may become more frequent than the explicit ones. In this paper we present a method for automated discovery of potential dependencies between software components based on analyzing revision history of software repositories. The result of this method is a map of implicit dependencies which is used by architects in decisions on the evolution of the architecture. The software architects can assess the validity of the dependencies and can prevent unwanted component couplings and design erosion hence minimizing the risk of post-release quality problems. Our method was evaluated in a case study at one large product at Saab Electronic Defense Systems (Saab EDS) and one large software product at Ericsson AB. © 2013 IEEE.},
author_keywords={architecture;  case study;  dependency;  industry;  measure;  metric;  mining software repositories;  quality},
keywords={Agile software development;  dependency;  Electronic defense systems;  measure;  metric;  Mining software repositories;  Software development projects;  Software repositories, Architecture;  Image quality;  Industry;  Software architecture;  Software design, Risk assessment},
}

@BOOK{AliBabar20131,
author={Ali Babar, M.},
title={Making Software Architecture and Agile Approaches Work Together: Foundations and Approaches},
journal={Agile Software Architecture: Aligning Agile Processes and Software Architectures},
year={2013},
pages={1-22},
doi={10.1016/B978-0-12-407772-0.00001-0},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902426115&doi=10.1016%2fB978-0-12-407772-0.00001-0&partnerID=40&md5=a050f975093fc8b70cabab774e28d996},
abstract={Software architecture (SA) is one of the most significant areas of research and practice in software engineering. It has been shown that getting architecture of large-scale complex systems right is not only extremely important but hugely challenging. The increasing popularity and adoption of Agile Software Development (ASD) methods have brought architecture-centric methods and practices into question as agile followers tend to perceive architecture in the context of plan-driven software development. It is widely recognized that SA needs sufficient attention for successful development and evolution of software-intensive systems and services irrespective of the software development paradigm. Given the nature of the discipline, SA methods and approaches tend to be effort-intensive and heavyweight for certain kinds of projects. There is an increasing interest in finding ways to apply architecture-centric principles and practices in an Agile fashion-Agile architecting. A good understanding of architectural principles and approaches is a prerequisite to agile architecting. The aim of this chapter is to briefly describe the fundamental concepts, principles, and practices of architecture-centric approaches. These concepts, principles, and practices are expected to provide a reader with sufficient understanding of different aspects of SA and its related methods to combine them with ASD methods. We start with a brief discussion of the points that make architecture and agile approaches seemingly incompatible. Then we present and discuss some of the key aspects of architecture-centric approaches and techniques that need to be considered for use in ASD projects. We also provide an overview of some of the key practices that have been recommended for successfully integrating architecture-centric approaches in ASD for developing large-scale, software-intensive systems. © 2014 Elsevier Inc. All rights reserved.},
author_keywords={Agile methods;  Architecturally significant requirements;  Design patterns;  Extreme programming (XP);  Personas;  Requirements engineering;  Scenarios;  Scrum;  Software architecture;  Software engineering},
}

@CONFERENCE{Pinheiro2013332,
author={Pinheiro, P.R. and Machado, T.C.S. and Tamanini, I.},
title={Dealing the selection of project management through hybrid model of verbal decision analysis},
journal={Procedia Computer Science},
year={2013},
volume={17},
pages={332-339},
doi={10.1016/j.procs.2013.05.043},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898739788&doi=10.1016%2fj.procs.2013.05.043&partnerID=40&md5=d71f3af954a95ade6ec28960fce1a495},
abstract={The decision may be defined as a result of a process of choice, given an identified problem or when the decision maker faces an opportunity of creation, optimization or improvement in an environment. Considering that agile methodologies, in focus Framework SCRUM, are always more popular in Development Software Companies, and noticing that the mentioned companies cannot always apply every characteristics of the framework, this paper presents an hybrid application of methodologies from Verbal Decision Analysis (VDA) framework to select some of the SCRUM approaches to be applied in the company, considering the elicitation of preferences of a decision maker. The work intends to provide an evaluation of Project Management approaches applied in the Software Development and examine them toward to identify which are the most preferable ones, aided by the application of a hybrid model of decision making. The hybrid model aims at classifying alternatives using ORCLASS method, through the developed software, and ranking them using a Verbal Decision Analysis method (ZAPROS III-/). Afterward, Specific Practices (SP) of Capability Maturity Model Integration (CMMi) level 2 were chosen, and approaches to attend the SP's were ranked from the most preferable to the least preferable ones, aiming to help enterprises which are not able to reach a complete CMMi qualification. © 2013 The Authors. Published by Elsevier B.V.},
author_keywords={Capability Maturity Model Integration;  ORCLASS;  Project Management;  Specific Practices;  Verbal Decision Analysis;  ZAPROS III-i},
}

@BOOK{Eloranta2013189,
author={Eloranta, V.-P. and Koskimies, K.},
title={Lightweight Architecture Knowledge Management for Agile Software Development},
journal={Agile Software Architecture: Aligning Agile Processes and Software Architectures},
year={2013},
pages={189-213},
doi={10.1016/B978-0-12-407772-0.00007-1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902422733&doi=10.1016%2fB978-0-12-407772-0.00007-1&partnerID=40&md5=64b58a40419cab72cab1393ce790677a},
abstract={Architecture knowledge management (AKM) aims to codify and maintain the architectural knowledge of a software system in a form that can be easily accessed by different stakeholders. Integrating AKM with an agile project management paradigm is a challenge because the agile philosophy downplays both plan-driven development and documentation. Yet, by integrating lightweight AKM practices with the process, agile software development could avoid maintenance and communication problems arising from scarce documentation. In this chapter, we introduce existing technologies that could be used as elements of lightweight AKM for agile software development and present possible models to integrate AKM with Scrum, which is the most popular agile approach in use today. In particular, we advocate the exploitation of architectural evaluations to collect architecturally significant information semiautomatically and the use of automated document generation to expose the contents of an architectural information repository in an easily accessible form. The proposed models are based on observed architecting work practices in industry and on interviews carried out in industry to identify the architectural information flow in real-life agile projects. © 2014 Elsevier Inc. All rights reserved.},
author_keywords={Agile software development;  Architecture knowledge management;  Scrum;  Software architecture;  Software architecture documentation},
}

@CONFERENCE{Nguyen-Cong201327,
author={Nguyen-Cong, D. and Tran-Cao, D.},
title={A review of effort estimation studies in agile, iterative and incremental software development},
journal={Proceedings - 2013 RIVF International Conference on Computing and Communication Technologies: Research, Innovation, and Vision for Future, RIVF 2013},
year={2013},
pages={27-30},
doi={10.1109/RIVF.2013.6719861},
art_number={6719861},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894206536&doi=10.1109%2fRIVF.2013.6719861&partnerID=40&md5=f80cb911315cc12ee3fc4b37439d1b7d},
abstract={This paper presents the results of systematically reviewing the current research literature on effort estimation in agile, iterative and incremental software projects (AIISPs). The primary purpose is to show evidences about common trends, gaps and recommendations for future studies. The results were limited to peer-reviewed conference papers/journal articles, written in English and published before 2013. The synthesis was made through classifying the papers based on different properties. The analysis indicates the need for future research on: 1) estimating effort for the remaining AIISPs, 2) analyzing the impact of properties of historical/current project data, 3) using benchmark data, 4) using composite models and 5) further empirical validation of the estimation models. © 2013 IEEE.},
author_keywords={agile;  cost estimation;  effort estimation;  incremental software development;  iterative software development;  RUP;  scrum;  size estimation;  systematic review;  XP},
}

@ARTICLE{Fulbright2013203,
author={Fulbright, R.},
title={Incorporating innovation into iterative software development using the inventive problem solving methodology},
journal={International Journal of Innovation Science},
year={2013},
volume={5},
number={4},
pages={203-212},
doi={10.1260/1757-2223.5.4.203},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892506636&doi=10.1260%2f1757-2223.5.4.203&partnerID=40&md5=c1d870521173a752a1187cac7225e567},
abstract={Iterative software methodologies allow development teams to be agile in their response to changing requirements. However, the software development team is usually at the mercy of requirements changes, rather than being part of the project engineering staff defining the changes to the solution architecture. Therefore, projects tend to implement inferior solutions. Integrating a project-level innovation technique called Inventive Problem Solving into agile software development methodologies such as the spiral model, the Rational Unified Process, and Scrum, allows the development team to affect the overall solution architecture utilizing their expertise in information technology to the maximum benefit. As a result, more creative, innovative, and efficient solutions to the problem are conceived and implemented.},
author_keywords={agile software development;  I-TRIZ;  innovation;  inventive problem solving;  iterative software development;  Rational Unified Process;  Scrum;  software development methodologies;  Software engineering;  spiral software development;  TRIZ},
keywords={Agile software development;  I-TRIZ;  Inventive problems;  Rational Unified Process;  Scrum;  Software development methodologies;  TRIZ, Information technology;  Innovation;  Problem solving;  Software design;  Software engineering, Iterative methods},
}

@CONFERENCE{Gamble20131678,
author={Gamble, R.F. and Hale, M.L.},
title={Assessing individual performance in Agile undergraduate software engineering teams},
journal={Proceedings - Frontiers in Education Conference, FIE},
year={2013},
pages={1678-1684},
doi={10.1109/FIE.2013.6685123},
art_number={6685123},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893328189&doi=10.1109%2fFIE.2013.6685123&partnerID=40&md5=c4a8bdacda99e4dd6b1b6ce97b667c3e},
abstract={The Agile Software Development (ASD) process is at the forefront of rapid product development driven by changing customer requirements and a trusted, self-organizing development team. Scrum has become a viable model of ASD focusing on determining immediate deliverables and structuring short timelines, called Sprints, for designing, implementing, and providing them for testing by the customer. While these practices are being adopted by organizations, there is significant difficulty in scaling them to the classroom. Once in place, it is a complex task to evaluate individual student performance based solely on the product outcome and Sprint grade. Thus, there is limited opportunity to catch performance problems that may lead to missing deliverable deadlines or decreasing team trust. In this paper, we impose ASD using Scrum on a senior software projects course in Computer Science. Using a collaborative environment that embeds a social network, project management modules, and event capture system, we perform broad data and event capture and analysis to investigate metrics that are relevant to assessing individual performance aspects related to functioning on an Agile team for software development. Our results suggest that predictive data is available after each Sprint to ascertain individual performance attributes and their relationship to product outcomes. © 2013 IEEE.},
author_keywords={Agile software development;  Performance assessment;  Scrum;  Undergraduate software engineering},
keywords={Agile software development;  Collaborative environments;  Individual performance;  Performance assessment;  Project management module;  Rapid product development;  Scrum;  Undergraduate software engineering, Human resource management;  Product development;  Project management;  Software design;  Teaching, Information management},
}

@ARTICLE{EdinGrimheden2013967,
author={Edin Grimheden, M.},
title={Can agile methods enhance mechatronics design education?},
journal={Mechatronics},
year={2013},
volume={23},
number={8},
pages={967-973},
doi={10.1016/j.mechatronics.2013.01.003},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888388046&doi=10.1016%2fj.mechatronics.2013.01.003&partnerID=40&md5=cd3469c12dcd4e44cbd2014d2a193b5c},
abstract={This paper presents a study of the integration of agile methods into mechatronics design education, as performed at KTH Royal Institute of Technology. The chosen method, Scrum, and the context of the studied capstone course are presented. With the integration of Scrum into the capstone projects, an educational favorable alternative is identified, to previously used design methodologies such as more traditional stage-gate methods as the Waterfall or method or the V-model. This is due to the emphasis on early prototyping, quick feedback and incremental development. It still might not be the favorable method for use in large scale industrial development projects where formal procedures might still be preferred, but the pedagogical advantages in mechatronics education are valuable. Incremental development and rapid prototyping for example gives many opportunities for students to reflect and improve. The Scrum focus on self-organizing teams also provides a platform to practice project organization, by empowering students to take responsibility for the product development process. Among the results of this study, it is shown that it is possible and favorable to integrate Scrum in a mechatronics capstone course and that this can enhance student preparation for a future career as mechatronics designers or product developers. It is also shown that this prepares the students with a larger flexibility to handle the increased complexity in mechatronics product development and thereby enabling the project teams to deliver results faster, more reliable and with higher quality. © 2013 Elsevier Ltd. All rights reserved.},
author_keywords={Agile methods;  Capstone course;  Design-centric education;  Mechatronics education},
keywords={Agile methods;  Capstone course;  Design-centric educations;  Incremental development;  Industrial development;  Mechatronics education;  Product development process;  Royal Institute of Technology, Curricula;  Design;  Education computing;  Product development;  Teaching, Students},
}

@CONFERENCE{Vallon2013165,
author={Vallon, R. and Bayrhammer, K. and Strobl, S. and Bernhart, M. and Grechenig, T.},
title={Identifying critical areas for improvement in agile multi-site co-development},
journal={ENASE 2013 - Proceedings of the 8th International Conference on Evaluation of Novel Approaches to Software Engineering},
year={2013},
pages={165-172},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887053861&partnerID=40&md5=3cadced8c751aef28f93e71bfddecc39},
abstract={Agile processes potentially ease distributed software development by demanding regular communication and self-management of virtual team members. However, being designed for collocated teams, extensions to the regular process need to be made. We investigate critical areas of improvement based on a case of distributed Scrum involving two unaffiliated Austrian IT organizations that collaborate to build software. We identified eight critical areas for improvement originating from interviews, retrospective meetings and an in-depth case analysis. Key suggestions for practice include the establishment of long-lived single-site Scrum teams and the application of Behavior Driven Development (BDD) to make implicit requirement knowledge explicit and transparent to all of the distributed parties. Copyright © 2013 SCITEPRESS.},
author_keywords={Agile software development;  Behavior driven development;  Distributed software development;  Scrum;  Software development process},
keywords={Agile software development;  Behavior driven development;  Distributed software development;  Scrum;  Software development process, Engineering;  Industrial engineering, Software design},
}

@CONFERENCE{Bellomo20138,
author={Bellomo, S. and Nord, R.L. and Ozkaya, I.},
title={Elaboration on an integrated architecture and requirement practice: Prototyping with quality attribute focus},
journal={2013 2nd International Workshop on the Twin Peaks of Requirements and Architecture, TwinPeaks 2013 - Proceedings},
year={2013},
pages={8-13},
doi={10.1109/TwinPeaks.2013.6614717},
art_number={6614717},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886655313&doi=10.1109%2fTwinPeaks.2013.6614717&partnerID=40&md5=2f3879ac068c4de1feab0c9cc4570c30},
abstract={This experience report builds on an earlier study in which we interviewed eight project teams that were using iterative incremental lifecycles. In the study, we captured the practices the teams felt contributed to rapid delivery. We identified a mix of Agile and architecture practices that teams apply to rapidly field software and minimize disruption and delay. In this paper, we elaborate one practice from the study, prototyping with quality attribute focus. We compared two experiences in prototyping focused on quality attribute considerations applied on Scrum projects. We observe through interviews that feature development and prototyping practice spans multiple levels: feature development/sprint, release planning, and portfolio planning. We also observe other factors including rapid trade-off analysis, flexible architecture, and adoption of a set of enabling prototyping guidelines. The analysis of the observations sheds light on several aspects of the practice that enable the team to respond quickly and efficiently when prototype feedback suggests architectural change. © 2013 IEEE.},
author_keywords={agile software development;  architecture;  architecture trade-off;  prototyping;  quality attribute;  release planning;  requirements;  software development practices},
keywords={Agile software development;  Quality attributes;  Release planning;  requirements;  Software development practices, Architecture;  Software prototyping, Software design},
}

@ARTICLE{Golfarelli20132357,
author={Golfarelli, M. and Rizzi, S. and Turricchia, E.},
title={Multi-sprint planning and smooth replanning: An optimization model},
journal={Journal of Systems and Software},
year={2013},
volume={86},
number={9},
pages={2357-2370},
doi={10.1016/j.jss.2013.04.028},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84881475474&doi=10.1016%2fj.jss.2013.04.028&partnerID=40&md5=8992afe591117c0f1003064774162767},
abstract={Most agile methods divide a project into sprints (iterations), and include a sprint planning phase that is critical to ensure the project success. Several factors impact on the optimality of a sprint plan, which makes the planning problem difficult. In this paper we formalize the planning problem and propose an optimization model that, given the estimates made by the project team and a set of development constraints, produces a multi-sprint optimal plan that maximizes the business value perceived by users. To cope with the inherent flexibility and uncertainty of agile projects, our approach ensures that a baseline plan can be revised and re-optimized during project execution without disrupting it, which we call smooth replanning. The planning problem is converted into a generalized assignment problem, given a linear programming formulation, and solved using the IBM ILOG CPLEX Optimizer. Our model is validated on both real and synthetic projects. In particular, a case study on two real projects confirms the effectiveness of our approach; as to efficiency, for medium-sized problems an exact solution is found in a few minutes, while for large problems a heuristic solution that is less than 1% far from the exact one is returned in a few seconds. Finally, some smooth replanning tests investigate the trade-off between plan quality and stability. © 2013 Elsevier Inc.},
author_keywords={Agile methods;  Linear programming;  Optimization models;  Scrum;  Software engineering},
keywords={Agile methods;  Generalized assignment problem;  Heuristic solutions;  Inherent flexibility;  Linear programming formulation;  Optimization models;  Project execution;  Scrum, Linear programming;  Optimization;  Software engineering, Mathematical models},
}

@ARTICLE{Almeida2013107,
author={Almeida, L.H. and Albuquerque, A. and Pinheiro, P.R.},
title={A Multi-criteria Decision Model for Planning Inter-organizational Global Agile Software Development Projects},
journal={Communications in Computer and Information Science},
year={2013},
volume={278},
pages={107-116},
doi={10.1007/978-3-642-35879-1_12},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880392228&doi=10.1007%2f978-3-642-35879-1_12&partnerID=40&md5=92b379cf3ce5a73850b3a89560c70dcb},
abstract={Inter-organizational Global Software Development (GSD) has become a common reality for many projects. It is well established that distance makes difficult to interact and to cooperate effectively. Scrum, a consolidated Agile methodology, emphasizes communication, reduces coordination and control overhead and has been increasingly used in a distributed fashion. Successfully planning and managing the combined use of GSD and Scrum is a complex task and requires carefully planning. Despite the importance and complexity of this type of problem, there seems to be a lack of reports, in the literature, of models that could support managers dealing with these decision contexts. This paper presents a multi-criteria decision model for planning and fine-tuning such project plans. This model was developed using cognitive mapping and MACBETH [1]. The application of the model is demonstrated, followed by conclusion and future work. © Springer-Verlag Berlin Heidelberg 2013.},
author_keywords={Cognitive Mapping;  Global Software Development;  MACBETH;  Multi-Criteria Decision Analysis;  Project Management},
keywords={Agile software development projects;  Cognitive mapping;  Coordination and Control;  Global software development;  Inter-organizational;  MACBETH;  Multi-criteria decision analysis;  Multicriteria decision, E-learning;  Knowledge management;  Management science;  Models;  Project management, Software design},
}

@ARTICLE{Bourimi2013345,
author={Bourimi, M. and Kesdogan, D.},
title={Experiences by using AFFINE for building collaborative applications for online communities},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2013},
volume={8029 LNCS},
pages={345-354},
doi={10.1007/978-3-642-39371-6-39},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880902682&doi=10.1007%2f978-3-642-39371-6-39&partnerID=40&md5=b6cdf7ed4a345e54afb4f8b2bdf33cef},
abstract={Continuous problems and deficits in developing complex and ever-changing (software) systems led to agile methods, e.g. Scrum. Nevertheless, the problem of considering a plethora of different functional as well as nonfunctional requirements (N/FRs) remains unsolved and gains in importance when engineering state-of-the-art software. The current tide of approaches aims at handling every single NFR by an individual process integrated into Scrum, yielding a process complexity which can not be handled properly. Scrum-based AFFINE was designed explicitly to provide an alternative solution to over-complex design- and development-processes and still considering all kinds of NFRs early enough in the process. In this paper, we discuss collected findings by using AFFINE in various projects dealing with the development of software for user-centered online communities towards some evidence of its suitability. © 2013 Springer-Verlag Berlin Heidelberg.},
author_keywords={AFFINE;  Agile Software Process;  Nonfunctional Requirements Engineering;  Scrum;  Security and Usability;  User Experience},
keywords={AFFINE;  Agile software process;  Non-functional requirements;  Scrum;  Security and usabilities;  User experience, Artificial intelligence;  Computer science, Online systems},
}

@ARTICLE{DiBella2013930,
author={Di Bella, E. and Fronza, I. and Phaphoom, N. and Sillitti, A. and Succi, G. and Vlasenko, J.},
title={Pair programming and software defects - A large, industrial case study},
journal={IEEE Transactions on Software Engineering},
year={2013},
volume={39},
number={7},
pages={930-953},
doi={10.1109/TSE.2012.68},
art_number={6331491},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880231221&doi=10.1109%2fTSE.2012.68&partnerID=40&md5=725630464f60509c147585eb4ee01d86},
abstract={In the last decade, there has been increasing interest in pair programming (PP). However, despite the existing work, there is still a lack of substantial evidence of the effects of PP in industrial environments. To address this issue, we have analyzed the work of a team of 17 industrial developers for 14 months. The team is part of the IT department of a large Italian manufacturing company; it adopts a customized version of extreme programming (XP). We have investigated the effects of PP on software quality in five different scenarios. The results show that PP appears to provide a perceivable but small effect on the reduction of defects in these settings. © 1976-2012 IEEE.},
author_keywords={case study;  Pair programming;  software defects},
keywords={EXtreme Programming;  Industrial case study;  Industrial environments;  Manufacturing companies;  Pair-programming;  Software defects;  Software Quality, Computer software selection and evaluation;  Industrial applications, Defects},
}

@ARTICLE{Qasaimeh20131556,
author={Qasaimeh, M. and Abran, A.},
title={An audit model for ISO 9001 traceability requirements in agile-XP environments},
journal={Journal of Software},
year={2013},
volume={8},
number={7},
pages={1556-1567},
doi={10.4304/jsw.8.7.1556-1567},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879980905&doi=10.4304%2fjsw.8.7.1556-1567&partnerID=40&md5=58e922437ac9e518246faef02f369f95},
abstract={Software organizations that develop their software products using the agile software processes such as Extreme Programming (XP) face a number of challenges in their effort to demonstrate that their process activities conform to ISO 9001 requirements, a major one being product traceability: software organizations must provide evidence of ISO 9001 conformity, and they need to develop their own procedures, tools, and methodologies to do so. This paper proposes an auditing model for ISO 9001 traceability requirements that is applicable in agile (XP) environments. The design of our model is based on evaluation theory, and includes the use of several auditing "yardsticks" derived from the principles of engineering design, the SWEBOK Guide, and the CMMI-DEV guidelines for requirement management and traceability for each yardstick. Finally, five approaches for agile-XP traceability approaches are audited based on the proposed audit model. © 2013 ACADEMY PUBLISHER.},
author_keywords={Agile software certification;  Extreme programming;  ISO 9001;  Software process improvement},
keywords={Agile software process;  Agile softwares;  EXtreme Programming;  ISO 9001;  Product traceability;  Requirement management;  Software organization;  Software Process Improvement, Artificial intelligence;  Software engineering, Management},
}

@CONFERENCE{Perkusich20131037,
author={Perkusich, M. and De Almeida, H.O. and Perkusich, A.},
title={A model to detect problems on scrum-based software development projects},
journal={Proceedings of the ACM Symposium on Applied Computing},
year={2013},
pages={1037-1042},
doi={10.1145/2480362.2480560},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877954639&doi=10.1145%2f2480362.2480560&partnerID=40&md5=1201ab6075c3d445771363e67519e079},
abstract={There is a high rate of software development projects that fails. Whenever problems can be detected ahead of time, software development projects may have better chances of success, and therefore save money and time. In this paper, we present a probabilistic model to help ScrumMasters to apply Scrum in organizations. The model's goal is to provide information to the project's ScrumMaster to help him to be aware of the project's problems and have enough information to guide the team and improve the project's chances of success. We published a survey to collect data for this study and validated the model by applying it to scenarios. The results obtained so far show that the model is promising. Copyright 2013 ACM.},
author_keywords={Agile;  Bayesian network;  Project health;  Scrum},
keywords={Agile;  High rate;  Probabilistic models;  Project healths;  Scrum;  Software development projects, Bayesian networks, Software design},
}

@CONFERENCE{Zolotova201361,
author={Zolotova, I. and Lacinak, L. and Lojka, T.},
title={Architecture for a universal mobile communication module},
journal={SAMI 2013 - IEEE 11th International Symposium on Applied Machine Intelligence and Informatics, Proceedings},
year={2013},
pages={61-64},
doi={10.1109/SAMI.2013.6480945},
art_number={6480945},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875578362&doi=10.1109%2fSAMI.2013.6480945&partnerID=40&md5=b6f9bc97175f071d662f618e9c9aaa05},
abstract={The current trend in the field of supervisory control systems is focusing attention on mobile devices. The main objective is to meet requirements such as security access, connection speed, mobility and portability of applications. One trend is the use of mobile devices and the associated limitations on the development of the application. The main objective of this paper is to describe and analyze the problems arising in the development of visualization applications for mobile devices, focusing on the communication module. The solution to this problem is described in the Scrum lifecycle model that was used to create the application and its modules. Another objective was to highlight the issue of supervisory control of applications for mobile devices based on the operating system. © 2013 IEEE.},
keywords={Communication modules;  Life cycle model;  Mobile communications;  Security access;  Supervisory control;  Supervisory control systems;  Visualization application, Artificial intelligence;  Information science, Mobile devices},
}

@CONFERENCE{Soares2013139,
author={Soares, R. and Cabral, T. and Alencar, F.},
title={Requirements management in Scrum based on test driven development [Gerenciamento de Requisitos em Scrum baseado em Test Driven Development]},
journal={CEUR Workshop Proceedings},
year={2013},
volume={1005},
pages={139-164},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923305509&partnerID=40&md5=db8b2285316494c92b588b5556d7c046},
abstract={In order to improve the success rate of software projects various development methodologies have been proposed as alternative to traditional models of development, the agile methodologies. Some steps of the traditional methodology were changed or even canceled, on agile methods, particularly at requirements engineering phase. Traditional methodologies rely on the documentation to manage the project and share knowledge. Meanwhile, the agile methodologies focus on the interaction between those involved in the project to deal with the same goals. There are several challenges with respect to requirements engineering in agile methods. Among these are problems at the process of requirement&#39;s elicitation and analyses. This work proposes to analyze tools, techniques, or patterns, like Test Driven Development, in order to better manage the process of requirement&#39;s elicitation and validation at Scrum.},
keywords={Agile Methodologies;  Agile methods;  Development methodology;  Requirements management;  Share knowledge;  Software project;  Test driven development;  Traditional models, Requirements engineering},
}

@CONFERENCE{Cabral2013287,
author={Cabral, T. and Soares, R. and Alencar, F.},
title={Evolution of requirements in agile methodology [Evolução de Requisitos na Metodologia Ágil]},
journal={CEUR Workshop Proceedings},
year={2013},
volume={1005},
pages={287-291},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923272299&partnerID=40&md5=e7dcd3fd4ab00189d48a3a9014d8b1c2},
abstract={Nowadays, agile metodologias are widely accepted mainly by indus-try, by being iterative approaches that keep the dynamics of software develop-ment environments. Numerous researches indicate that these methodologies are useful and effective for successful development. However, very little has been about efforts made in the requirements phase in agile methodologies. The evo-lution of requirements, in particular, brings risks to the software project. Howe-ver, when well managed can improve software quality and satisfaction of the stakeholders. The evolution of requirements is a themed deserving further exa-mination of these methodologies. In the engineering community requirements, the i*approach is a very rich ontology and has been intensively studied and utilized. Thus, the paper proposes the use of the i*approach to the analysis of the factors necessary for the management of the evolution of requirements in agile methodologies.},
keywords={Computer software selection and evaluation;  Iterative methods;  Requirements engineering, Agile Methodologies;  Engineering community;  Iterative approach;  Requirements phase;  Software project;  Software Quality, Software engineering},
}

@ARTICLE{Alsmadi2013110,
author={Alsmadi, I. and Saeed, S.},
title={A software development process for open source and open competition projects},
journal={International Journal of Business Information Systems},
year={2013},
volume={12},
number={1},
pages={110-122},
doi={10.1504/IJBIS.2013.050662},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870714084&doi=10.1504%2fIJBIS.2013.050662&partnerID=40&md5=d339d56aa9c0ccd56b529d4ca6eca7ce},
abstract={Open source and offshore software development projects have changed the typical business model of companies. Such projects are often developed through loosely coupled teams/individuals having weak official belongings and communicating through modern communication tools instead of physical meetings. In contrast to a typical business model, project economics are not so important in project completion. In this paper we highlight the distinguished elements of such software development approaches to present guidelines for innovative software process model supporting such development paradigm. Copyright © 2013 Inderscience Enterprises Ltd.},
author_keywords={Agile methodologies;  Software design;  Software development lifecycle;  Software process;  Software process models},
}

@ARTICLE{McHugh2013199,
author={McHugh, M. and McCaffery, F. and Fitzgerald, B. and Stol, K.-J. and Casey, V. and Coady, G.},
title={Balancing Agility and Discipline in a Medical Device Software Organisation},
journal={Communications in Computer and Information Science},
year={2013},
volume={349 CCIS},
pages={199-210},
doi={10.1007/978-3-642-38833-0_18},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904644560&doi=10.1007%2f978-3-642-38833-0_18&partnerID=40&md5=fa321defd3928705a1516dbeabe6c494},
abstract={Agile development techniques are becoming increasingly popular in the generic software development industry as they appear to offer solutions to the problems associated with following a plan-driven Software Development Life Cycle (SDLC). However, agile methods may not be suited to all industries or organisations. For agile methods to succeed, an organisation must be structured in a way to accommodate agile methods. Medical device software development organisations are bound by regulatory constraints and as a result face challenges when they try to completely follow an agile methodology, but can reap significant benefits by combining both agile and plan-driven SDLC such as the Waterfall or V-Model. This paper presents an analysis of a medical device software development organisation based in Ireland, which is considering moving to agile software development techniques. This includes the performing of a Home-Ground Analysis to determine how agile or disciplined the organisation currently is. Upon completion of the Home-Ground Analysis recommendations were made to the organisation as to how they could tailor their existing structure to better accommodate agile development techniques. These recommendations include adopting agile practices such as self-organising teams to promote a culture of "chaos" within the organisation. © Springer-Verlag Berlin Heidelberg 2013.},
author_keywords={Agile;  Home-Ground Analysis;  Medical;  V-Model},
keywords={Biomedical equipment, Agile;  Agile Methodologies;  Agile software development;  Home-Ground Analysis;  Medical;  Software development life cycle;  Software organisations;  V-model, Software design},
}

@ARTICLE{Peldzius2013223,
author={Peldzius, S. and Ragaisis, S.},
title={Usage of Multiple Process Assessment Models},
journal={Communications in Computer and Information Science},
year={2013},
volume={349 CCIS},
pages={223-234},
doi={10.1007/978-3-642-38833-0_20},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904657808&doi=10.1007%2f978-3-642-38833-0_20&partnerID=40&md5=b43d0cbb31f0ad0966df6e38f6d4f492},
abstract={Organizations seek to obtain benefit from different process capability frameworks - the most popular ones as ISO/IEC 15504 and CMMI and the new ones as Enterprise SPICE - but every assessment is expensive both financially and time-wise. Furthermore, new assessment is required when a new process assessment model's version is released. In order to define and/or improve their software process, organizations choose different Software Development Methodologies. It is important for the organization to know what capability/maturity of the process a chosen methodology could ensure. In order to solve these problems, Transitional Process Assessment Model (TPAM) [1] has been proposed. It should enable the transformation of assessment results according to one Process Assessment Model to other models and determines what capability/maturity according to different Process Assessment Models a chosen methodology could ensure. The requirements for TPAM and its implementation principles have been introduced in [1]. This article presents the development of TPAM and supporting tool. The ideas of Enterprise SPICE integration into TPAM are outlined also. © Springer-Verlag Berlin Heidelberg 2013.},
author_keywords={Agile methodologies;  CMMI;  Enterprise SPICE;  ISO/IEC 15504;  models mapping;  transitional process assessment model},
keywords={Industry;  Standards, Agile Methodologies;  CMMI;  ISO/IEC 15504;  Multiple process;  Process assessments;  Process capabilities;  Software development methodologies;  Transitional process, Software design},
}

@ARTICLE{Ramos2013504,
author={Ramos, A.L. and Ferreira, J.V. and Barceló, J.},
title={Lithe: An agile methodology for human-centric model-based systems engineering},
journal={IEEE Transactions on Systems, Man, and Cybernetics Part A:Systems and Humans},
year={2013},
volume={43},
number={3},
pages={504-521},
doi={10.1109/TSMCA.2012.2207888},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887095976&doi=10.1109%2fTSMCA.2012.2207888&partnerID=40&md5=c6be320a0d5284eb9184dd33396c6e3b},
abstract={This paper proposes an agile model-based systems engineering (SE) methodology (LITHE methodology) to engineer the contemporary large, complex, and interdisciplinary systems of systems. The methodology relates the processes, the methods, and the tools in order to support an effective model-based development context. The LITHE uses a universal and intuitive SE base process, reducing the complexity and intricacy of the base methods, emphasizing the agile principles such as continuous communication, feedback and stakeholders' involvement, short iterations, and rapid response, and rousing the utilization of a coherent system model developed through the benchmark systems graphicalmodeling languages. Aiming to support the development of successful systems, which satisfy the stakeholders' expectations, the methodology is particularly concerned with human systems integration, so the related fundamental aspects are considered throughout the engineering process. The LITHEmethodology also includes a supporting graphical tool that aims to be an agile instrument to be used by systems engineers in a model-based development environment. To illustrate the effectiveness of the proposed methodology and to provide some validation, an empirical case study related with the development of a real large and complex system (the Guiding Urban Intelligent Traffic and Environment system) is also described. © 2013 IEEE.},
author_keywords={Human systems integration (HSI);  Methodology;  Model-based systems engineering (SE) (MBSE);  Systems Modeling Languages (SysMLs)},
keywords={Empirical case studies;  Human systems integration;  Intelligent traffics;  Interdisciplinary systems;  Methodology;  Model based development;  Model-based systems engineering;  Systems modeling languages, Systems engineering, Agile manufacturing systems},
}

@CONFERENCE{Lorber2013156,
author={Lorber, A.A. and Mish, K.D.},
title={How we successfully adapted agile for a research-heavy engineering software team},
journal={Proceedings - AGILE 2013},
year={2013},
pages={156-163},
doi={10.1109/AGILE.2013.20},
art_number={6612892},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887265304&doi=10.1109%2fAGILE.2013.20&partnerID=40&md5=894f8332d07636dfcec2fc51de8b6b9f},
abstract={In our development team at Sandia National Laboratories we have honed our Scrum processes to where we continually deliver high-performance engineering analysis software to our customers. We deliver despite non-ideal circumstances, including development work that can be categorized as exploratory research, regular use of part-time developers, team size that varies widely among Sprints, highly specialized technical skill sets and a broad range of deliverables. We believe our methodologies can be applied to many research-oriented environments such as those found in government laboratories, academic institutions and corporate research facilities. Our goal is to increase the adoption of Lean/Agile project management in these environments by sharing our experiences with those research-oriented development teams who are considering using Lean/Agile, or have started and are encountering problems. In this paper we discuss how we create and prioritize our product backlog, write our user stories, calculate our capacity, plan our Sprints, report our results and communicate our progress to customers. By providing guidance and evidence of success in these areas we hope to overcome real and perceived obstacles that may limit the adoption of Lean/Agile techniques in research-oriented development environments. © 2013 IEEE.},
author_keywords={Agile;  engineering analysis software;  research;  scientific programming;  Scrum},
keywords={Human resource management;  Project management;  Research, Academic institutions;  Agile;  Development environment;  Engineering analysis software;  Government laboratories;  Sandia National Laboratories;  Scientific programming;  Scrum, Engineering research},
}

@CONFERENCE{Ng201351,
author={Ng, P.-W. and Huang, S. and Wu, Y.},
title={On the value of essence to software engineering research: A preliminary study},
journal={2013 2nd SEMAT Workshop on a General Theory of Software Engineering, GTSE 2013 - Proceedings},
year={2013},
pages={51-58},
doi={10.1109/GTSE.2013.6613871},
art_number={6613871},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887492960&doi=10.1109%2fGTSE.2013.6613871&partnerID=40&md5=8e8845843e5cbc70fded6d68feb81a86},
abstract={There has been growing interest in the use of empirical approaches in software engineering research. However, many researchers pointed out that a framework for reporting software engineering case study findings is lacking. As a consequence, it is difficult to compare results or evaluate their generality. In this paper, we use Essence as a foundation for such a framework. Essence is a software engineering kernel and language developed by SEMAT, whose aim is to find a common ground of software engineering. We chose Essence as a foundation because of its unique features such as being comprehensive, model-based, and extensible. We demonstrate the use of this framework by taking an existing case study research and analyzing how Essence could report its findings more systematically and comprehensively. The case study we investigate is about whether the customer representative role is too demanding in an extreme programming (XP) environment. Using the Essence framework, we found a strong validity threat to this case study. Although the validity threat could also be detected otherwise, the fact that it was not detected previously only highlight the importance of having greater rigor in case study reporting and evaluation, which is why a framework is necessary. Moreover, by using Essence as a foundation for such a framework, we show the value Essence brings to the software engineering research community. © 2013 IEEE.},
author_keywords={Case Study;  Empirical Validation;  Essence;  Kernel;  Research;  SEMAT;  Software Engineering},
keywords={Software engineering, Case study research;  Customer representative;  Empirical approach;  Empirical validation;  Essence;  EXtreme Programming;  Kernel;  SEMAT, Research},
}

@ARTICLE{Schweigert2013228,
author={Schweigert, T. and Ekssir-Monfared, M. and Ofner, M.},
title={An Agile Management Process Group for TestSPICE®: How to Assess and Improve Agile Management},
journal={Communications in Computer and Information Science},
year={2013},
volume={364 CCIS},
pages={228-236},
doi={10.1007/978-3-642-39179-8_20},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904616944&doi=10.1007%2f978-3-642-39179-8_20&partnerID=40&md5=3d185ddd6f0865517deb88ef0a271a52},
abstract={The paper presents an outline for an Agile Management Process Group. It deals with the well-known question to what extent agile management helps to reach SPICE capability levels and also discusses to which extent the features of SPICE help to improve agility. The paper also deals with the question of agile maturity in general, agile maturity in the Certified Agile Tester (CAT) syllabus and agile anti patterns. Based on this analysis the paper presents the proposal for an Agile Management Process Group in TestSPICE®. © Springer-Verlag Berlin Heidelberg 2013.},
author_keywords={Agile Maturity Model;  Capability;  CAT;  Certified agile tester;  CMMI;  ISO 15504;  Maturity;  SCRUM;  SPICE;  TestSPICE;  XP},
keywords={Computer science;  Computers;  SPICE, Capability;  CAT;  Certified agile tester;  CMMI;  ISO 15504;  Maturity;  Maturity model;  SCRUM;  TestSPICE;  XP, Agile manufacturing systems},
}

@CONFERENCE{Krusche2013319,
author={Krusche, S. and Konsek, T.},
title={Mobile scrum},
journal={Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
year={2013},
volume={P-215},
pages={319-325},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922750805&partnerID=40&md5=5c90be0e82e26fca22b131b349393cae},
abstract={In this paper we discuss whether mobile applications can support software developers to improve their efficiency and communication. We propose the idea of Mobile Scrum, a native and integrated mobile application that supports scrum teams in their activities and fits into their environment. Team members can use it anytime and anywhere to communicate and share knowledge within the team. Mobile Scrum provides a lightweight, yet easy and intuitive to use interface compared to existing web-based and desktop applications. With guides and templates it helps to prevent typical problems when applying Scrum. Furthermore it improves the consistency of scrum artifacts and enables easy access to important information. © Gesellschaft für Informatik, Bonn 2013.},
keywords={Mobile computing;  Social networking (online);  Software engineering, Desktop applications;  Mobile applications;  Share knowledge;  Software developer;  Team members;  Web based, Application programs},
}

@CONFERENCE{Raith201367,
author={Raith, F. and Richter, I. and Lindermeier, R. and Klinker, G.},
title={Identification of inaccurate effort estimates in agile software development},
journal={Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
year={2013},
volume={2},
pages={67-72},
doi={10.1109/APSEC.2013.114},
art_number={6754353},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897415100&doi=10.1109%2fAPSEC.2013.114&partnerID=40&md5=5f1427dbd27635fcf800bd8f9d40900c},
abstract={Like in every process model, agile processes (e.g. Scrum, eXtreme Programming) depend on accurate estimations to enable meaningful prioritization, iteration- and release planning. The emphasis of this paper is on "Planning Poker", a widely used estimation technique in agile context. The goal is to identify inaccurate effort estimates to enable more precise project scheduling and release planning. In a first step, basic terms (e.g. development effort, functional effort) of traditional effort estimation were declared in the agile context. Afterwards - within the main part of the paper - a set of metrics is proposed, which can be used to evaluate accuracy of estimates. These metrics are based on the estimated efforts and interim results of the estimation process. Since the usage of these metrics needs to be seamlessly integrated into the Planning Poker process, we have conceptualized a computeraided tool to collect and evaluate necessary data. To get a first proof of concept and preliminary feedback, we developed a corresponding prototype and applied it to a students' project. The prototype is based on a stationary multi-touch device and offers an intuitive user interface to perform the Planning Poker process. While estimation takes place, it collects required data and identifies inaccurate estimates with the help of the proposed metrics. The second part of the paper summarizes assets and drawbacks concerning usability and the user interface of the prototype. © 2013 IEEE.},
author_keywords={Agile;  Effort estimation;  Media supported interaction;  Planning poker;  Scrum},
keywords={Iterative methods;  Software design;  User interfaces, Agile;  Agile software development;  Computer aided tools;  Effort Estimation;  Estimation techniques;  Intuitive user interface;  Media supported interaction;  Scrum, Software engineering},
}

@CONFERENCE{Antinyan20131,
author={Antinyan, V. and Staron, M. and Meding, W. and Österström, P. and Bergenwall, H. and Wranker, J. and Hansson, J. and Henriksson, A.},
title={Monitoring evolution of code complexity in agile/lean software development: A case study at two companies},
journal={13th Symposium on Programming Languages and Software Tools, SPLST 2013 - Proceedings},
year={2013},
pages={1-15},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923583593&partnerID=40&md5=63ebfe7337258d819510332d7534607f},
abstract={One of the distinguishing characteristics of Agile and Lean software development is that software products "grow" with new functionality with relatively small increments. Continuous customer demands of new features and the companies' abilities to deliver on those demands are the two driving forces behind this kind of software evolution. Despite the numerous benefits there are a number of risks associated with this kind of growth. One of the main risks is the fact that the complexity of the software product grows slowly, but over time reaches scales which makes the product hard to maintain or evolve. The goal of this paper is to present a measurement system for monitoring the growth of complexity and drawing attention when it becomes problematic. The measurement system was developed during a case study at Ericsson and Volvo Group Truck Technology. During the case study we explored the evolution of size, complexity, revisions and number of designers of two large software products from the telecom and automotive domains. The results show that two measures needed to be monitored to keep the complexity development under control-McCabe's complexity and number of revisions.},
author_keywords={Code;  Complexity;  Correlation;  Lean and Agile software development;  Measurement systems;  Metrics;  Potentially problematic;  Risk},
keywords={Agile manufacturing systems;  Correlation methods;  Risk assessment;  Risks;  Software engineering, Agile software development;  Code;  Complexity;  Measurement system;  Metrics;  Potentially problematic, Software design},
}

@ARTICLE{Garzás20131325,
author={Garzás, J. and Paulk, M.C.},
title={A case study of software process improvement with CMMI-DEV and Scrum in Spanish companies},
journal={Journal of software: Evolution and Process},
year={2013},
volume={25},
number={12},
pages={1325-1333},
doi={10.1002/smr.1605},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900554062&doi=10.1002%2fsmr.1605&partnerID=40&md5=0786e82343c87d431bd08c566517044c},
abstract={One of the most commonly used agile methods is Scrum. Capability Maturity Model Integration for Development (CMMI-DEV) is currently the de facto framework for process improvement and for determining the organizational maturity of software development companies. CMMI-DEV and Scrum share certain characteristics, and even though they were developed for different purposes, they can be complementary to each other; and as such, they are not in competition. This paper presents a case study of the relationship between level 2 of CMMI-DEV 1.3 and Scrum. This research has focused on the relationships between Scrum and level 2 of CMMI-DEV 1.3. The objective of this research paper is to evaluate how Scrum helps implement a process model such as CMMI-DEV. A detailed case study was conducted among Spanish IT companies. The case study was designed according to established guidelines for cases studies. There were eight principal activities: case study design, case selection, case study procedures and roles, data collection, analysis, plan validity, study limitations, and reporting. The results obtained show that most of the process areas of CMMI-DEV level 2 had been improved by using Scrum. Other issues detected arose during the formal appraisals and illustrated how it is possible to verify with Scrum that the specific goals of CMMI-DEV have been implemented. In addition, it highlights how the use of open-source tools was useful in improving the process in the companies involved. Based on the case study carried out, the addition of Scrum methodologies may improve the increase in quality of software processes. © 2013 John Wiley & Sons, Ltd.},
author_keywords={Agile;  case study;  CMMI-DEV;  Scrum;  software process improvement},
keywords={Industry;  Software design, Agile;  Capability maturity model integration;  CMMI-DEV;  Organizational maturity;  Quality of softwares;  Scrum;  Scrum methodologies;  Software Process Improvement, Research},
}

@CONFERENCE{Chaczko2013,
author={Chaczko, Z. and Kirkpatrick, S. and Braun, R.},
title={A web-based solution to collect, manage and analyse Auditory Brainstem Response data},
journal={2013 12th International Conference on Information Technology Based Higher Education and Training, ITHET 2013},
year={2013},
doi={10.1109/ITHET.2013.6671012},
art_number={6671012},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893468370&doi=10.1109%2fITHET.2013.6671012&partnerID=40&md5=be5f25b8773e9ae1695123128f1c5cbe},
abstract={Auditory neuroscience often involves the collection of experiment data from test subjects in the form of non-invasive Auditory Brainstem Responses (ABR). These ABRs are most often used to gauge a subjects hearing threshold. Although rarely; they can be analysed further. Research into ABRs has shown that the presence of brain damage or tumours may be detectable. This can be achieved if large amounts of ABRs are collected and compared. However many laboratories around the world do not keep the data as it is difficult to store and analyse, and sometimes only used for threshold analysis. This results in a huge amount of wasted data and opportunity. The goal of this project was to develop and build a web-based system to collect, manage and analyse ABR data for hearing research. The project was run as an iterative process based on the eXtreme-Programming (XP) methodology. It involved very close contact with the client laboratory. Onsite weekly meetings, demonstrations and experiments were attended to help understand the problem domain. A continuous analysis, design and integration cycle coupled with automated testing and deployment was used throughout the project. Where possible all key aspects of XP development were adhered to and the project managed in this fashion. The final OpenABR system was deployed to a cloud server and is being used by the client laboratory. It has several unique features that no other system of its type possesses. Its dynamic database interface allows scientists the flexibility and reliability they cannot get from standard databases. Future work would focus on expanding the dynamic database interface, integrating more analysis including heuristics and trying to include new data types such as imaging results. © 2013 IEEE.},
author_keywords={Auditory brainstem responses;  Scientific Big Data;  Web-based solution},
keywords={Audition;  Brain;  Database systems;  Education;  Experiments;  Information technology;  Iterative methods;  Websites, Auditory brainstem response;  Automated testing;  Big datum;  Continuous analysis;  Design and integrations;  Hearing researches;  Threshold analysis;  Web-based solutions, Information management},
}

@ARTICLE{Concas20131225,
author={Concas, G. and Lunesu, M.I. and Marchesi, M. and Zhang, H.},
title={Simulation of software maintenance process, with and without a work-in-process limit},
journal={Journal of software: Evolution and Process},
year={2013},
volume={25},
number={12},
pages={1225-1248},
doi={10.1002/smr.1599},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900541490&doi=10.1002%2fsmr.1599&partnerID=40&md5=02873b311428ba6768825e1a28332892},
abstract={A software maintenance process is important for reducing maintenance effort and for improving software quality. In recent years, the Lean-Kanban approach has been widely applied in software practice including software maintenance. This approach minimizes Work-in-Progress (WIP), which is the number of items that are worked on by the team at any given time, thus improving the maintenance process. In this paper, we describe our simulation studies, which show that the Lean-Kanban approach can indeed help reduce the average time needed to complete maintenance requests. We develop a process simulator that can simulate both existing maintenance processes that do not use a WIP limit and that adopt it. We perform two case studies using real maintenance data collected from a Microsoft project and from a Chinese software firm. The main results of our study are twofold. First, we demonstrate that it is possible to effectively model and simulate, using actors and events, a maintenance process where a flow of issues is processed through a sequence of activities, correctly reproducing key statistics of real data. Second, our results confirm that the WIP-limited process could be useful to increase the efficiency of software maintenance, as reported in previous industrial practices. © 2013 John Wiley & Sons, Ltd.},
author_keywords={empirical software engineering;  Kanban;  Lean software development;  software maintenance process;  software process simulation},
keywords={Computer software selection and evaluation;  Software design, Empirical Software Engineering;  Kanban;  Lean software development;  Software maintenance process;  Software process simulation, Computer software maintenance},
}

@ARTICLE{Kifor2013235,
author={Kifor, V.C. and Tudor, N.},
title={Quality system for production software as tool for monitoring and improving organization KPIs},
journal={International Journal of Computers, Communications and Control},
year={2013},
volume={8},
number={2},
pages={235-246},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902141220&partnerID=40&md5=b12b43abebd76059249a40fa5bbb060a},
abstract={In this paper we propose a solution as support for quality systems for production software. The motivation behind this study was to reduce that cost in the production area caused by gaps in the quality of the production software. Our proposal: QSPS (Quality System for Production Software) is offering support in the "vulnerable points" of these quality systems which usually generate nonconformities and have proved to be difficult or impossible to control. QSPS is a method in seven steps or modules that integrates also software tools, templates, checklists, evaluating tools elaborated complying to products, process and system quality standards. If other analyzed methods like: Scrum, XP, Fuzzy, Prompt, PTA, PRINCE2 or norms like: ISO 9001, ISO 9000-3, TickIT, CMM and CMMI, AQAP-110/AQAP-150, IEEE 730/983 are working in a reactive way, after the developing phase was finished, QSPS is an active system, helping the software developer from the beginning of the implementation phase to improve the developing methodology and to fulfill the quality requirements. QSPS model was applied in one of the largest European automotive company, the result being finalized in a practical approach of the QSPS, named QSMA - Quality System for Manufacturing Application. Using the QSMA (Quality System for the manufacturing application) for industrial projects and not only therefore, has led to accurate running of the production line from beginning of the SOP (Start of Production). Once this system was implemented and the production software applications were realized under the principles and rules of the QSMA, we defined strategically measurable KPIs (key performance indicators) out of the seven modules of the QSMA. This KPIs have the role to signal every time a production application has not the desired quality level and presents a high level of risk that could cause additional costs in the production. Based on the KPIs evolution, the weaknesses in the software applications can be identified in real time, so that the developer can react immediately, before occurrence of substantial damage. © 2006-2013 by CCC Publications.},
author_keywords={Capability;  Control;  Efficiency;  Monitoring;  Organization KPI (key performance indicator);  Performance;  Quality improvement},
}

@CONFERENCE{Neely2013121,
author={Neely, S. and Stolt, S.},
title={Continuous delivery? Easy! Just change everything (well, maybe it is not that easy)},
journal={Proceedings - AGILE 2013},
year={2013},
pages={121-128},
doi={10.1109/AGILE.2013.17},
art_number={6612887},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887303662&doi=10.1109%2fAGILE.2013.17&partnerID=40&md5=b19a5d21b4c4b9e4946176a93dd7b301},
abstract={Rally Software transitioned from shipping code every eight-weeks, with time-boxed Scrum sprints, to a model of continuous delivery with Kanban. The team encountered complex challenges with their build systems, automated test suites, customer enablement, and internal communication. But there was light at the end of the tunnel - greater control and flexibility over feature releases, incremental delivery of value, lower risks, fewer defects, easier on-boarding of new developers, less off-hours work, and a considerable up tick in confidence. This experience report describes the journey to continuous delivery with the aim that others can learn from our mistakes and get their teams deploying more frequently. We will describe and contrast this transition from the business (product management) and engineering perspectives. © 2013 IEEE.},
keywords={Automated test;  Build systems;  Engineering perspective;  Experience report;  Feature release;  Incremental delivery;  Internal communications;  Product management},
}

@CONFERENCE{Huijgens2013137,
author={Huijgens, H. and Van Solingen, R.},
title={Measuring best-in-class software releases},
journal={Proceedings - Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement, IWSM-MENSURA 2013},
year={2013},
pages={137-146},
doi={10.1109/IWSM-Mensura.2013.29},
art_number={6693233},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893557931&doi=10.1109%2fIWSM-Mensura.2013.29&partnerID=40&md5=e00a7241db466dce61efa0bf46d4881d},
abstract={In this research we aimed to identify distinguishing factors in software releases. For this purpose we analyzed the metrics of 26 software projects. These projects were releasebased deliveries from two stable, experienced development teams. During the measurement period both teams transformed from a plan-driven delivery model (waterfall) to an agile approach (Scrum). Overall, we observed that these small release-based projects differ largely from non-release-based projects. Our research indicates that a combination of release-based working, a fixed and experienced development team, and a steady heartbeat contribute to performances that can be characterized as bestpractice. The main contribution of this paper is that we found five success factors (all reducing development complexity) that result in best-of-class performance for small software releases. © 2013 IEEE.},
author_keywords={IT-metrics;  Performance measurement;  Productivity;  Quality;  Scrum;  Software engineering;  Time-to-market},
keywords={Image quality;  Measurements;  Productivity, Agile approaches;  Development teams;  IT-metrics;  Performance measurements;  Scrum;  Software project;  Software release;  Time-to-market, Software engineering},
}

@ARTICLE{Schweigert2013154,
author={Schweigert, T. and Vohwinkel, D. and Blaschke, M. and Ekssir-Monfared, M.},
title={TestSPICE and Agile Testing - Synergy or Confusion},
journal={Communications in Computer and Information Science},
year={2013},
volume={349 CCIS},
pages={154-164},
doi={10.1007/978-3-642-38833-0_14},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904629964&doi=10.1007%2f978-3-642-38833-0_14&partnerID=40&md5=f05ded5fb2d0c9d5e9bb60d0fcf43949},
abstract={The paper deals with the question how a capability oriented model like TestSPICE could contribute to the improvement of agile testing. We know from several studies, that agile methods like XP or SCRUM deliver good support for higher capability or maturity levels of SPICE as well as of CMMI. On the other hand the authors were did not find relevant studies that deal with the question how SPICE could help to mature agile practices. One of the reasons is that there is no common accepted agile maturity model (but up to 40 published approaches). In this case the training and the experience to the Assessment and process improvement (PI) team is a key success factor. A double certification as Assessor and CAT might be helpful. The paper is written from the perspective of a consultant wanting to help customers to improve and searching for options to give advice. © Springer-Verlag Berlin Heidelberg 2013.},
author_keywords={Agile Manifesto;  Agile Maturity;  CAT;  CMMI;  ECQA;  INTACS;  ISO 15504;  SPI;  SPI Manifesto;  SPICE;  TestSPICE},
keywords={Computer science;  Computers;  SPICE, Agile Manifesto;  Agile Maturity;  CAT;  CMMI;  ECQA;  INTACS;  ISO 15504;  SPI;  SPI Manifesto;  TestSPICE, Software engineering},
}

@CONFERENCE{Ashraf2012,
author={Ashraf, M.A. and Shamail, S. and Rana, Z.A.},
title={Agile model adaptation for e-learning students' final-year project},
journal={Proceedings of IEEE International Conference on Teaching, Assessment, and Learning for Engineering, TALE 2012},
year={2012},
pages={T1C18-T1C21},
doi={10.1109/TALE.2012.6360375},
art_number={6360375},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84871475558&doi=10.1109%2fTALE.2012.6360375&partnerID=40&md5=1122896e2b4ba87443bfd3909e4e61ff},
abstract={The final-year project (FYP) is considered as an essential part of a Computer Science degree. FYP plays a key role in preparing the students to meet the industrial expectations. In e-learning scenario lack of coordination among students and limited student-supervisor interaction often leads to poor quality projects and inadequate learning. To enhance students' skills and quality of the projects this paper suggests an Agile-Scrum model for the development phase of FYP. The effectiveness of the Agile-Scrum model on student project quality and e-learning has been compared with the in-practice Waterfall model at Virtual University of Pakistan (VU). The proposed model has increased students' involvement, coordination and student-supervisor interaction in FYP. © 2012 IEEE.},
author_keywords={Agile programming;  distance education;  distributed software development;  e-learning;  final-year student project;  senior project},
keywords={Agile programming;  Development phase;  Distributed software development;  E-learning scenario;  Model Adaptation;  Pakistan;  Senior projects;  Student project;  Virtual university;  Waterfall model, Distance education;  E-learning;  Engineering education;  Software engineering;  Supervisory personnel, Students},
}

@CONFERENCE{Polášek2012283,
author={Polášek, I. and Snopko, S. and Kapustík, I.},
title={Automatic identification of the anti-patterns using the rule-based approach},
journal={2012 IEEE 10th Jubilee International Symposium on Intelligent Systems and Informatics, SISY 2012},
year={2012},
pages={283-286},
doi={10.1109/SISY.2012.6339530},
art_number={6339530},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870669009&doi=10.1109%2fSISY.2012.6339530&partnerID=40&md5=c2ecb6365ac097421b34689fe990bf0f},
abstract={Adjustment and rebuilding of the source code is an integral part of the software engineering life cycle, mainly in modern Agile Modeling and eXtreme Programming. Fowler identified 22 bad smells that could be found in the refactoring process and this set is still growing for model flaws in the UML diagrams as well. This paper proposes a set of bad smells that may be found in software models and a way for creating facts and rules for finding them in the models. © 2012 IEEE.},
keywords={Agile modeling;  Anti-patterns;  Automatic identification;  EXtreme Programming;  Integral part;  Model flaws;  Refactorings;  Rule-based approach;  Software engineering life-cycle;  Software model;  Source codes;  UML diagrams, Automation;  Information science;  Odors;  Software engineering, Intelligent systems},
}

@ARTICLE{Homchuenchom201216,
author={Homchuenchom, D. and Piyabunditkul, C. and Lichter, H. and Anwar, T. and Methawachananont, A. and Krootkaew, C. and Krisanathamakul, T.},
title={SPIALS-II: A light-weight software process improvement self-assessment tool},
journal={International Journal of Digital Content Technology and its Applications},
year={2012},
volume={6},
number={21},
pages={16-26},
doi={10.4156/jdcta.vol6.issue21.3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870617385&doi=10.4156%2fjdcta.vol6.issue21.3&partnerID=40&md5=2cb49b1210d3bfd29b3ccd5f4d200351},
abstract={In this paper we propose a tool-based approach called CMMIbyScrum to improve CMMI-based processes with Agile technique such as Scrum. This model was designed to be especially useful for VSEs/SMEs. If VSEs/SMEs are aware of the current capability status of their software processes and have an improvement guideline based on their quality targets, they might be able to substantially improve their processes. To support organizations on their way to better processes, we present the design of a generic tool (SPIALS: Software Process Improvement Adaptive Learning System) applicable to measure up organizations' process capability status. VSEs/SMEs can use the tool to perform a self-assessment thus reducing the complex appraisal process. The measurement represents trend of practices which VSEs/SMEs should implement or avoid. The presented tool-based assessment strategy is based on Standard CMMI Appraisal Method for Process Improvement (SCAMPI), which is well recognized for CMMI standard appraisal. In this version, we propose an enhancement of questionnaire framework based on a light-weight for Software Process Improvement Self-Assessment Tool called QF-SPISAT to help practitioner in assessment process. Thus, the completion of user interface, gap and software process improvement (SPI) proposal report are presented.},
author_keywords={CMMI (capability maturity model integration);  Gap report;  Light-weight self-assessment;  QF-SPISAT (questionnaire framework based on a light-weight for software process improvement self-assessment tool);  SCAMPI (standard CMMI appraisal method for process improvement);  Scrum;  Software process improvement (SPI) proposal report;  Tool support},
keywords={Appraisal method;  Capability maturity model integration;  Gap report;  Scrum;  Self-assessment;  Software Process Improvement;  Software process improvements;  Tool support, Surveys;  User interfaces, Software design},
}

@ARTICLE{Piyabunditkul20121,
author={Piyabunditkul, C. and Lichter, H. and Anwar, T. and Methawachananont, A. and Krootkaew, C. and Krisanathamakul, T.},
title={Design and evaluation of a CMMI conformant light-weight project management approach},
journal={International Journal of Digital Content Technology and its Applications},
year={2012},
volume={6},
number={21},
pages={1-10},
doi={10.4156/jdcta.vol6.issue21.1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870586198&doi=10.4156%2fjdcta.vol6.issue21.1&partnerID=40&md5=6ca6a457e1690ce4139543645bc93c0d},
abstract={CMMI is one of the well-known and accepted maturity models that many software organizations have implemented for its quality processes which are expected to bring a good quality for their software products. However, traditional software process models become too heavy-weight to be deployed. The aim of this research is to design the Light-Weight Project Management (LWPM) approach to implement CMMI by mapping between CMMI goals and Agile-Scrum based on defined artifacts and to indicate the differences in applying LWPM and the traditional Waterfall model. Our approach focuses on the Project Management category which composes Project Planning (PP), Project Monitoring and Control (PMC) and Integrated Project Management (IPM). In order to compare both models we collected relevant data by using questionnaire and also the dedicated tool SPIALS (Software Process Improvement Adaptive Learning System).},
author_keywords={CMMI (capability maturity model integration);  CMMIbyScrum Framework (CMMISF);  Light-weight project management (LWPM);  Standard CMMI appraisal method for process improvement (SCAMPI);  Very small enterprises/small medium enterprises (VSEs/SMEs)},
keywords={Appraisal method;  Capability maturity model integration;  CMMIbyScrum Framework (CMMISF);  Light weight;  Small enterprise, Software engineering, Project management},
}

@CONFERENCE{Holifield2012,
author={Holifield, J. and Longenecker, B. and Feinstein, D.},
title={Developing enterprise information systems: Experiences of a graduate class},
journal={Proceedings of the Information Systems Education Conference, ISECON},
year={2012},
volume={29},
page_count={16},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870366802&partnerID=40&md5=c22c8b5ed8ebc7c3a61258d80657cff9},
abstract={Teaching students how to work as a part of a team and develop enterprise information systems is a worthy and challenging goal. We describe the type of problems we attempt to solve with these projects and the structure and type of teams we form to complete the projects. We describe some of the leadership issues and concepts we teach to student leaders and followers and describe how the project is managed though Lean software development techniques. We describe the standards and procedures we use to integrate the developed systems and the use of templates to guide system development and student efforts. © 2012 EDSIG.},
author_keywords={Enterprise information systems development;  Leadership;  Lean UX;  Project management;  Standards},
keywords={Enterprise information system;  Guide system;  Leadership;  Lean UX;  Software development techniques;  Student effort, Project management;  Standards;  Students, Information systems},
}

@CONFERENCE{Escobar-Sarmiento2012,
author={Escobar-Sarmiento, V. and Linares-Vásquez, M.},
title={A model for measuring agility in small and medium software development enterprises},
journal={38th Latin America Conference on Informatics, CLEI 2012 - Conference Proceedings},
year={2012},
doi={10.1109/CLEI.2012.6427226},
art_number={6427226},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874322625&doi=10.1109%2fCLEI.2012.6427226&partnerID=40&md5=bc80f0790393312d0a70cd1a36cfa228},
abstract={The worldwide acceptance of software as an important aspect in daily life, and the continued growth of the software development industry, have influenced the creation of new companies (small and medium size) during the last decade. The rapid pace with which the companies are founded makes them to experiment some drawbacks such as informality in the software development process, and technological deficiencies. Software development companies have found in agile methodologies a possible solution for improving their practices and processes. However, transition to agile methods is not a simple task, and the transition process should be assessed in order to know whether it is helping the company to become agile. Thus, in this paper we propose a model which could be used for measuring companies agility in four different levels: project, project management, workteam, and agile workspace coverage. Future work is related to using this model in small and medium development companies. © 2012 IEEE.},
author_keywords={Agility;  Assessment;  methodologies;  SMEs;  Software development},
keywords={Agile Methodologies;  Agile methods;  Agility;  Assessment;  Daily lives;  Medium size;  methodologies;  SMEs;  Software development process;  Transition process, Information science;  Project management;  Software design;  Software engineering, Industry},
}

@CONFERENCE{Romeike201248,
author={Romeike, R. and Göttel, T.},
title={Agile projects in high school computing education - Emphasizing a learners' perspective},
journal={ACM International Conference Proceeding Series},
year={2012},
pages={48-57},
doi={10.1145/2481449.2481461},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878432904&doi=10.1145%2f2481449.2481461&partnerID=40&md5=e6aed2496246addcec0589ef1a04f111},
abstract={Software projects are seen as a methodology for secondary computing education which is highly appropriate and meets the demands and goals of Computer Science (CS). Yet the majority of models and examples for project-based lessons rely on a traditional software development approach: the waterfall model. In this paper such models are analyzed for their strength, problems, and deficiencies. Based on the results of the analysis a new approach to projects in secondary computing education is presented which uses the concept of didactic transposition to adapt agile software development methods for project organization, management, and implementation in class. The resulting model applies valuable practices of Extreme Programming and Scrum and provides a set of tools that allow high school software projects to benefit from modern software development methods. By emphasizing dynamic processes and a clear course of action an attractive perspective on CS is promoted. Copyright © 2012 ACM.},
author_keywords={Agile methods;  Project-based learning;  Secondary computing education},
keywords={Agile methods;  Agile software development;  Computing education;  EXtreme Programming;  Project based learning;  Project organization;  Software development approach;  Software development methods, Education;  Software design, Education computing},
}

@ARTICLE{Fan20122671,
author={Fan, Y. and Teng, D. and Ma, C. and Yang, H. and Dai, G. and Wang, H.},
title={A model driven development method for pen-based form interface software},
journal={Jisuanji Yanjiu yu Fazhan/Computer Research and Development},
year={2012},
volume={49},
number={12},
pages={2671-2685},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872160314&partnerID=40&md5=34a448e3f010219b7a38150bd17fa990},
abstract={Most of the existing pen-based form applications are developed by traditional software development methods. Whether they are structured development method, rapid prototyping or extreme programming, in essence, they emphasize on the documents generated in each development phase. The documents are independent each other, so they tend to provide the software with the user needs inconsistent with the system implementation model. The methods also need a long life cycle and high cost, and it is difficult for them to adapt to requirement changes. Furthermore, the pen-based interface software with the characteristics of intelligence and ambiguity is very sophisticated. To address the problems above, a model driven development method for pen-based form interface software is presented. Firstly, a pen-based form user interface model is proposed. Secondly, the development framework for pen-based interface software is presented, and its development model is described, with the structures of the models and their relationship introduced in details. Finally, the modeling methods and the automatic generation methods of system for pen-based interface software are brought forward based on the framework. An example is described and evaluated by experiments. The results demonstrate that the method can help end users develop the pen-based form interface software.},
author_keywords={Development method;  Electronic form;  Form user interface;  Model driven;  Model driven architecture (MDA);  Pen-based interaction},
keywords={Development method;  Electronic forms;  Model driven architectures;  Model-driven;  Pen-based interaction, Human computer interaction;  Rapid prototyping;  Software design;  User interfaces, Software architecture},
}

@CONFERENCE{Lárusdóttir201242,
author={Lárusdóttir, M.K. and Cajander, Å. and Gulliksen, J.},
title={The big picture of UX is missing in scrum projects},
journal={CEUR Workshop Proceedings},
year={2012},
volume={922},
pages={42-48},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875319251&partnerID=40&md5=172a81b386732de418e72c291942ebae},
abstract={The Scrum development process has gained increasing popularity during the last decade. At the same time user experience (UX) has emerged as an important quality feature. However, the integration of UX related activities into Scrum projects has not been without problems, and this area needs to be further examined. This paper describes the results from two in depth interviews with knowledgeable UX specialists working in Scrum projects in the prodauct development industry. It describes their ways of working generally with UX, their experiences from UX evaluations and the challenges encountered from their UX work. The main concern when working with UX in Scrum projects is that the big picture of UX is often lacking. Finally, the paper discusses the differences and similarities between the experiences from the UX specialists.},
author_keywords={Agile software development;  Scrum;  Usability;  User experience;  User experience evaluation},
keywords={Agile software development;  Scrum;  Usability;  User experience;  User experience evaluations, Human computer interaction, Software design},
}

@ARTICLE{Colomo-Palacios2012801,
author={Colomo-Palacios, R. and González-Carrasco, I. and López-Cuadrado, J.L. and García-Crespo, A.},
title={Resyster: A hybrid recommender system for scrum team roles based on fuzzy and rough sets},
journal={International Journal of Applied Mathematics and Computer Science},
year={2012},
volume={22},
number={4},
pages={801-816},
doi={10.2478/v10006-012-0059-9},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876539110&doi=10.2478%2fv10006-012-0059-9&partnerID=40&md5=b2fae485cf501082b425bde54daafe25},
abstract={Agile development is a crucial issue within software engineering because one of the goals of any project leader is to increase the speed and flexibility in the development of new commercial products. In this sense, project managers must find the best resource configuration for each of the work packages necessary for the management of software development processes in order to keep the team motivated and committed to the project and to improve productivity and quality. This paper presents ReSySTER, a hybrid recommender system based on fuzzy logic, rough set theory and semantic technologies, aimed at helping project leaders to manage software development projects. The proposed system provides a powerful tool for project managers supporting the development process in Scrum environments and helping to form the most suitable team for different work packages. The system has been evaluated in a real scenario of development with the Scrum framework obtaining promising results.},
author_keywords={Fuzzy set;  Recommender system;  Rough set;  Scrum;  Work package},
keywords={Development process;  Hybrid recommender systems;  Resource configurations;  Scrum;  Semantic technologies;  Software development process;  Software development projects;  Work packages, Fuzzy logic;  Fuzzy sets;  Management;  Managers;  Rough set theory;  Semantics;  Software engineering, Recommender systems},
}

@ARTICLE{Pow-Sang2012458,
author={Pow-Sang, J.A. and Imbert, R.},
title={Effort estimation in incremental software development projects using function points},
journal={Communications in Computer and Information Science},
year={2012},
volume={340 CCIS},
pages={458-465},
doi={10.1007/978-3-642-35267-6_61},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869852391&doi=10.1007%2f978-3-642-35267-6_61&partnerID=40&md5=88deb3a62be991f58a62f0abe5ab4557},
abstract={Nowadays, software development methodologies, such as Rational Unified Process or agile methodologies, recommend developing software by increments instead of following a waterfall lifecycle model. Although Function Points is one of the most known techniques to estimate effort and cost in software projects, there is little work that indicates how to adapt it in non-waterfall lifecycles, such as incremental ones. This paper presents an approach called Incremental-FP that allows estimating effort for each increment using unadjusted function points (UFP) and COCOMO's effort adjustment factor (EAF). This approach could be complemented with the Use Case Precedence Diagram to determine use case prioritization, and the rules proposed in a previous work to count UFP with UML class diagrams. We also present the results by applying our approach in projects with undergraduate students. We obtained good results, because the difference between estimated effort and real effort was lower than 20% for the second increment. Moreover, the results obtained with Incremental-FP were better than the ones obtained with adjusted function points. © 2012 Springer-Verlag.},
author_keywords={cocomo;  function points;  incremental software development;  object oriented},
keywords={Adjustment factors;  Agile Methodologies;  cocomo;  Effort Estimation;  Function point;  Incremental software development;  Life cycle model;  Object oriented;  Precedence diagrams;  Prioritization;  Rational Unified Process;  Software development methodologies;  Software project;  UML class diagrams;  Undergraduate students, Computer applications;  Students, Software design},
}

@CONFERENCE{Losada2012,
author={Losada, B. and Urretavizcaya, M. and López-Gil, J.-M. and Fernández-Castro, I.},
title={Combining InterMod agile methodology with usability engineering in a mobile application development},
journal={ACM International Conference Proceeding Series},
year={2012},
doi={10.1145/2379636.2379674},
art_number={39},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869060483&doi=10.1145%2f2379636.2379674&partnerID=40&md5=b6f336556ecad75da5948a5b595ba08e},
abstract={This paper focuses on applying usability engineering in the agile methodology called InterMod. The aim of InterMod is to help with the accurate development of high-quality interactive software. This is realized by means of software engineering model-driven activities and continuous assessment in which some usability evaluation techniques have been suitably integrated. The approach here presented has been used in the development process of a mobile application. So, we have proved it is possible to appropriately integrate usability evaluation techniques in agile methodologies, such as InterMod. Furthermore, improvements have been produced since early steps of the development process. On the one hand this integration promotes a development tailored to users' expectations; on the other hand it helps to plan the agile process of activities. Copyright 2012 ACM.},
author_keywords={Agile development methodologies;  Software development;  Usability engineering},
keywords={Agile development methodologies;  Agile Methodologies;  Agile process;  Continuous assessment;  Development process;  High quality;  Interactive software;  Mobile application development;  Mobile applications;  Model-driven;  Usability evaluation technique, Mobile computing;  Usability engineering, Software engineering},
}

@CONFERENCE{Fernandes2012103,
author={Fernandes, C.},
title={There and back again: From iterative to flow... and back to iterative!},
journal={Proceedings - 2012 Agile Conference, Agile 2012},
year={2012},
pages={103-110},
doi={10.1109/Agile.2012.34},
art_number={6298099},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868294729&doi=10.1109%2fAgile.2012.34&partnerID=40&md5=37f3eec9d43272f153f0a1aec320ddf6},
abstract={Agile processes have been developed and used for a long time now as a guideline for teams to follow when they start a project - Scrum, eXtreme Programming, Kanban are well known examples. However, as the project evolves, it is natural that, as a response to its peculiarities, the process itself is tailored to satisfy that team's needs. This experience report tells the story of a team that chose to start the project with Scrum, and then gradually and with continuous improvement in mind, deconstructed the process in order to better fit it's context. Then as context changed, some of the decisions were undone, but our experience shows both decisions, removing a practice and bringing it back afterwards, brought benefits to the process given the circumstances that surrounded them. © 2012 IEEE.},
author_keywords={agile;  contextual practices;  continuous improvement;  development;  iterative process;  retrospective;  team},
keywords={agile;  contextual practices;  Continuous improvements;  development;  Iterative process;  retrospective;  team},
}

@CONFERENCE{Akbar2012914,
author={Akbar, R. and Hassan, M.F. and Abdullah, A.},
title={A framework of software process tailoring for small and medium size IT companies},
journal={2012 International Conference on Computer and Information Science, ICCIS 2012 - A Conference of World Engineering, Science and Technology Congress, ESTCON 2012 - Conference Proceedings},
year={2012},
volume={2},
pages={914-918},
doi={10.1109/ICCISci.2012.6297156},
art_number={6297156},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867860755&doi=10.1109%2fICCISci.2012.6297156&partnerID=40&md5=7fa4322d81bc6413d97eb0927302a621},
abstract={Global software development has brought a number of revolutionary changes in the existing software development practices. Project outsourcing and agile based methodologies have emerged as the new generation of processes and practices. As a result of project outsourcing, small and medium sized software development companies have increased in large number. Due to the limitations of resources these companies are unable to follow traditional heavyweight software engineering approaches and thus follow lightweight agile methodologies. Creating a new process from the scratch in also not possible for them and they prefer to adapt a software process according to their own requirements. The existing works on software process tailoring are very general and superficial and do not provide guidelines to small and medium sized software development companies. This research addresses this issue and presents a process tailoring framework which is based on the critical elements of agile methodologies. Both case study of real projects and survey questionnaires have been used to validate the framework. The initial results show that the framework completely identifies the important elements of projects in small and medium sized companies and derives the schema of process tailoring. The outcome of the research is the lightweight process tailoring framework which generates a process tailoring schema for small and medium sized (SMEs) software development companies. © 2012 IEEE.},
author_keywords={Framework;  Meta-model;  Process;  Tailoring},
keywords={Agile Methodologies;  Critical elements;  Framework;  Global software development;  IT companies;  Medium size;  Medium-sized companies;  Meta model;  Process;  Process tailoring;  Revolutionary changes;  Software development practices;  Software process;  Software process tailoring;  Tailoring, Industry;  Information science;  Outsourcing;  Research;  Surveys;  Technology, Software design},
}

@CONFERENCE{Hofman2012229,
author={Hofman, P. and Stenzel, T. and Pohley, T. and Kircher, M. and Bermann, A.},
title={Domain specific feature modeling for software product lines},
journal={ACM International Conference Proceeding Series},
year={2012},
volume={1},
pages={229-238},
doi={10.1145/2362536.2362568},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867461929&doi=10.1145%2f2362536.2362568&partnerID=40&md5=c2927fef339fb38de1e8ba5c41cc9198},
abstract={This paper summarizes our experience with introducing feature modeling into a product line for imaging and therapy systems in the Siemens Healthcare Sector. Determining and negotiating the scope in a product line that spans several business units with their own economic goals is challenging. Feature modeling offers a good way to do variability/commonality analysis for complex product lines. A precondition for feature modeling is the identification of all features supporting the product line. To identify these features, we developed a method for systematically deriving a feature model top down based on domain know-how. We call this method domain specific feature modeling. As the primary artifact to describe the problem space, a domain specific feature model additionally improves the requirement understanding for all stakeholders by considerably improving the scoping, traceability, testing, efficiency and transparency of planning activities and making the development efforts easier to estimate. In this paper, we share our experience with domain specific feature modeling in a large platform project and describe the lessons learned. We describe our general approach that can also be used for other domains. Copyright © 2012 ACM.},
author_keywords={Agile;  Commonality analysis;  Domain specific feature model;  Feature dependency diagram;  Feature modeling;  Product line;  Scrum;  Variability analysis},
keywords={Agile;  Commonality analysis;  Feature dependency diagrams;  Feature modeling;  Feature models;  Product-lines;  Scrum;  Variability analysis, Health care;  Network architecture;  Technology transfer, Software design},
}

@ARTICLE{Danenas2012187,
author={Danenas, P. and Garsva, G.},
title={Domain driven development and feature driven development for development of decision support systems},
journal={Communications in Computer and Information Science},
year={2012},
volume={319 CCIS},
pages={187-198},
doi={10.1007/978-3-642-33308-8_16},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866659072&doi=10.1007%2f978-3-642-33308-8_16&partnerID=40&md5=d9dd532b7a1c0b13449268c5dfced29e},
abstract={This paper describes adoption of Domain Driven Design and Feature Driven Development paradigms for decision support systems, using credit risk evaluation DSS as a case study. Possible development scenarios using both of these methodologies are discussed, using transformations from previously described development framework. It is concluded that these techniques might be adopted for development of complex DSS. © 2012 Springer-Verlag.},
author_keywords={credit risk;  decision support system;  Domain Driven Design;  Domain Driven Development;  Feature Driven Development},
keywords={Credit risk evaluation;  Credit risks;  Development scenarios;  Domain Driven Development;  Feature Driven Development, Decision support systems;  Risk assessment, Artificial intelligence},
}

@ARTICLE{Lin20121364,
author={Lin, L. and Yang, W. and Lin, J.},
title={A layer-based method for rapid software development},
journal={Computers and Mathematics with Applications},
year={2012},
volume={64},
number={5},
pages={1364-1375},
doi={10.1016/j.camwa.2012.03.082},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865675152&doi=10.1016%2fj.camwa.2012.03.082&partnerID=40&md5=738878b86ccae29543cbc404d3011dca},
abstract={A layer-based method for rapid software development is presented in this paper. It follows the guidelines suggested by Extreme Programming (XP) that require highly expressive programming languages (i.e., Java) and CASE tools. As in XP, this method addresses rapid software development for small- or medium-sized projects. Further, for effective guidance on the development, it directs the construction of system components by imposing an architecture-based concept of layered specification and construction of these components through its activities. Since the method follows the guidelines suggested by XP and supports effective guidance by a layered development of architectural components, team productivities can be greatly enhanced with less (but effective) overheads on specification work. The method uses UML and Petri nets as its modeling tool; for illustration, an example application is presented that specifies and directs the development of a software system with business-oriented Internet services. © 2011 Elsevier Ltd. All rights reserved.},
author_keywords={Development method;  Layer-based;  Petri nets;  Software system;  UML},
keywords={Architectural components;  Development method;  EXtreme Programming;  Internet services;  Layer-based;  Modeling tool;  Software systems;  System components;  UML, Computer software;  Java programming language;  Petri nets;  Specifications, Software design},
}

@ARTICLE{Mahanti20121253,
author={Mahanti, R. and Neogi, M.S. and Bhattacherjee, V.},
title={Factors affecting the choice of software life cycle models in the software industry-An empirical study},
journal={Journal of Computer Science},
year={2012},
volume={8},
number={8},
pages={1253-1262},
doi={10.3844/jcssp.2012.1253.1262},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864972568&doi=10.3844%2fjcssp.2012.1253.1262&partnerID=40&md5=cc947a0d83b8b55f5c5994c4f7ed77e4},
abstract={Problem statement: The aim of this study was to present the results of the survey conducted with software professionals in a few Indian software companies. Approach: The study initially presents an overview of the common software life cycle models used in the software development. Results and Conclusion: The survey results revealed that the level of understanding of the user requirements is the most important fact in the choice of the life cycle model used in the software project. Project Complexity is the second most important factor. Man-machine Interaction is the least important factor in the choice of the life cycle model used in the software project. This study will be valuable for developers, analysts and project leaders in software organizations. This study was carried out with some boundaries like the number of companies, available resources, time constraints and so on. © 2012 Science Publications.},
author_keywords={Agile methodologies;  Cycle process;  Employee strength;  Important factor;  Incremental model;  Software development;  Software life cycle models;  Software project},
}

@ARTICLE{Hswe2012,
author={Hswe, P. and Giarlo, M.J. and Belden, M. and Clair, K. and Coughlin, D. and Klimczyk, L.},
title={Building a community of curatorial practice at penn state: A case study},
journal={Journal of Digital Information},
year={2012},
volume={13},
number={1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864658753&partnerID=40&md5=91a933d5a5e784d72e94519d73b35f44},
abstract={The Penn State University Libraries and Information Technology Services (ITS) collaborated on the development of Curation Architecture Prototype Services (CAPS), a web application for ingest and management of digital objects. CAPS was built atop a prototype service platform providing atomistic curation functions in order to address the current and emerging requirements in the Libraries and ITS for digital curation, defined as "... active management and appraisal of data over the entire life cycle" (Pennock, 2006)[7]. Key goals for the CAPS project were application of an agile methodology to the development process and an assessment of the resulting tool and stakeholders' experience in the project. This article focuses in particular on the community-building aspects of CAPS, which emerged from a combination of agile-style approaches and the development team's commitment to engaging stakeholders actively throughout the process, from the construction of use cases, to decisions on metadata standards, to ingest and management functionalities of the tool. The ensuing community of curatorial practice effectively set the stage for the next iteration of CAPS: planning and executing the development of a production-ready, enterprise-quality infrastructure to support publishing and curation services at Penn State.},
}

@ARTICLE{Qureshi2012358,
author={Qureshi, M.R.J.},
title={Agile software development methodology for medium and large projects},
journal={IET Software},
year={2012},
volume={6},
number={4},
pages={358-363},
doi={10.1049/iet-sen.2011.0110},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866881999&doi=10.1049%2fiet-sen.2011.0110&partnerID=40&md5=751107333ace62c592c19c1017067401},
abstract={Extreme programming (XP) is one of the most widely used agile methodologies for software development. It intends to improve software quality and responsiveness to changing customer requirements. Despite the facts that the use of XP offers a number of benefits and it has been a widely used agile methodology, XP does not offer the same benefits when it comes to medium and large software projects. Some of the reasons for this are weak documentation, lack of strong architecture and ignorance to risk awareness during the software development. Owing to the ever-increasing demand of agile approaches, this study addresses the problem of XP's ability to handle medium and large projects. Most of the companies that employ XP as a development methodology for medium and large projects face this problem, which echoes the importance of this problem. To address this problem, in this study XP model is extended in such a way that it equally offers its benefits for medium- and large-scale projects. As an evaluation of the extended XP, three independent industrial case studies are conducted. The case studies are described and results are presented in the study. The results provide evidence that the extended XP can be beneficial for medium and large software development projects. © 2012 The Institution of Engineering and Technology.},
keywords={Agile approaches;  Agile Methodologies;  Agile software development;  Customer requirements;  Development methodology;  EXtreme Programming;  Industrial case study;  Large project;  Large-scale projects;  Software development projects;  Software project;  Software Quality, Computer software selection and evaluation;  Risk perception, Software design},
}

@CONFERENCE{Nikitina2012140,
author={Nikitina, N. and Kajko-Mattsson, M. and Stråle, M.},
title={From scrum to scrumban: A case study of a process transition},
journal={2012 International Conference on Software and System Process, ICSSP 2012 - Proceedings},
year={2012},
pages={140-149},
doi={10.1109/ICSSP.2012.6225959},
art_number={6225959},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864344008&doi=10.1109%2fICSSP.2012.6225959&partnerID=40&md5=0db5f8d836794879470a91089966ec80},
abstract={Transitioning from one development method to another has become a common routine for many companies. Despite this, very few reports describe how the process transition has been carried out, and provide suggestions for how to define a process transition model. This paper reports on a process transition from Scrum to Scrumban in one software development company. The paper gives an account on the process transition process, changes done to the development process undergoing the transition and the improvements achieved. It rounds up with lessons learned. © 2012 IEEE.},
author_keywords={Kanban;  method adoption;  Process improvement;  process introduction},
keywords={Development method;  Development process;  Kanban;  method adoption;  Process Improvement;  process introduction;  Transition model;  Transition process, Industry},
}

@ARTICLE{ShakeriHosseinAbad2012141,
author={Shakeri Hossein Abad, Z. and Alipour, A. and Ramsin, R.},
title={Enhancing tool support for situational engineering of agile methodologies in eclipse},
journal={Studies in Computational Intelligence},
year={2012},
volume={430},
pages={141-152},
doi={10.1007/978-3-642-30460-6_10},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863000338&doi=10.1007%2f978-3-642-30460-6_10&partnerID=40&md5=b2743f3c464f4f3a4bac9401c6282695},
abstract={In recent years, with the growth of software engineering, agile software development methodologies have also grown substantially, replacing plan-driven approaches in many areas. Although prominent agile methodologies are in wide use today, there is no method which is suitable for all situations. It has therefore become essential to apply Situational Method Engineering (SME) approaches to produce agile methodologies that are tailored to fit specific software development situations. Since SME is a complex process, and there is a vast pool of techniques, practices, activities, and processes available for composing agile methodologies, tool support-in the form of Computer Aided Method Engineering (CAME) environments-has become essential. Despite the importance of tool support for developing agile methodologies, available CAME environments do not fully support all the steps of method construction, and the need remains for a comprehensive environment. The Eclipse Process Framework Composer (EPFC) is an open-source situational method engineering tool platform, which provides an extensible platform for assembly-based method engineering in Eclipse. EPFC is fully extensible through provision of facilities for adding new method plug-ins, method packages, and libraries. The authors propose a plug-in for EPFC which enables method engineers to construct agile methodologies through an assembly-based SME approach. The plug-in provides facilities for the specification of the characteristics of a given project, selection of suitable agile process components from the method repository, and the final assembly of the selected method chunks, while providing a set of guidelines throughout the assembly process. © 2012 Springer-Verlag Berlin Heidelberg.},
author_keywords={Agile methodology;  Computer-Aided Method Engineering;  Eclipse Process Framework Composer;  Situational Method Engineering},
}

@ARTICLE{McHugh2012141,
author={McHugh, M. and McCaffery, F. and Casey, V.},
title={Barriers to adopting agile practices when developing medical device software},
journal={Communications in Computer and Information Science},
year={2012},
volume={290 CCIS},
pages={141-147},
doi={10.1007/978-3-642-30439-2_13},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862177878&doi=10.1007%2f978-3-642-30439-2_13&partnerID=40&md5=59389e75eeae8a5d7a40a21cc45292f6},
abstract={Agile methodologies such as XP and Scrum are founded upon the four values and twelve principles of agile software development. A software development project is only considered to be truly agile if these values and principles are followed. However, software developed for use in medical devices must be regulatory compliant and this can make the process of following a single agile methodology such as XP difficult to achieve. This paper outlines how we identified the barriers to agile adoption in the medical device software domain through performing a survey. These barriers include: lack of documentation; maintaining traceability; regulatory compliance; lack of up front planning and the process of managing multiple releases. Based on this research recommendations are also made as to how these barriers can be overcome. © 2012 Springer-Verlag.},
author_keywords={Agile;  Barriers;  Medical;  Plan Driven;  Safety Critical;  Scrum;  XP},
keywords={Agile;  Barriers;  Medical;  Plan Driven;  Safety-critical;  Scrum;  XP, Biomedical equipment;  Regulatory compliance, Software design},
}

@ARTICLE{Peldzius2012210,
author={Peldzius, S. and Ragaisis, S.},
title={Framework for usage of multiple software process models},
journal={Communications in Computer and Information Science},
year={2012},
volume={290 CCIS},
pages={210-221},
doi={10.1007/978-3-642-30439-2_19},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862162542&doi=10.1007%2f978-3-642-30439-2_19&partnerID=40&md5=981b28dfc34664e48c1e37c7bcd8e4bf},
abstract={The most popular Software Process Models worldwide are ISO/IEC 15504 and CMMI. It is desirable for organizations to have assessments according to both these models but every assessment is expensive both financially and time-wise, and furthermore new assessments are required when a new models version is released. In order to define and/or to improve their software process, organizations choose different Software Development Methodologies. It is important for the organization to know what capability/maturity of the process a chosen methodology could ensure. In order to solve these problems we propose Transitional Software Process Model (TSPM). It enables the transformation of results of an assessment according to one Process Model to other models and determines what capability/maturity according to different Process Models a chosen methodology could ensure. Also, TSPM ensures transition of the existing assessment results to a new version of the model without reassessment. The principles of TSPM implementation are given in this article. © 2012 Springer-Verlag.},
author_keywords={Agile methodologies;  CMMI;  ISO/IEC 15504;  models mapping;  transitional software process model},
keywords={Agile Methodologies;  CMMI;  ISO/IEC 15504;  New model;  Process model;  Software development methodologies;  Software process;  Software process models, Rating, Software design},
}

@CONFERENCE{Liu20122412,
author={Liu, L. and Lu, Y.},
title={Application of agile method in the enterprise website backstage management system: Practices for extreme programming},
journal={2012 2nd International Conference on Consumer Electronics, Communications and Networks, CECNet 2012 - Proceedings},
year={2012},
pages={2412-2415},
doi={10.1109/CECNet.2012.6201545},
art_number={6201545},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861852192&doi=10.1109%2fCECNet.2012.6201545&partnerID=40&md5=ed1b4650d38e7f5cc3bb9a17de68688f},
abstract={When the traditional method lacking in adapting requirement variety, some agile software development methods appears, which flexible development mechanism could control the risk that requirement variety brings. Taking Extreme Programming as an example, this paper introduces ideas, values and process practice rules of agile methods. Extreme Programming is a software development methodology that is agile and based on practice. This paper introduces the features of Extreme Programming and how to practice Extreme Programming in developing management information system, also discuss and study the advantages and disadvantages when applying Extreme Programming in small or middle sized projects with inconstant requirements. © 2012 IEEE.},
author_keywords={Agile Software Development;  Extreme Programming;  Website backstage Management System},
keywords={Agile methods;  Agile software development;  EXtreme Programming;  Flexible development;  Management systems;  Software development methodologies, Consumer electronics;  Knowledge management;  Management;  Software design, Websites},
}

@ARTICLE{Pillai2012107,
author={Pillai, A.K.R. and Pundir, A.K. and Ganapathy, L.},
title={Implementing Integrated lean six sigma for software development: A flexibility framework for managing the continuity: Change dichotomy},
journal={Global Journal of Flexible Systems Management},
year={2012},
volume={13},
number={2},
pages={107-116},
doi={10.1007/s40171-012-0009-2},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870014390&doi=10.1007%2fs40171-012-0009-2&partnerID=40&md5=8e47b18b7ba43210eaf0890e61efafe5},
abstract={Continuity and change are the twin characteristics of any software development process as it evolves from the traditional life cycle approach to incorporating and managing flexibility from an end-user perspective. Business requirements constantly change till the release of a software product though the features of continuity are evident in the software development process itself. The idea of Lean, as borrowed from the Lean manufacturing context, is an agile methodology for managing change while the Six Sigma approach emphasizes continuous improvement as part of a defect reduction strategy. We propose a software development approach that holds together the aspects of both continuity and change under a flexible management system and illustrate the application of the continuity, change framework using an integrated Lean Six Sigma for software development in a practical context. The present research reflects the Lean Six Sigma application and implementation in the software industry, using the commonly used statistical and non-statistical tools, software engineering tools and other frameworks used within software business. We also examine some of the critical success factors (CSFs) for a successful Six Sigma initiative in the software/IT industry. The research brings out that Lean Six Sigma, when used for achieving operational excellence, can, as it turns out, do more than simply improve processes. The paper also brings out how Lean Six Sigma helps discovering innovation opportunities far beyond operations, and enhances financial performance. This paper focuses on integrated lean six sigma programs in practice, rather than dwell on the theoretical basis or a motivationally based argument. It is hoped that the adoption of methodologies outlined in this paper would enable software companies to attain improvements in terms of cost, schedule and quality. © Global Institute of Flexible Systems Management 2012.},
author_keywords={Change •;  Continuity •;  Flexibility function point analysis •;  Lean six sigma •;  Software development},
}

@CONFERENCE{Farid2012,
author={Farid, W.M. and Mitropoulos, F.J.},
title={Novel lightweight engineering artifacts for modeling non-functional requirements in agile processes},
journal={Conference Proceedings - IEEE SOUTHEASTCON},
year={2012},
doi={10.1109/SECon.2012.6196988},
art_number={6196988},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861521541&doi=10.1109%2fSECon.2012.6196988&partnerID=40&md5=a94b1fb6b1a2776b842f83e06eccdeea},
abstract={Agile software development methodologies, such as Scrum, have gained tremendous popularity and proven successful in quickly delivering quality Functional Requirements (FRs). However, agile methodologies have not adequately modeled Non-Functional Requirements (NFRs) and their potential solutions (operationalizations) with FRs in early development phases. This research proposes three fundamental agile artifacts to model FRs, NFRs, and their potential solutions in a visual environment. First, FRs are modeled through Agile Use Cases (AUCs). Second, NFRs are modeled through Agile Loose Cases (ALCs). Third, NFRs potential solutions are modeled through Agile Choose Cases (ACCs). AUCs are newly proposed hybrid of use cases and agile user stories. ALCs are proposed loosely-defined agile NFRs. ACCs are proposed potential solutions (operationalizations) for ALCs. The three artifacts are combined in a visual framework to promote agile modeling of NFRs (primarily) and how they are linked to FRs. The artifacts are the building blocks of a more comprehensive framework for modeling NFRs in agile software development processes. © 2012 IEEE.},
author_keywords={Agile Choose Case;  Agile Loose Case;  Agile Requirements Modeling;  Agile Use Case;  NFRs;  NORMAP Methodology;  Scrum},
keywords={Agile Methodologies;  Agile modeling;  Agile process;  Agile software development;  Agile software development process;  Building blockes;  Development phasis;  Functional requirement;  Light-weight engineering;  NFRs;  Non-functional requirements;  NORMAP Methodology;  Potential solutions;  Requirements modeling;  Scrum;  User stories;  Visual environments, Software engineering},
}

@CONFERENCE{Farid2012,
author={Farid, W.M. and Mitropoulos, F.J.},
title={NORMATIC: A visual tool for modeling non-functional requirements in agile processes},
journal={Conference Proceedings - IEEE SOUTHEASTCON},
year={2012},
doi={10.1109/SECon.2012.6196989},
art_number={6196989},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861507920&doi=10.1109%2fSECon.2012.6196989&partnerID=40&md5=f13710ab9fe04d98268c5ea17dba7903},
abstract={There is consensus in the research community that agile software development methodologies, such as Scrum, are becoming more and more popular in delivering quality Functional Requirements (FRs). However, agile methodologies have not adequately modeled Non-Functional Requirements (NFRs) and their potential solutions (operationalizations) with FRs in early development phases-let alone having tools to support such initiatives. This research proposes NORMATIC, a Java-based simulation tool for modeling non-functional requirements for semi-automatic agile processes. NORMATIC is the semi-automatic tool that supports the more general Non-Functional Requirements Modeling for Agile Processes (NORMAP) Methodology. Early results show that the tool can potentially help agile software development teams in reasoning about and visually modeling NFRs as first-class artifacts early on during requirements gathering and analysis phases. The tool can also aid project managers and Scrum teams in user story estimate and risk calculations as well as risk-driven planning and visualization of the proposed plans. © 2012 IEEE.},
author_keywords={Agile Choose Case;  Agile Loose Case;  Agile Requirements Modeling;  Agile Use Case;  NFRs;  NORMAP Methodology;  NORMATIC;  Scrum},
keywords={NFRs;  NORMAP Methodology;  NORMATIC;  Requirements modeling;  Scrum, Project management;  Software design;  Visualization, Risk perception},
}

@CONFERENCE{Zhang2012554,
author={Zhang, L. and Shao, D.},
title={Research on combining scrum with CMMI in small and medium organizations},
journal={Proceedings - 2012 International Conference on Computer Science and Electronics Engineering, ICCSEE 2012},
year={2012},
volume={1},
pages={554-557},
doi={10.1109/ICCSEE.2012.477},
art_number={6187907},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861037288&doi=10.1109%2fICCSEE.2012.477&partnerID=40&md5=3095d6b50205ce76fb7fc27fb79e09df},
abstract={Agile method Scrum can effectively resolve numerous problems encountered when Capability Maturity Model Integration(CMMI) is implemented in small and medium software development organizations, but some special needs are hard to be satisfied. According to small and medium organizations' characteristic, the paper analyzes feasibility of combining Scrum and CMMI in depth. It is useful for organizations that build a new project management framework based on both CMMI and Scrum practices. © 2012 IEEE.},
author_keywords={Capability Maturity Model Integration (CMMI);  Scrum;  Small and Medium Organizations;  Software Process Improvement},
keywords={Agile methods;  Capability maturity model integration;  Management frameworks;  New projects;  Scrum;  Software development organizations;  Software Process Improvement, Computer science;  Electronics engineering;  Project management;  Software design, Societies and institutions},
}

@ARTICLE{Choudhari20121103,
author={Choudhari, J. and Suman, U.},
title={Designing RC story for software maintenance and evolution},
journal={Journal of Software},
year={2012},
volume={7},
number={5},
pages={1103-1108},
doi={10.4304/jsw.7.5.1103-1108},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860388110&doi=10.4304%2fjsw.7.5.1103-1108&partnerID=40&md5=24f86a7ae57aaf9d04b0f266a48096d6},
abstract={Most of the software maintenance processes are mainly based on traditional software development process, which uses traditional Software Change Request (SCR) form as a requirement artifact. In this paper, we have designed a requirement artifact Request for Change (RC) story for software maintenance, which is based on extreme programming and proposed RC story format validating using case study of college portal. In order to find the impact of RC story on software maintenance, we have applied RC story on iterative maintenance life cycle using extreme programming. RC story in software maintenance process can help to resolve the problems of poor visibility of the project and lack of communication in maintenance process. © 2012 Academy Publisher.},
author_keywords={Maintainability;  Maintenance process;  Reengineering;  Software engineering process},
keywords={EXtreme Programming;  Maintenance process;  Poor visibility;  Software change;  Software development process;  Software engineering process;  Software maintenance and evolution;  Software maintenance process, Maintainability;  Reengineering;  Software engineering, Computer software maintenance},
}

@ARTICLE{Lin2012,
author={Lin, C. and Lin, J. and Yang, W.},
title={An architecture-centered method for rapid software development},
journal={Applied Mathematics and Information Sciences},
year={2012},
volume={6},
number={2 SUPPL.},
pages={479S-488S},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896693599&partnerID=40&md5=e13b11e0d768f4190de6afda97d6b96b},
abstract={An architecture-centered method for rapid software development is presented in this paper. It basically follows the guidelines suggested by extreme programming that require highly expressive programming languages (i.e., Java) and CASE tools. As in extreme programming, this method addresses on rapid software development for small-or medium-sized projects. Further, for effective guidance on the development, it directs the construction of system components by imposing an architecture-based concept of layered specification and construction of these components through its activities. Since the method follows the guidelines suggested by extreme programming and supports effective guidance by a layered development of architectural components, team productivities can be greatly enhanced by less (but effective) overhead on specification work. The method uses UML and Petri nets as its modeling tool; for illustration, an example application is presented that specifies and directs the development of a software system with business-oriented Internet services. © 2012 NSP Natural Sciences Publishing Cor.},
author_keywords={Architecture-centered;  Development method;  Petri nets;  Software system;  UML},
}

@CONFERENCE{Wallace20125,
author={Wallace, C. and Mohan, S. and Troy, D. and Hoffman, M.E.},
title={Scrum across the CS/SE curricula: A retrospective},
journal={SIGCSE'12 - Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
year={2012},
pages={5-6},
doi={10.1145/2157136.2157142},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84858953171&doi=10.1145%2f2157136.2157142&partnerID=40&md5=28255554172bb8f6f23b3768db2ef5a4},
abstract={Scrum is one of the many agile approaches to software development that have been widely adopted over the past decade. Agile processes allow developers to embrace under-defined problems in complex environments where change in requirements is inevitable. The key agile features of Scrum are a flexible, adaptive schedule; democratic, collaborative teams; and frequent, iterative project and process reviews [2]. While students may engage with Scrum in the context of software development, the characteristics that suit many software problems to an agile approach also describe the student learning environment: complexity (new and unfamiliar concepts), under-defined problem space (students don't know what they don't know), short timeframe with frequent meetings (terms and class meetings), and inevitable change (apply new knowledge). This makes Scrum not only a software development strategy but a general learning strategy. Scrum facilitates frequent and iterative practice with timely feedback, development of mastery, and self-direction [1]. In this panel, the participants will describe how their students learn and practice Scrum in a software development context, how they use it to manage student projects outside the software development context, and how Scrum provides opportunities to integrate communication skills into the Computer Science (CS) and Software Engineering (SE) curricula. As participants in the NSF-funded CPATH II project (NSF Grants 0939122 and 0939081) "Incorporating Communication Skills Throughout Computer Science and Software Engineering Curricula," each panelist has developed Scrum-based assignments that exercise the skills of reading, writing, speaking, and teaming. The participants will discuss the design of these assignments and their experiences with them to date. © 2012 Authors.},
author_keywords={communication skills;  curriculum;  scrum;  software development},
keywords={Agile approaches;  Agile process;  Collaborative teams;  Communication skills;  Complex environments;  General learning;  Problem space;  scrum;  Software engineering curricula;  Software problems;  Student learning;  Student project;  Timely feedback, Communication;  Computer science;  Curricula;  Software design;  Software engineering, Students},
}

@ARTICLE{Fancott201244,
author={Fancott, T. and Kamthan, P. and Shahmir, N.},
title={Implications of the social web environment for user story education},
journal={Electronic Journal of e-Learning},
year={2012},
volume={10},
number={1},
pages={44-59},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84859938017&partnerID=40&md5=bc06be95191990ff2eeef1bdcac6b779},
abstract={In recent years, user stories have emerged in academia, as well as industry, as a notable approach for expressing user requirements of interactive software systems that are developed using agile methodologies. There are social aspects inherent to software development, in general, and user stories, in particular. This paper presents directions and means for incorporating the Social Web environment in user story education. In doing so, it proposes a methodology, SW4USE, for such integration. SW4USE consists of a user story process model, USPM, and Social Web technologies/applications that can contribute to the execution of the steps of USPM. A collection of scenarios of use, for both teachers in their classroom lectures and students in their team-based course projects, are presented, and potential learning outcomes are given. The ephemeral and essential challenges in the realization of SW4USE, particularly those related to quality, are highlighted. © Academic Publishing International Ltd.},
author_keywords={Agile methodology;  Collaboration;  Dissemination;  Process model;  User requirement;  Web 2.0},
}

@ARTICLE{Hajjdiab2012237,
author={Hajjdiab, H. and Taleb, A.S. and Ali, J.},
title={An industrial case study for Scrum adoption},
journal={Journal of Software},
year={2012},
volume={7},
number={1},
pages={237-242},
doi={10.4304/jsw.7.1.237-242},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856586556&doi=10.4304%2fjsw.7.1.237-242&partnerID=40&md5=886699d01dd045c1ba1f51e03a7f0a66},
abstract={Agile software development methods and techniques have been demonstrated to improve employee morale, enhance end-product quality, and achieve customer satisfaction. Agile adoption always comes with special challenges and thus fundamental organizational changes are necessary for successful outcome. In this paper we present an in-depth case study for adopting Scrum in a multi-team and multi-project situation to a government entity in the United Arab Emirates (U.A.E). While there are many successful stories for adopting Scrum in large and small organizations, there is little known about adoption stories in a multi-project/multi-team environments. In this paper we present a case study for an unsuccessful adoption of Scrum in a government entity in the U.A.E. The government entity under study have used the traditional waterfall approach for many years and decided to move to Agile software development method. This study highlights the challenges faced during the adoption of Scrum method with recommendations to address them. Each organization has its unique properties and one case study is not enough to draw conclusions for the U.A.E environment. However, the results obtained from this paper help software engineers to better understand the development environment and context factors for software projects in the U.A.E and many lessons may be learned for future Agile adoption. © 2012 ACADEMY PUBLISHER.},
author_keywords={Agile software development;  Case study;;  Scrum;  Software Engineering},
keywords={Agile software development;  Development environment;  Employee morale;  End-products;  Government entities;  Industrial case study;  Organizational change;  Scrum;  Small organizations;  Software engineers;  Software project;  United Arab Emirates, Customer satisfaction;  Industrial applications;  Job satisfaction;  Research, Software engineering},
}

@ARTICLE{Jalalinasab201257,
author={Jalalinasab, D. and Ramsin, R.},
title={Towards model-based testing patterns for enhancing agile methodologies},
journal={Frontiers in Artificial Intelligence and Applications},
year={2012},
volume={246},
pages={57-72},
doi={10.3233/978-1-61499-125-0-57},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873160577&doi=10.3233%2f978-1-61499-125-0-57&partnerID=40&md5=eebb693e1af2f3cf83a5a6852768d903},
abstract={Quality is one of the most important issues in the context of agile and lightweight methodologies. These methodologies recommend automated testing as the main method for quality assurance; however, they are plagued with several deficiencies in this regard, including complex and difficult-to-maintain test case scripts. Model-based testing is an approach for automating the test creation process through replacing individual test-case design with abstract models. In this paper, we explore a set of patterns based on current methods used in model-based testing which can be used to ameliorate the abovementioned deficiencies in agile/lightweight methodologies. We then demonstrate how these patterns can be applied to a concrete agile methodology-namely Feature Driven Development-to address problematic testing issues while maintaining the agility of the process. © 2012 The authors and IOS Press. All rights reserved.},
author_keywords={agile methodologies;  feature-driven development;  model-based testing;  Software testing},
keywords={Concrete testing;  Model checking;  Quality assurance, Abstract models;  Agile Methodologies;  Automated testing;  Creation process;  Feature driven development;  Model based testing;  On currents;  Test case designs, Software testing},
}

@CONFERENCE{Jordão2012130,
author={Jordão, E. and Furtado, F.},
title={Knowledge management to support the use of agile methodologies},
journal={Proceedings: DMS 2012 - 18th International Conference on Distributed Multimedia Systems},
year={2012},
pages={130-135},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923924114&partnerID=40&md5=745ec07fbadd8aea4f2c384f2d2bca08},
abstract={There are evidences that the flexibility brought by the agile manifesto has caused problems to the knowledge construction and dissemination. As the manifesto doesn't emphasize documentation and record of events and facts, knowledge storage and dissemination in general are not performed, making its use and recovery too hard. The use of processes and mechanisms of knowledge management (KM) are essential for an organization that aims to meet time-to-market and keep itself competitive in the market. This article presents evidence of how the KM can be used in a context of agile development. © 2012 by Knowledge Systems Institute Graduate School.},
author_keywords={Knowledge Management;  Scrum;  Software Development Process},
keywords={Commerce;  Multimedia systems;  Software design;  Software engineering, Agile development;  Agile Methodologies;  Knowledge construction;  Knowledge storage;  Scrum;  Software development process;  Time to market, Knowledge management},
}

@CONFERENCE{Farid2012322,
author={Farid, W.M.},
title={The Normap methodology: Lightweight engineering of non-functional requirements for agile processes},
journal={Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
year={2012},
volume={1},
pages={322-325},
doi={10.1109/APSEC.2012.23},
art_number={6462672},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874617141&doi=10.1109%2fAPSEC.2012.23&partnerID=40&md5=bd1a45b2b938a14b75493e17c14a7528},
abstract={Agile software development methodologies, such as Scrum, have become very popular in quickly delivering quality Functional Requirements (FRs). However, agile methodologies have not sufficiently identified, modeled, and linked Non-Functional Requirements (NFRs)-such as security and performance-with FRs in early requirements phases. This research presents a lightweight engineering of NFRs for agile processes. The proposed Non-functional Requirements Modeling for Agile Processes (NORMAP) Methodology identifies, links, and models Agile Loose Cases (ALCs) with Agile Use Cases (AUCs) and Agile Choose Cases (ACCs). A lightweight adapted version of the NFR Framework was developed including 25 important NFRs. Further, a risk-driven agile requirements implementation sequence and a visual tree-like view were developed. The methodology was validated through developing a Java-based modeling simulation tool and two case studies. © 2012 IEEE.},
author_keywords={agile non-functional requirements;  agile requirements modeling;  NORMAP methodology;  NORMATIC;  Scrum},
keywords={Java programming language, Agile Requirements Modeling;  Non-functional requirements;  Normap methodologies;  NORMATIC;  Scrum, Software engineering},
}

@CONFERENCE{Kumar2012181,
author={Kumar, S. and Ji, Y. and Mookerjee, V.S.},
title={Managing agile software development: A control-theoretic approach},
journal={22nd Workshop on Information Technologies and Systems, WITS 2012},
year={2012},
pages={181-186},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902519341&partnerID=40&md5=0a9a4dc08ca93435e2baf94b2dec3ebe},
abstract={Agile software development practices, such as extreme programming, call for intense participation by users to ensure that the systems are developed to meet current needs, yet be flexible enough to adapt to future needs. Hence, in such projects, the developers need to allocate their efforts optimally between understanding the requirements from users and developing the modules, throughout the development period. We propose an optimal control model to solve this problem with two different objectives: (a) maximizing the system value, which is the objective of user group, and (b) minimizing the development cost/time, which is the objective of development group.},
keywords={Information technology;  Software design, Agile software development;  Control-theoretic approach;  Development costs;  EXtreme Programming;  Optimal control model;  User groups, Agile manufacturing systems},
}

@ARTICLE{Klein201271,
author={Klein, H. and Knauss, E. and Rausch, A.},
title={Scaling software development methods from co-located to distributed},
journal={Lecture Notes in Business Information Processing},
year={2012},
volume={94 LNBIP},
pages={71-83},
doi={10.1007/978-3-642-27213-4_6},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84855971483&doi=10.1007%2f978-3-642-27213-4_6&partnerID=40&md5=7be8568bc393cc4096b45498d6a62236},
abstract={Software projects nowadays are typically sourced from more than one location. This dispersed situation requires a higher degree of regulation mechanisms than provided in agile development methods. Workarounds for scaling agile practices to the distributed development scenario exist, which are mostly not of any value for decision makers, since they still merely provide an ad-hoc way of setting up distributed software development projects. Especially smaller distributed software projects are in demand for methodical support for this task. We propose a systematic approach - called "Collaborative Pattern Approach" - for deriving a distributed development process from an existing co-located process. Our approach focuses on a) defining cross-location collaboration and b) assessing the quality of the derived distributed development process. We demonstrate our approach in an example case. © 2012 Springer-Verlag Berlin Heidelberg.},
author_keywords={Collaboration;  Collaboration Patterns;  Distributed eXtreme Programming;  Distributed Software Development;  Software Development Methods},
keywords={Computer software selection and evaluation, Collaboration;  Collaboration patterns;  Distributed eXtreme Programming;  Distributed software development;  Software Development Methods, Software design},
}

@ARTICLE{Landgraf20125,
author={Landgraf, K. and Jochem, R.},
title={Innovation management needs an interoperable requirements management},
journal={Lecture Notes in Business Information Processing},
year={2012},
volume={122 LNBIP},
pages={5-19},
doi={10.1007/978-3-642-33068-1_3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866685285&doi=10.1007%2f978-3-642-33068-1_3&partnerID=40&md5=16339e18af99e3345ac54164fd8e820d},
abstract={In a world of fast changing environments for business, the need for innovation is one of the most stable items. On the other hand, innovation is influenced by more and more factors, like increasing products and service complexity ore growing numbers of partners, involved into a single product innovation. This paper introduces interoperability problems related to simultaneous business and product development. Purpose - This paper introduces the L-modelAgile, an advancement of the V-model. Due to interoperability is essential during the product development process, overall aim of the L-modelAgile is to improve the quality and rate of innovation within complex systems during the early stages of a stable and simultaneously agile innovation process. Design/methodology/approach - The basis of the L-modelAgile consists of the interoperability between the innovation process and the requirements management &amp; engineering process (RM&amp;E process) as well as the agile method Scrum. To link these processes, a best practice model inclusive a capability model and a performance measurement system has been developed. Findings - An increase of innovation quality and innovation speed at complex systems during the early stage of a reliable and simultaneous agile innovation process. Originality/value - The paper focuses on the innovation process during the product development and how to improve its quality. © 2012 Springer-Verlag.},
author_keywords={innovation management;  Interoperability;  requirements management & engineering process},
keywords={Industry;  Innovation;  Product development;  Requirements engineering;  Agile manufacturing systems;  Innovation;  Product development;  Requirements engineering, Agile methods;  Capability model;  Changing environment;  Design/methodology/approach;  Engineering process;  Innovation management;  Innovation process;  Innovation speed;  Performance measurement system;  Product development process;  Products and services;  Requirements management;  Single product;  V-model, Interoperability;  Interoperability},
}

@ARTICLE{Acuña2011258,
author={Acuña, D. and Schmal, R. and Klein, P.},
title={A web platform for managing intellectual property rights arising from university research [Una plataforma web para gestionar los derechos de propiedad intelectual resultantes de la investigación universitaria]},
journal={Journal of Technology Management and Innovation},
year={2011},
volume={6},
number={4},
pages={258-274},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84255171882&partnerID=40&md5=ea4a2ae1330654e68348b38032493cdf},
abstract={The paper show the development of a business process model and a web site for manage the industrial property rights linked to results of programs and projects executed in Talca ́s University (Chile). The work begin with an exploratory research followed by the construction of a business process model using BPMN Business Process Modeling Notation). Finally was developed a web site using XP (eXtreme Programming) methodology of rapid project development. Results obtained -business process model and web site-, make possible formalize process, rules definition, and the control of applications associated to industrial property rights. © Universidad Alberto Hurtado, Facultad de Economía y Negocios.},
author_keywords={Business process model;  Industrial property rights;  Management;  University research;  Web site},
}

@CONFERENCE{Alyani2011497,
author={Alyani, N. and Shirzad, S.},
title={Learning to innovate in distributed mobile application development: Learning episodes from Tehran and London},
journal={2011 Federated Conference on Computer Science and Information Systems, FedCSIS 2011},
year={2011},
pages={497-504},
art_number={6078270},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-83155161059&partnerID=40&md5=72787bc7a97aebfd81d064149c6d8ced},
abstract={This paper reports on the activities of an entrepreneurial small software firm, operating in telecoms value-added services based in Tehran, Iran, with project partners in London, UK. Mobile and smart phone applications are altering our professional and social interactions with innovative business models, glocal content and eco-systems, fusing the multifaceted aspects of mobile software development. To analyze these types of activities in the context of rapidly changing catching-up economies, development of mobile applications by entrepreneurial NTBFs, initially imitating as a way to innovate, require distributed up-skilling, rapid problem-solving and pragmatic learning. Specifically, we focus on knowledge brokerage and sourcing activities in distributed Scrums. Drawing on longitudinal analysis of projects [2004-2010], an iterative 'learning to innovate' model, entitled DEAL (Design, Execute, Adjust, Learn) within 'project-enhanced learning episodes', is constructed and outlined utilizing knowledge brokers and boundary sources in enterprise challenges. We conclude by reflecting on distributed learning and skills in practice. © 2011 Polish Info Processing Soc.},
keywords={Business models;  Catching-up;  Distributed learning;  Distributed mobile applications;  London , UK;  Longitudinal analysis;  Mobile applications;  Mobile softwares;  Project partners;  Smart phones;  Social interactions;  Software firms;  Tehran , Iran;  Value added service, Computer science;  Industry;  Information systems;  Mobile computing;  Mobile devices;  Professional aspects;  Software design, Cellular telephone systems},
}

@CONFERENCE{Schramm2011,
author={Schramm, W. and Draeger, C. and Grechenig, T.},
title={Issues and mitigation strategies when using agile industrial software development processes in student software engineering projects},
journal={IEEE AFRICON Conference},
year={2011},
doi={10.1109/AFRCON.2011.6072135},
art_number={6072135},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-82955214826&doi=10.1109%2fAFRCON.2011.6072135&partnerID=40&md5=6baa440ed77bc9b0a66327894d2011fc},
abstract={In computer science education, one of the main goals for educators is to prepare the student for employment in an industrial environment. For this it is required that the students are familiar with the major development process, ideally on the example of a concrete student project. During a one-semester software development seminar the students were grouped into 7 groups with 4-5 students each and each group was assigned eXtreme Programming, SCRUM or Open Unified Process as development process. Each student was asked to keep a development diary and answer questionnaires during and at the end of the project. Each group was asked to document the changes to their development process, identified development problems, employed mitigation strategies and the project progress in form of a retrospective report. Analysis of the reports revealed common issues and mitigation strategies, which can be classified into the following: meeting organization; communication; project roles, requirements engineering, continuous tests and process adherence. The employed mitigation strategies were classified into the same categories; quantified and evaluated regarding their respective effectiveness. © 2011 IEEE.},
author_keywords={development process;  education;  process tailoring;  student exercises},
keywords={Computer Science Education;  Development problems;  Development process;  EXtreme Programming;  Industrial environments;  Industrial software development;  Mitigation strategy;  Process tailoring;  Project roles;  Software engineering projects;  Student project;  Unified process, Education;  Education computing;  Planning;  Students;  Surveys, Software design},
}

@CONFERENCE{Niinimäki201178,
author={Niinimäki, T.},
title={Face-to-face, email and instant messaging in distributed agile software development project},
journal={Proceedings - 2011 6th IEEE International Conference on Global Software Engineering Workshops, ICGSE Workshops 2011},
year={2011},
pages={78-84},
doi={10.1109/ICGSE-W.2011.15},
art_number={6065582},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-82855170961&doi=10.1109%2fICGSE-W.2011.15&partnerID=40&md5=976d530b80769cd458848accff73b084},
abstract={This paper presents our preliminary results from a single case study on face-to-face, email and instant messaging (IM) communication in a distributed agile software development (DASD) project. The project had 13 team members during the time of study, and it was distributed between three different sites: Finland, Norway and Czech Republic. The team was using Scrum process model with three week sprints.We studied face-to-face communication with sociometric badges and email and IM communication by analyzing the project-related communication logs provided by each individual team member. We were interested both in the amount of communication and the communication patterns via different communication media.We found differences in the daily variation of communication amounts across different media as well as different network structure of communication with different media. Specifically, we found some evidence that IM is used as a replacement for face-to-face discussion in DASD, and that email seems to be more suitable for team-wide, inter-site communication than face-to-face or instant messaging. © 2011 IEEE.},
keywords={Agile software development;  Communication pattern;  Czech Republic;  Face-to-face communications;  Finland;  Instant messaging;  Network structures;  Process model;  Team members, Communication;  Electromagnetic launchers;  Electronic mail;  Message passing;  Technical presentations;  World Wide Web, Software design},
}

@ARTICLE{Mishra2011549,
author={Mishra, D. and Mishra, A.},
title={Complex software project development: Agile methods adoption},
journal={Journal of Software Maintenance and Evolution},
year={2011},
volume={23},
number={8},
pages={549-564},
doi={10.1002/smr.528},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-81155139118&doi=10.1002%2fsmr.528&partnerID=40&md5=d45238e2ecad9112d8869214345fa7f8},
abstract={The Agile Software Development paradigm has become increasingly popular in the last few years, since it claims lower costs, better productivity, better quality and better business satisfaction. Supply chain management (SCM) is a complex software development project. Owing to its scope and uncertain, complex and unstable requirements, it is not possible to develop it with predictable software development process models. Agile methodologies are targeted toward such kinds of problems that involve change and uncertainty, and are adaptive rather than predictive. How an agile process is introduced will significantly impact the implementation success of the process change. The objective of this paper is to analyze the agile development methodologies and management approach used in developing a complex software project. This further demonstrates how to overcome risks and barriers in each development phase of such complex inventive software projects. It also provides a set of guidelines regarding how the agile methodologies can be adopted, combined and used in these kinds of complex software projects. These findings have implications for software engineers and managers developing software by agile methods. © 2011 John Wiley & Sons, Ltd.},
author_keywords={adaptive development;  agile methods;  Agile software development;  dynamic systems development method (DSDM);  eXtreme programming (XP);  feature-driven development (FDD);  Scrum;  supply chain management (SCM)},
keywords={adaptive development;  Agile methods;  Agile software development;  dynamic systems development method (DSDM);  EXtreme Programming;  feature-driven development (FDD);  Scrum;  supply chain management (SCM), Supply chain management, Software design},
}

@CONFERENCE{Siddiqui20111125,
author={Siddiqui, F. and Afshar Alam, M.},
title={Ontology based application model for feature driven development},
journal={Proceedings of the 5th Indian International Conference on Artificial Intelligence, IICAI 2011},
year={2011},
pages={1125-1137},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872203462&partnerID=40&md5=3d21e2ad19d785540981069879177da2},
abstract={The upcoming technology support for semantic web promises fresh directions for Software Engineering community. Also semantic web has its roots in knowledge engineering that provoke software engineers to look for application of ontology applications throughout the Software Engineering lifecycle. The internal components of a semantic web are "light weight", and may be of less quality standards than the externally visible modules. In fact the internal components are generated from external (ontological) component. That's the reason agile development approaches such as Feature Driven Development (FDD) are suitable for application's internal component development. The FDD process is based on its first step of developing the "overall model" which is build using the information in requirement document and later used for deriving the feature list but there is no particular representation for this model that can be used for checking the quality of model. Considering such model as a requirement, we propose ontology based derivation of overall model that can be used for checking the quality of model and later be used for generation of features from it. Advantages of ontology-based feature Driven development are also discussed.},
author_keywords={Agile methodology;  Feature Driven Development;  Ontology},
keywords={Agile development;  Agile Methodologies;  Application models;  Engineering community;  Feature Driven Development;  Light weight;  Ontology-based;  Overall-model;  Quality standard;  Software engineering life-cycle;  Software engineers;  Technology support, Knowledge engineering;  Ontology;  Software engineering, Model checking},
}

@CONFERENCE{Moshirpour2011325,
author={Moshirpour, M. and Shirkavand, F. and Eberlein, A. and Far, B.H.},
title={Requirement analysis in agile software development of distributed systems},
journal={Proceedings of the IASTED International Conference on Software Engineering and Applications, SEA 2011},
year={2011},
pages={325-332},
doi={10.2316/P.2011.758-079},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862284113&doi=10.2316%2fP.2011.758-079&partnerID=40&md5=bc49b2b28b88d3784cd22a52a580de13},
abstract={Agile methodologies (DSDM, XP, Crystal, SCRUM, etc.) have been adopted as popular approaches to software development mainly because of their capability to deliver the end product faster and incorporate changes to the requirements. Agile follows iterative development, i.e. the implementation of software systems in successive releases. A side effect of multiple releases is introducing inconsistencies to the requirements that may lead to unpredictability of the system behavior at the run-time. Unpredictable systems are hard to debug and harder to manage. It is believed that agile methods can benefit from using more quantified and yet light-weight approaches across the entire development life cycle and particularly, the analysis of requirements for correctness. Checking for consistency of requirements prior to their implementation can remove the predictability problem and lead to significant savings in time and maintenance cost. This research proposes the utilization of a software tool which employs methodologies to automatically analyze system requirements in agile development and detect inconsistencies. The portrayal of requirements via user stories in agile development is used for this purpose. The advantages of adding requirement analysis methodologies to agile development are illustrated using a case study of a real-time drilling simulator.},
author_keywords={Agile development;  Distributed systems;  Emergent behavior;  Message sequence chart},
keywords={Agile development;  Agile Methodologies;  Agile methods;  Agile software development;  Distributed systems;  Drilling simulators;  Emergent behaviors;  End-products;  Iterative development;  Light weight;  Maintenance cost;  Message Sequence Charts;  Requirement analysis;  Runtimes;  Side effect;  Software systems;  System behaviors;  System requirements;  User stories, Computer software;  Offshore oil wells;  Program debugging;  Software design, Agile manufacturing systems},
}

@ARTICLE{Sohaib201151,
author={Sohaib, O. and Khan, K.},
title={Incorporating discount usability in extreme programming},
journal={International Journal of Software Engineering and its Applications},
year={2011},
volume={5},
number={1},
pages={51-62},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84859154789&partnerID=40&md5=698c6d0daee79b87df7107e8284495cf},
abstract={Extreme programming (XP) is one of the well-known forms of agile software development, due to its iterative nature, software developers focus on functional aspects and neglect the non-functional characteristics of software like usability. This research investigates the importance of end user involvement in extreme programming using grounded theory and describes the key question that how usability practices are integrated with the Extreme Programming in orders to make effective usable software system. To address this key issue, this study provide an extension suggestion for extreme programming that help the development team to take an account of usability of the product. While there are many usability engineering techniques, discount usability (Scenarios, Card Sorting, Heuristic evaluation and thinking aloud) that are applied with a minimum set of guidance and tools were integrated into extreme programming project lifecycle.},
author_keywords={Agile methods;  Extreme programming (XP);  Usability Engineering;  User centered design (UCD)},
}

@ARTICLE{Caballero2011215,
author={Caballero, E. and Calvo-Manzano, J.A. and Feliu, T.S.},
title={Introducing Scrum in a very small enterprise: A productivity and quality analysis},
journal={Communications in Computer and Information Science},
year={2011},
volume={172},
pages={215-224},
doi={10.1007/978-3-642-22206-1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879496862&doi=10.1007%2f978-3-642-22206-1&partnerID=40&md5=52639f661146262dec569144c92bcdd9},
abstract={The very small enterprises are seriously affected by the actual global economic crisis. At this scenario the competitiveness is a key factor and productivity enhancements are needed. This article shows an experience about introducing an agile methodology in a very small enterprise. The organization needed to improve their projects productivity without compromising the quality and decided to introduce Scrum in order to verify its efficiency. The goal of this paper is to analyze the productivity and quality by comparing the Scrum pilot project with a previous similar experience based in TSPi. © Springer-Verlag Berlin Heidelberg 2011.},
author_keywords={Process Improvement;  Scrum;  Software Productivity;  Software Quality;  TSPi;  Very Small Enterprise},
keywords={Process Improvement;  Scrum;  Small enterprise;  Software productivity;  Software Quality;  TSPi, Computer software selection and evaluation;  Software engineering, Productivity},
}

@CONFERENCE{Ruiz2011421,
author={Ruiz, J.C. and Osorio, Z.B. and Mejia, J. and Muñoz, M. and Chávez, A.M. and Olivares, B.A.},
title={Definition of a hybrid measurement process for the models ISO/IEC 15504-ISO/IEC 12207:2008 and CMMI Dev 1.3 in SMEs},
journal={Proceedings - 2011 IEEE Electronics, Robotics and Automotive Mechanics Conference, CERMA 2011},
year={2011},
pages={421-426},
doi={10.1109/CERMA.2011.74},
art_number={6125867},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856331307&doi=10.1109%2fCERMA.2011.74&partnerID=40&md5=9927a43be92d3b59beb1641c17fefa38},
abstract={A fundamental aspect of software product quality is the possibility of measuring. Therefore, measurement applied to the software product and processes has become a need, even in the smallest organizations where agile methodologies are applied. The objective of this paper is to describe a proposal of a hybrid measurement process for the ISO/IEC 15504-ISO/IEC 12207:2008 standards and CMMI Dev 1.3 model in small and medium enterprises (SMEs). The hybrid process was obtained through the definition of a cluster of tasks valid in both models. The motivation and viability of having hybrid processes in small organizations is analyzed. Besides, the use of hybrid processes as basic processes that are able to be fitted in similar processes in differents quality models and standards is discussed. Moreover, the definition of hybrid processes in order to provide a support in the creation of processes compatible in different models and standards is included. © 2011 IEEE.},
author_keywords={agile methodologies;  CMMI Dev 1.3;  ISO/IEC 15504-ISO/IEC 12207:2008;  models;  standards},
keywords={Agile Methodologies;  CMMI Dev 1.3;  Hybrid process;  ISO/IEC;  ISO/IEC 15504-ISO/IEC 12207:2008;  Measurement process;  Quality models;  Small and medium enterprise;  Small organizations;  Software product quality;  Software products, Models;  Robotics;  Standards, Industry},
}

@CONFERENCE{Zhai2011518,
author={Zhai, L.-L. and Hong, L.-F. and Sun, Q.-Y.},
title={Research on requirement for high-quality model of Extreme Programming},
journal={Proceedings - 2011 4th International Conference on Information Management, Innovation Management and Industrial Engineering, ICIII 2011},
year={2011},
volume={1},
pages={518-522},
doi={10.1109/ICIII.2011.132},
art_number={6115089},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856648858&doi=10.1109%2fICIII.2011.132&partnerID=40&md5=9c2adf657f8e14e74582d55733e8a693},
abstract={Aiming at the core values of Extreme Programming and the barriers to the demand communication process, introducing the two-dimensional model characteristics with satisfactory situation of quality characteristics and customer satisfaction in Kano model to demand access field of software development, it does two-dimensional analysis with the expectation requirements of business customer and software development practices during the process of software development demand. At same time, it explores the demand for high-quality and combines with the original features of Extreme Programming to establish the model of Extreme Programming demand access. As the result, it reduces non-normal demand, improves software quality and user awareness of software products. Consequently, lets the software development enter the virtuous cycle in the requirement phase, and reduce unnecessary demand changes and hidden risks. © 2011 IEEE.},
author_keywords={Communication;  Extreme programming;  Kano mode;  Model of demand},
keywords={Business customers;  Communication process;  Core values;  Demand changes;  EXtreme Programming;  High quality;  Kano mode;  Kano model;  Quality characteristic;  Software development practices;  Software products;  Software Quality;  Two dimensional model;  Two-dimensional analysis, Communication;  Computer software selection and evaluation;  Customer satisfaction;  Industrial engineering;  Information management;  Innovation;  Two dimensional, Software design},
}

@CONFERENCE{McFadden201187,
author={McFadden, P. and Yamauchi, S.},
title={Applying agile methodologies to marine implementation projects},
journal={RINA, Royal Institution of Naval Architects - International Conference on Computer Applications in Shipbuilding 2011, Papers},
year={2011},
volume={1},
pages={87-92},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864670851&partnerID=40&md5=8f75a2657b21d0b1ecacd252e52aae88},
abstract={Advanced marine modeling and design systems and tools can provide significant returns on investment in the form of more standardized deliverables, more rules-based design automation, and more customization to enable process innovation. These benefits can be achieved through the adoption of a technology, such as SmartMarine 3D, which offers a rule-driven solution for streamlining the design process. Working with an organization's in-house experts, familiar with the design and production practices, an implementation plan can be created to automate the most common modeling practices. Depending on the background of the in-house domain experts and/or the technology, design experts may require some amount of time and training using the new technology before sufficient knowledge and skills can be achieved - ultimately slipping the start of the customization efforts, prolonging the implementation timeframe, and delaying the point where the return on investment begins to generate savings. Since the creation of a rule driven solution involves some sort of "programming" , it is logical to look to the software development community for techniques and methods to do this work in an effective and efficient manner. Utilizing standard Agile programming methodologies, teams are created with individuals that fulfill roles such as subject matter expert, developer, product owner, documentation specialist, and tester. These knowledge resources are collocated and work on prioritized backlog items with known business values for fixed length cycles with identified Conditions of Satisfaction. In this paper, we will discuss the pros and cons of this approach and summarize the experience of "lessons learned" through an actual implementation project, which includes development of customized rules and catalog content for the modeling, detailing, and production of marine vessels. ©2011: The Royal Institution of Naval Architects.},
keywords={Agile Methodologies;  Agile programming;  Business value;  Design automations;  Design process;  Design systems;  Design-expert;  Development community;  Domain experts;  Implementation projects;  Knowledge resource;  Marine vessels;  Process Innovation;  Production practice;  Return on investments;  Returns on investment;  Rule-driven;  Subject matter experts, Computer aided design;  Profitability;  Shipbuilding;  Shipyards, Software engineering},
}

@CONFERENCE{Bahli20111660,
author={Bahli, B. and Benslimanne, Y. and Yang, Z.},
title={The impact of absorptive capacity on the ex-post adoption of agile methods: The case of Extreme Programming model},
journal={IEEE International Conference on Industrial Engineering and Engineering Management},
year={2011},
pages={1660-1664},
doi={10.1109/IEEM.2011.6118198},
art_number={6118198},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863052102&doi=10.1109%2fIEEM.2011.6118198&partnerID=40&md5=85e0a13f4bdb43e423999fc805b9022c},
abstract={Agile development methods have emerged to overcome some of the process and product-related problems associated with traditional models. They are believed to be lightweight, people focused, adaptive and allow better information systems development (ISD) performance. Nevertheless, they require a significant capacity of absorbing new set of skills, knowledge and mindset changing. When using agile methods IS developers are faced with a challenge to quickly assimilate the mindset of these new methods and develop the ability to recognize information and apply it in context. This paper reports on two ex-post ISD project implementation. We integrate a central construct in the dynamic capability theory - absorptive capacity to explain agile method adoption and usage. The findings show that absorptive capacity, indeed, plays an important role in adopting and using agile method-Extreme Programming model. The implications of these findings for both researchers and practitioners are discussed. © 2011 IEEE.},
author_keywords={absorptive capability;  Agile Method;  technology adoption;  usage},
keywords={Absorptive capability;  Absorptive capacity;  Agile development methods;  Agile Method;  Agile methods;  Dynamic capabilities;  EXtreme Programming;  Information systems development;  Programming models;  Project implementation;  technology adoption;  usage, Computer programming;  Industrial engineering, Models},
}

@CONFERENCE{Williams2011463,
author={Williams, L. and Brown, G. and Meltzer, A. and Nagappan, N.},
title={Scrum + engineering practices: Experiences of three microsoft teams},
journal={International Symposium on Empirical Software Engineering and Measurement},
year={2011},
pages={463-471},
art_number={6092605},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863404364&partnerID=40&md5=71d9fb17ca97a0cb26c97c52a12788b5},
abstract={The Scrum methodology is an agile software development process that works as a project management wrapper around existing engineering practices to iteratively and incrementally develop software. With Scrum, for a developer to receive credit for his or her work, he or she must demonstrate the new functionality provided by a feature at the end of each short iteration during an iteration review session. Such a short-term focus without the checks and balances of sound engineering practices may lead a team to neglect quality. In this paper we present the experiences of three teams at Microsoft using Scrum with an additional nine sound engineering practices. Our results indicate that these teams were able to improve quality, productivity, and estimation accuracy through the combination of Scrum and nine engineering practices. © 2011 IEEE.},
author_keywords={Agile software development;  Scrum},
keywords={Agile software development;  Agile software development process;  Engineering practices;  MicroSoft;  Review sessions;  Scrum, Engineering;  Project management, Software engineering},
}

@CONFERENCE{Schrödl20112292,
author={Schrödl, H. and Wind, S.},
title={Adoption of SCRUM for software development projects: An exploratory case study from the ICT industry},
journal={17th Americas Conference on Information Systems 2011, AMCIS 2011},
year={2011},
volume={3},
pages={2292-2301},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870232642&partnerID=40&md5=75ed7b8257274868efd59e79ea6ce621},
abstract={Agile process models are aimed to improve the track record of software development projects b u t in literature and in daily project work there is a broad debate of the usage of agile project management methods. Despite initial positive results in practice, the conhtions, possibilities and effects of agile process models are mscussed controversial. In ths paper, the adoption of agile project management models has been investigated in terms of an exploratoIy case study for a business intelligence development project in the ICT industry. In ths case study the adoption of SCRUM as agile project management method was analyzed and evaluated. The results and experience gained from the method adoption are discussed. General and SCRUM-specific implementation proposals for the practical application were derived. These recommendations seme as a suppod in the introduction of agile process models in other similar projects situations.},
author_keywords={Agile project management;  ExploratoIy case study;  ICT IndustIy;  SCRUM},
keywords={Agile process model;  Agile project management;  Development project;  ExploratoIy case study;  ICT IndustIy;  ICT industries;  Project work;  SCRUM;  Software development projects;  Track record, Information systems;  Management science;  Research;  Software design, Project management},
}

@CONFERENCE{Blau201126,
author={Blau, B.S. and Hildenbrand, T. and Armbruster, M. and Fassunge, M.G. and Xu, Y. and Knapper, R.},
title={Incentives and performance in large-scale lean software development: An agent-based simulation approach},
journal={ENASE 2011 - Proceedings of the 6th International Conference on Evaluation of Novel Approaches to Software Engineering},
year={2011},
pages={26-37},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865129248&partnerID=40&md5=3b6dce4840b62cce39d8f24d25c0fb4f},
abstract={The application of lean principles and agile project management techniques in the domain of large-scale software product development has gained tremendous momentum over the last decade. However, a simple transfer of good practices from the automotive industry combined with experiences from agile development on a team level is not possible due to fundamental differences stemming from the particular domain specifics - i.e. different types of products and components (material versus immaterial goods), knowledge work versus production systems as well as established business models. Especially team empowerment and the absence of a a hierarchical control on all levels impacts goal orientation and business optimization. In such settings, the design of adequate incentive schemes in order to align local optimization and opportunistic behavior with the overall strategy of the company is a crucial activity of central importance. Following an agent-based simulation approach with reinforcement learning, we (i) address the question of how information regarding backlog item dependencies is shared within and in between development teams on the product level subject to different incentive schemes. We (ii) compare different incentive schemes ranging from individual to team-based compensation. Based on our results, we are (iii) able to provide recommendations on how to design such incentives, what their effect is, and how to chose an adequate development structure to foster overall software product development flow by means of more economic decisions and thus resulting in a shorter time to market. For calibrating our simulation, we rely on practical experience from a very large software company piloting and implementing lean and agile for about three years.},
author_keywords={Agent-based simulation;  Agile;  Incentive;  Lean;  Performance},
keywords={Agent based simulation;  Agile;  Incentive;  Lean;  Performance, Automotive industry;  Computer software;  Optimization;  Project management;  Reinforcement learning, Product development},
}

@CONFERENCE{Vatrapu201193,
author={Vatrapu, R. and Teplovs, C. and Fujita, N. and Bull, S.},
title={Towards visual analytics for teachers' dynamic diagnostic pedagogical decision-making},
journal={ACM International Conference Proceeding Series},
year={2011},
pages={93-98},
doi={10.1145/2090116.2090129},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856347618&doi=10.1145%2f2090116.2090129&partnerID=40&md5=a4687905242c76c4955ff86a61aeefb5},
abstract={The focus of this paper is to delineate and discuss design considerations for supporting teachers' dynamic diagnostic decision-making in classrooms of the 21st century. Based on the Next Generation Teaching Education and Learning for Life (NEXT-TELL) European Commission integrated project, we envision classrooms of the 21st century to (a) incorporate 1:1 computing, (b) provide computational as well as methodological support for teachers to design, deploy and assess learning activities and (c) immerse students in rich, personalized and varied learning activities in information ecologies resulting in high-performance, high-density, high-bandwidth, and data-rich classrooms. In contrast to existing research in educational data mining and learning analytics, our vision is to employ visual analytics techniques and tools to support teachers dynamic diagnostic pedagogical decision-making in real-time and in actual classrooms. The primary benefits of our vision is that learning analytics becomes an integral part of the teaching profession so that teachers can provide timely, meaningful, and actionable formative assessments to on-going learning activities in-situ. Integrating emerging developments in visual analytics and the established methodological approach of design-based research (DBR) in the learning sciences, we introduce a new method called "Teaching Analytics" and explore a triadic model of teaching analytics (TMTA). TMTA adapts and extends the Pair Analytics method in visual analytics which in turn was inspired by the pair programming model of the extreme programming paradigm. Our preliminary vision of TMTA consists of a collocated collaborative triad of a Teaching Expert (TE), a Visual Analytics Expert (VAE), and a Design-Based Research Expert (DBRE) analyzing, interpreting and acting upon real-time data being generated by students' learning activities by using a range of visual analytics tools. We propose an implementation of TMTA using open learner models (OLM) and conclude with an outline of future work. © 2011 ACM.},
author_keywords={Computer supported collaborative learning (CSCL);  Learning analytics;  Learning sciences;  Multivocality;  Teaching analytics;  Visual analytics},
keywords={Computer supported collaborative learning;  Learning analytics;  Learning science;  Multivocality;  Visual analytics, Computer programming;  Decision making;  Design;  Education computing;  Research;  School buildings;  Visualization, Teaching},
}

@CONFERENCE{Khodawandi2011189,
author={Khodawandi, D.},
title={Separating and quantifying value and waste to improve operational performance in software development},
journal={BMSD 2011 - Proceedings of the 1st International Symposium on Business Modeling and Software Design},
year={2011},
pages={189-192},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877725668&partnerID=40&md5=f0eb1b17a444816b762b76741e5356b5},
abstract={Software companies choose to implement Agile software development practices to increase the frequency of their release cycles, stabilize quality, reduce cost - or in short: improve operational performance by increasing productivity. Yet quantifying, what productivity improvement the implementation of Agile software development resulted or will result in is still a big challenge. This paper introduces a new concept to quantify productivity based on the theory of Lean Management - which is closely related to Agile software development - and the specific concept to separate value and waste in processes and products. The author claims that consideration of three dimensions is necessary in the context of software development: (1) the value adding share of product features, (2) the share of the product which contributes to the overall feature set in a value adding way, and (3) the value adding share of time employees can spend when creating software. The ideas proposed in this paper are subject to ongoing trials in an industry environment, which the author is directly involved in. The overall contribution of this paper is a) a new concept to quantify productivity in software development and b) results from initial application of the concept in a large enterprise environment to quantify one of the three dimensions of the overall quantification concept. Copyright © 2011 SciTePress - Science and Technology Publications.},
author_keywords={Agile software development;  Lean software development;  Operational performance;  Productivity quantification;  Software development productivity},
keywords={Agile software development;  Development productivity;  Industry environment;  Lean software development;  Operational performance;  Productivity improvements;  Software company;  Three dimensions, Industry;  Productivity;  Separation;  Systems engineering;  Waste management, Software design},
}

@CONFERENCE{Homchuenchom2011195,
author={Homchuenchom, D. and Piyabunditkul, C. and Lichter, H. and Anwar, T.},
title={SPIALS: A light-weight software process improvement self-assessment tool},
journal={2011 5th Malaysian Conference in Software Engineering, MySEC 2011},
year={2011},
pages={195-199},
doi={10.1109/MySEC.2011.6140668},
art_number={6140668},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857268649&doi=10.1109%2fMySEC.2011.6140668&partnerID=40&md5=51422758b52940db8ed73b84eb47e9c4},
abstract={In this paper we propose a tool-based approach called CMMIbySCRUM to improve CMMI-based processes with Agile technique such as Scrum. This model was designed to be especially useful for VSEs/SMEs. If VSEs/SMEs are aware of the current capability status of their software processes and have a improvement guideline based on their quality targets, they might be able to substantially improve their processes. To support organizations on their way to better processes, we present the design of a generic tool (SPIALS: Software Process Improvement Adaptive Learning System) applicable to measure up organizations' process capability status. VSEs/SMEs can use the tool to perform a self-assessment thus reducing the complex appraisal process. The measurement represents trend of practices which VSEs/SMEs should implement or avoid. The presented tool-based assessment strategy is based on Standard CMMI Appraisal Method for Process Improvement (SCAMPI), which is well recognized for CMMI standard appraisal. © 2011 IEEE.},
author_keywords={CMMI;  light-weight self-assessment;  SCAMPI;  Scrum;  tool support},
keywords={CMMI;  Light weight;  SCAMPI;  Scrum;  tool support, Rating, Software engineering},
}

@ARTICLE{Stettina201184,
author={Stettina, C.J. and Heijstek, W.},
title={Five agile factors: Helping self-management to self-reflect},
journal={Communications in Computer and Information Science},
year={2011},
volume={172},
pages={84-96},
doi={10.1007/978-3-642-22206-1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864138737&doi=10.1007%2f978-3-642-22206-1&partnerID=40&md5=7b0aab11ab31d5c80b74edb0c09b0425},
abstract={In this paper a tool is proposed to foster reflection in agile software development teams. Based upon the qualitative model of Moe et al. [11], we contribute a quantitative questionnaire organized along five dimensions of agile teamwork analogous to the "Five Factor Model" in contemporary psychology. To test this survey tool and its alignment with existing studies, we have executed an empirical validation of the tool with 79 individuals and 8 international Scrum teams. We find that interteam agreement on the factors is high and that the survey tool is found very useful. The instrument offers a comparable measure to agile teams and gives recommendations for each of the factors helping to understand individual as well as organizational level barriers. © Springer-Verlag Berlin Heidelberg 2011.},
author_keywords={Agile teams;  Organizational management and coordination;  Process implementation and change;  Scrum;  Self-management;  Software development},
keywords={Agile teams;  Organizational management and coordinations;  Process implementation and change;  Scrum;  Self management, Agile manufacturing systems;  Software design;  Software engineering;  Surveys;  Tools, Human resource management},
}

@CONFERENCE{Jeon2011203,
author={Jeon, S. and Han, M. and Lee, E. and Lee, K.},
title={Quality attribute driven agile development},
journal={Proceedings - 2011 9th International Conference on Software Engineering Research, Management and Applications, SERA 2011},
year={2011},
pages={203-210},
doi={10.1109/SERA.2011.24},
art_number={6065642},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-82155175139&doi=10.1109%2fSERA.2011.24&partnerID=40&md5=dd3bff6f43ec317b41f1586b42c62af9},
abstract={Agile development methods are being recognized as popular and efficient approaches to the development of software systems that have features such as a short delivery period and unclear requirements. They emphasize customer satisfaction, fast response to changes, and release in less time. According to a recent survey, SCRUM is one of the most popular methods that are currently being used. Some backlogs, especially high priority backlogs that are functional requirements of customers, are developed repeatedly at each sprint period. Despite the known advantages of SCRUM, however, its backlogs focus only on functional features. Thus, it is difficult to effectively reflect the softwares quality attributes. As known, the failure of a software project is caused by the non-satisfaction not of functional features but of quality attributes, such as performance, usability, and reliability. This paper introduces the ACRUM1 that is a quality attribute driven agile development method. The main characteristic of the proposed solution is that it is derived from values and practices of SCRUM to be compatible with the SCRUM process and to keep its agility intact. The effect of ACRUM was evaluated through an agile process evaluation checklist and applying it into a commercial project of Samsung Electronics. The results showed that ACRUM is more efficient than the legacy agile development process. © 2011 IEEE.},
author_keywords={Agile;  QAW;  Quality Attribute;  SCRUM},
keywords={Agile;  Agile development;  Agile development methods;  Agile process;  Commercial projects;  Fast response;  Functional features;  Functional requirement;  Main characteristics;  QAW;  Quality Attribute;  Quality attributes;  Samsung electronics;  SCRUM;  Software project;  Software systems, Customer satisfaction;  Engineering research;  Research and development management;  Software reliability, Software design},
}

@CONFERENCE{Maranzato2011125,
author={Maranzato, R.P. and Neubert, M. and Herculano, P.},
title={Moving back to Scrum and scaling to Scrum of Scrums in less than one year},
journal={SPLASH'11 Compilation - Proceedings of OOPSLA'11, Onward! 2011, GPCE'11, DLS'11, and SPLASH'11 Companion},
year={2011},
pages={125-129},
doi={10.1145/2048147.2048186},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-81355142081&doi=10.1145%2f2048147.2048186&partnerID=40&md5=29702d6f976cfc6ee8ed3a5045a8fc8e},
abstract={We report on the experience of re-introducing Scrum in a project team that had previously failed to adopt that agile method. We explore the reasons we believe that caused the failure and explain how we approached the team to uncover them. Then, we describe our strategy to avoid incurring in those problems again and to take the team to a higher level of productivity, quality and personal satisfaction. We also present the motivation and the actions taken to go further and scale this scenario to multiple feature-oriented teams using Scrum of Scrums. All these changes occurred in less than one year.},
author_keywords={Agile;  Cultural change;  Experience;  Scaling Scrum;  Scrum;  Scrum of Scrums},
keywords={Agile;  Cultural changes;  Experience;  Scaling Scrum;  Scrum;  Scrum of Scrums, Computer systems programming},
}

@CONFERENCE{Almeida201175,
author={Almeida, L.H. and Albuquerque, A.B. and Pinheiro, P.R.},
title={A multi-criteria model for planning and fine-tuning distributed Scrum projects},
journal={Proceedings - 2011 6th IEEE International Conference on Global Software Engineering, ICGSE 2011},
year={2011},
pages={75-83},
doi={10.1109/ICGSE.2011.36},
art_number={6063152},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-81255138720&doi=10.1109%2fICGSE.2011.36&partnerID=40&md5=9f8d4b4492b597a26e69c2604c79f647},
abstract={Distributed software development is a fact of life for many projects. It is well established that distance makes difficult to interact and to cooperate effectively. Scrum emphasizes communication, reduces coordination and control overhead; therefore it has enormous potential to help the management of distributed projects and has been increasingly used. Successfully managing the combined use of DSD and Scrum is a complex task and it requires carefully planning. Despite the importance and complexity of this type of problem, there seems to be a lack of reports, in the literature, of models that could support project managers dealing with these decision contexts. This paper presents a multi-criteria decision model for planning and finetuning such project plans. This model was developed using cognitive mapping and MACBETH (Measuring Attractiveness by a Categorical Based Evaluation Technique). The application of the model is demonstrated, followed by conclusion and remarks about future work. © 2011 IEEE.},
keywords={Cognitive mapping;  Complex task;  Coordination and Control;  Distributed projects;  Distributed software development;  MACBETH;  Multi-criteria model;  Multicriteria decision;  Project managers;  Project plans, Project management, Software design},
}

@ARTICLE{Denning20114,
author={Denning, S.},
title={Successfully implementing radical management at Salesforce.com},
journal={Strategy & Leadership},
year={2011},
volume={39},
number={6},
pages={4-10},
doi={10.1108/10878571111176574},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-81155139179&doi=10.1108%2f10878571111176574&partnerID=40&md5=d65a2d84b1998479fcb21b0dd08c5f66},
abstract={This case aims to describe the practices of Salesforce.com, one of the most successful examples of a company transitioning from traditional management to radical management. The article explores the factors that made the implementation successful and identifies the pitfalls that were avoided. Salesforce.com provides on-demand services for customer-relationship management. Salesforce.com has had more spectacular results than most other companies that have adopted the radical management principles of Scrum. Over the past five years Salesforce.com has delivered a 41 percent annual return to shareholders. This extraordinary performance – in fact, an example of an innovation turnaround – occurred after the firm instituted a set of radical practices that make it a model for business seeking to grow though continuous innovation. The leadership at Salesforce.com saw that if a radically different approach to management were to be introduced in one part of the organization, there would be a tension at the interface between the part of the company still doing traditional management and the part managing work in the new way. So they opted to go all out with change right across the whole organization. What made Salesforce.com different is that when it innovativeness was threatened it adopted a radically different way of managing work. It implemented a set of agile, customer-driven, outcome-oriented, iterative management practices known in software development as Scrum. © 2011, Emerald Group Publishing Limited},
author_keywords={Change leadership;  Change management;  Coaching;  Cross-functional team;  Dynamic linking;  Innovation turnaround;  Radical management practices;  Traditional hierarchical bureaucracy;  Training},
}

@CONFERENCE{Gang2011156,
author={Gang, Z. and Xinkun, W. and Gong, C.},
title={Research on the development and application of rugby scrum equipment},
journal={Proceedings of the 2011 International Conference on Future Computer Science and Education, ICFCSE 2011},
year={2011},
pages={156-160},
doi={10.1109/ICFCSE.2011.46},
art_number={6041633},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80155144314&doi=10.1109%2fICFCSE.2011.46&partnerID=40&md5=543abd914644b79dce1b209dbafc2816},
abstract={The paper aims to solve problems existing in rugby scrum technology, such as quantizing strength, preventing neck injury, adjusting technical motions according to standard etc. Develop scrum educational and training equipment to replace human power by mechanical engineering designs, mechanic experiments, design calculation and manufacture. The test gives us the crucial technical data and inspects the model machine in the actual application. We can conclude that there is a relation between the weights and ejection force. If the confidence interval is in this range, P<0.05, and under the condition of 1-α=95%, then the load-carrying capability range is credible. It verified that the reliable performance of the rugby scrum ejection force function and it has a good effect on improving rugby scrum teaching. © 2011 IEEE.},
author_keywords={application;  development;  equipment;  scrum},
keywords={Confidence interval;  Design calculations;  development;  Ejection force;  Human power;  Load carrying;  Mechanical engineering designs;  Model machine;  Neck injury;  Reliable performance;  scrum;  Technical data;  Training equipments, Computer science;  Education computing;  Standardization, Equipment},
}

@ARTICLE{VanValkenhoef20111227,
author={Van Valkenhoef, G. and Tervonen, T. and De Brock, B. and Postmus, D.},
title={Quantitative release planning in extreme programming},
journal={Information and Software Technology},
year={2011},
volume={53},
number={11},
pages={1227-1235},
doi={10.1016/j.infsof.2011.05.007},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80051671632&doi=10.1016%2fj.infsof.2011.05.007&partnerID=40&md5=1afb075377c76c90d97d1c15c3062b4c},
abstract={Context: Extreme Programming (XP) is one of the most popular agile software development methodologies. XP is defined as a consistent set of values and practices designed to work well together, but lacks practices for project management and especially for supporting the customer role. The customer representative is constantly under pressure and may experience difficulties in foreseeing the adequacy of a release plan. Objective: To assist release planning in XP by structuring the planning problem and providing an optimization model that suggests a suitable release plan. Method: We develop an optimization model that generates a release plan taking into account story size, business value, possible precedence relations, themes, and uncertainty in velocity prediction. The running-time feasibility is established through computational tests. In addition, we provide a practical heuristic approach to velocity estimation. Results: Computational tests show that problems with up to six themes and 50 stories can be solved exactly. An example provides insight into uncertainties affecting velocity, and indicates that the model can be applied in practice. Conclusion: An optimization model can be used in practice to enable the customer representative to take more informed decisions faster. This can help adopting XP in projects where plan-driven approaches have traditionally been used. © 2011 Elsevier B.V. All rights reserved.},
author_keywords={Customer role;  Extreme programming;  Integer programming;  Project management},
keywords={Agile software development;  Business value;  Computational tests;  Customer representative;  Customer role;  EXtreme Programming;  Heuristic approach;  Informed decision;  Optimization models;  Planning problem;  Precedence relations;  Release planning;  Velocity estimation;  Velocity prediction, Customer satisfaction;  Heuristic methods;  Mathematical models;  Optimization;  Planning;  Project management;  Sales;  Software design, Integer programming},
}

@ARTICLE{Akbar201169,
author={Akbar, R. and Hassan, M.F. and Abdullah, A. and Safdar, S. and Qureshi, M.A.},
title={Directions and advancements in global software development: A summarized review of GSD and agile methods},
journal={Research Journal of Information Technology},
year={2011},
volume={3},
number={2},
pages={69-80},
doi={10.3923/rjit.2011.69.80},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960811279&doi=10.3923%2frjit.2011.69.80&partnerID=40&md5=2d63cc3b8a2339134fade8cfbffbcbf9},
abstract={The consequences of Global Software Development (GSD) on software development processes are evolutionary. It has reshaped and reformed the traditional software development approaches. The preferences of the developers and priorities of the client have tremendously been changed. A set of new generation of processes, agile methodologies, has been appeared in response to the GSD. Many researchers have presented a good quality study on agile based methodologies. In this study we have discussed the work of the various researchers on GSD. A review of the prominent study ofthe researchers and practitioners on agile based methodologies is presented. The combined effects of both GSD and agile methodologies on overall software development paradigms are discussed. Based on the analysis of existing models and frameworks produced by the researchers and practitioners, the study suggests the future directions of the software development processes as required by the software industry. This study provides a guideline to the researchers and actual practitioners in formalizing and shaping up their future research works. Finally, the research findings emphasize on the need of applied and practical approaches of software development and contribution of the researchers in this regard. © 2011 Academic Journals Inc.},
author_keywords={Agile;  Client;  Global software development (GSD);  Light weight processes;  Software processes},
}

@ARTICLE{Almeida2011311,
author={Almeida, L.H. and Pinheiro, P.R. and Albuquerque, A.B.},
title={Applying multi-criteria decision analysis to global software development with scrum project planning},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2011},
volume={6954 LNAI},
pages={311-320},
doi={10.1007/978-3-642-24425-4_41},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80054053178&doi=10.1007%2f978-3-642-24425-4_41&partnerID=40&md5=7d178ac5052f132471512aa093ed715a},
abstract={Distributed Software Development (DSD) projects have become a common reality for many organizations. Scrum is a consolidated Agile methodology and has been increasingly used in a distributed fashion. As distance makes difficult to interact and to cooperate effectively, it is paramount to use methodologies like Scrum that emphasizes communication, reduces coordination and control overhead. Successfully planning and managing the combined use of DSD and Scrum is a complex task and requires carefully planning. Despite the importance and complexity of this type of problem, there seems to be a lack of reports, in the literature, of models that could support managers dealing with such decision context. This paper applies a multi-criteria decision model on the choice of DSD Scrum project plans that have a better chance of success. The model, presented in [1], was developed using cognitive mapping and MACBETH[2]. The application of the model is demonstrated, followed by conclusion and future work. © 2011 Springer-Verlag.},
author_keywords={Global Software Development;  MACBETH;  Multi-Criteria Decision Analysis;  Project Management;  Scrum},
keywords={Agile Methodologies;  Cognitive mapping;  Complex task;  Coordination and Control;  Distributed software development;  Global software development;  MACBETH;  Multi-criteria decision analysis;  Multicriteria decision;  Project planning;  Project plans;  Scrum, Decision making;  Planning;  Project management;  Rough set theory, Software design},
}

@CONFERENCE{Kusumasari2011,
author={Kusumasari, T.F. and Supriana, I. and Surendro, K. and Sastramihardja, H.},
title={Collaboration model of software development},
journal={Proceedings of the 2011 International Conference on Electrical Engineering and Informatics, ICEEI 2011},
year={2011},
doi={10.1109/ICEEI.2011.6021769},
art_number={6021769},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80054032257&doi=10.1109%2fICEEI.2011.6021769&partnerID=40&md5=95ce06c73c956244f0f56ab719136fc6},
abstract={Software development is a series of processes activity involving more than one person, especially in medium to large software projects. Each activity of software development is carried out by various combination of different individual. Collaboration occurs in every phase of the process software development. The right team collaboration method is one of the important things in success software development. This research is focused to develop collaboration model of software development to meet time schedule, budget, scope, and software quality.The collaboration model of software development is generated from survey of collaboration method (about face to face and virtual collaboration) and software development methodology especially agile methodology. The direct collaboration was used in the software specification processes, and combination (with a direct and virtual) collaboration was used during software design, implementation, and validation. Team coordination in every process of software development was done with face to face method. The same artifacts were used in this collaboration model with some collaboration software tools. Combination between face to face and virtual communication was used in this model. The model is implemented in small case software development project. During the software development, some measurement is carried out. The measurement included the measurement of project completion time, cost, software specification, and software quality. The software is developed in time schedule (two months), cost under budged, and meet specification. In addition, the software has built a fairly good quality. Thus, this collaboration model good use in software development to achieved accuracy of schedule, cost, scope, and quality. © 2011 IEEE.},
author_keywords={collaboration;  collaboration method;  collaboration model;  software development;  softwareprocess},
keywords={Agile Methodologies;  collaboration;  collaboration method;  Collaboration models;  Collaboration Software Tools;  Face to face;  Process softwares;  Project completion;  Software development methodologies;  Software development projects;  Software project;  Software Quality;  Software Specification;  softwareprocess;  Team collaboration;  Team coordination;  Time schedules;  Virtual collaboration;  Virtual communication, Computer aided software engineering;  Computer software selection and evaluation;  Electrical engineering;  Information science;  Specifications, Software design},
}

@CONFERENCE{Guang-Yong2011217,
author={Guang-Yong, H.},
title={Study and practice of import Scrum agile software development},
journal={2011 IEEE 3rd International Conference on Communication Software and Networks, ICCSN 2011},
year={2011},
pages={217-220},
doi={10.1109/ICCSN.2011.6013698},
art_number={6013698},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80053143194&doi=10.1109%2fICCSN.2011.6013698&partnerID=40&md5=295a1c6100175c27dfd7060d024e97d1},
abstract={In recent years, Scrum has become an important software process method of the software industry. During the process of project team developing vehicle spare parts management system, import Scrum agile software development using Visual Studio 2010 as the Scrum process management templates. Adhering to the process of implementing Scrum principles, introduced before the team more successful technology practices, continuously expand and improve Scrum, form team custom Scrum template. By Scrum implementation, increases team productivity, product quality, final Team success of restructuring. © 2011 IEEE.},
author_keywords={implementingScrum;  Scrum;  Vehicle spare parts management system;  Visual Studio 2010},
keywords={Agile software development;  implementingScrum;  Process management;  Product quality;  Project team;  Scrum;  Software industry;  Software process;  Spare parts management;  Team success;  Visual studios, Agile manufacturing systems;  Communication;  Management;  Studios, Software design},
}

@CONFERENCE{Block2011234,
author={Block, M.},
title={Evolving to agile: A story of agile adoption at a small SaaS company},
journal={Proceedings - 2011 Agile Conference, Agile 2011},
year={2011},
pages={234-239},
doi={10.1109/AGILE.2011.16},
art_number={6005509},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80053027058&doi=10.1109%2fAGILE.2011.16&partnerID=40&md5=fe863845761cc1e5365b0683ee008f18},
abstract={Adopting agile practices is often a long process and one for which there is no existing formula for success. Some common patterns are beginning to emerge, but many of them focus on adoption within larger organizations. While we went through the process of adopting agile practices at IASTA, we experienced several challenges that seemed to be somewhat unique, or at least more common, in a small, organic growth organization. Finding advice and guidance on these challenges that could be implemented in our environment from the popular resources was challenging. This paper tells the story of our agile adoption process in hopes that other organizations in similar situations can learn from our experience. © 2011 IEEE.},
author_keywords={Agile adoption;  Scrum;  Scrumbut},
keywords={Adoption process;  Agile adoption;  Agile practices;  Organic growth;  Scrum;  Scrumbut},
}

@CONFERENCE{Martínez2011,
author={Martínez, Z.B.O. and Irrazabal, E. and Garzás, J.},
title={Toward improving Agile Mantema: Measurement, control and evaluation of maintenance projects in SMEs},
journal={Proceedings of the 6th Iberian Conference on Information Systems and Technologies, CISTI 2011},
year={2011},
art_number={5974302},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80052473619&partnerID=40&md5=9d22d336c657d0760dc8df66d0d4c501},
abstract={An increasing adoption of agile methodologies in small organizations dedicated to software development and maintenance is a reality. An agile methodology oriented to the context of maintenance and allows the adoption of a quality model is necessary. This methodology must consider the capabilities and characteristics of small software organizations and the recommendations of a quality model for defining its task or activities. The aim of this paper is to describe the improvements made to Agile Mantema methodology and its integration with tasks and activities of ISO/IEC 12207:2008 standard. This tasks and activities are related to measurement and control of maintenance projects. The objective is to obtain the maturity level 2 of ISO/IEC 15504-ISO/IEC 12207:2008 evaluation model in a future. This paper shows the experience in a small organization which implanted the proposed improvement in its maintenance area. Results demonstrate a good control in maintenance projects, agility, formality and simplicity in the methodological improvement proposed. © 2011 AISTI.},
author_keywords={Agil Mantema;  agile;  ISO/IEC 12208;  ISO/IEC 15504;  Maintenance;  process;  Scrum;  SME},
keywords={Agil Mantema;  agile;  ISO/IEC;  ISO/IEC 15504;  process;  Scrum;  SME, Agile manufacturing systems;  Information systems;  Software design, Computer software maintenance},
}

@CONFERENCE{Wan2011628,
author={Wan, J. and Luo, W. and Wan, X.},
title={Case study on Critical Success Factors of agile software process improvement},
journal={BMEI 2011 - Proceedings 2011 International Conference on Business Management and Electronic Information},
year={2011},
volume={1},
pages={628-631},
doi={10.1109/ICBMEI.2011.5917014},
art_number={5917014},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80052176238&doi=10.1109%2fICBMEI.2011.5917014&partnerID=40&md5=fe61d0250d8f6cf7f838f13c9b3b8166},
abstract={In this paper, we discuss agile software process improvement in KY company in the views their description of process management in current level and analysis of problems, design the KY company success factors model in organizational culture, systems, products, customers, markets, leadership, technology and other key dimensions, which is verified through questionnaire in KY company. © 2011 IEEE.},
author_keywords={Agile Methodology;  Critical Success Factor;  Software Process Improvement},
keywords={Agile Methodologies;  Agile softwares;  Critical success factor;  Current levels;  Key dimensions;  Organizational cultures;  Process management;  Software Process Improvement;  Success factors, Enterprise resource planning, Information management},
}

@ARTICLE{Gary2011945,
author={Gary, K. and Enquobahrie, A. and Ibanez, L. and Cheng, P. and Yaniv, Z. and Cleary, K. and Kokoori, S. and Muffih, B. and Heidenreich, J.},
title={Agile methods for open source safety-critical software},
journal={Software - Practice and Experience},
year={2011},
volume={41},
number={9},
pages={945-962},
doi={10.1002/spe.1075},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960129411&doi=10.1002%2fspe.1075&partnerID=40&md5=e802be2fd3e092f534930669fef7824d},
abstract={The introduction of software technology in a life-dependent environment requires the development team to execute a process that ensures a high level of software reliability and correctness. Despite their popularity, agile methods are generally assumed to be inappropriate as a process family in these environments due to their lack of emphasis on documentation, traceability, and other formal techniques. Agile methods, notably Scrum, favor empirical process control, or small constant adjustments in a tight feedback loop. This paper challenges the assumption that agile methods are inappropriate for safety-critical software development. Agile methods are flexible enough to encourage the right amount of ceremony; therefore if safety-critical systems require greater emphasis on activities, such as formal specification and requirements management, then an agile process will include these as necessary activities. Furthermore, agile methods focus more on continuous process management and code-level quality than classic software engineering process models. We present our experiences on the image-guided surgical toolkit (IGSTK) project as a backdrop. IGSTK is an open source software project employing agile practices since 2004. We started with the assumption that a lighter process is better, focused on evolving code, and only adding process elements as the need arose. IGSTK has been adopted by teaching hospitals and research labs, and used for clinical trials. Agile methods have matured since the academic community suggested almost a decade ago that they were not suitable for safety-critical systems; we present our experiences as a case study for renewing the discussion. © 2011 John Wiley & Sons, Ltd.},
author_keywords={agile methods;  open source;  safety;  software process},
keywords={Academic community;  Agile methods;  Agile practices;  Agile process;  Clinical trial;  Continuous process;  Development teams;  Empirical process;  Feed-back loop;  Formal Specification;  Formal techniques;  Image-guided;  open source;  Open source software projects;  Open sources;  Process elements;  Requirements management;  Research labs;  Safety critical software;  Safety critical systems;  Software engineering process;  software process;  Software technology, Agile manufacturing systems;  Computer software selection and evaluation;  Hospitals;  Models;  Safety engineering;  Security of data;  Security systems;  Software design;  Software reliability;  Teaching, Open systems},
}

@CONFERENCE{Baca2011149,
author={Baca, D. and Carlsson, B.},
title={Agile development with security engineering activities},
journal={Proceedings - International Conference on Software Engineering},
year={2011},
pages={149-158},
doi={10.1145/1987875.1987900},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960583200&doi=10.1145%2f1987875.1987900&partnerID=40&md5=f054ebb47be5818b54e476b1fc3ad244},
abstract={Agile software development has been used by industry to create a more flexible and lean software development process, i.e making it possible to develop software at a faster rate and with more agility during development. There are however concerns that the higher development pace and lack of documentation are creating less secure software. We have therefore looked at three known Security Engineering processes, Microsoft SDL, Cigatel touchpoints and Common Criteria and identified what specific security activities they performed. We then compared these activities with an Agile development process that is used in industry. Developers, from a large telecommunication manufacturer, were interviewed to learn their impressions on using these security activities in an agile development process. We produced a security enhanced Agile development process that we present in this paper. This new Agile process use activities from already established security engineering processes that provide the benefit the developers wanted but did not hinder or obstruct the Agile process in a significant way. © 2011 ACM.},
author_keywords={agile process;  development process;  security engineering;  software engineering},
keywords={Agile development;  Agile process;  Agile software development;  Common criteria;  Development process;  Faster rates;  MicroSoft;  SDL;  Secure software;  Security activities;  security engineering;  Software development process, Agile manufacturing systems;  Engineering;  Security systems, Software design},
}

@CONFERENCE{Nikitina2011159,
author={Nikitina, N. and Kajko-Mattsson, M.},
title={Developer-driven big-bang process transition from Scrum to Kanban},
journal={Proceedings - International Conference on Software Engineering},
year={2011},
pages={159-168},
doi={10.1145/1987875.1987901},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960608853&doi=10.1145%2f1987875.1987901&partnerID=40&md5=e01cb653c56dfc88f3ee023472d14043},
abstract={Even if most of the software process transitions have been made with the goal of improving software processes, only few experience reports recognize process transition as an important element of software process improvement. This paper reports on a developer-driven Big-Bang process transition from Scrum to Kanban, and recognizes it as part of process improvement effort in one software development company. The paper reports on the transition process, changes done to the process and results achieved. It rounds up with an initial model of a process transition, lessons learned from the process transition effort and suggestions for future work. © 2011 ACM.},
author_keywords={case study;  process transition;  software process improvement},
keywords={Experience report;  Process Improvement;  process transition;  Software process;  Software Process Improvement;  Transition process, Software design},
}

@CONFERENCE{Bowen2011165,
author={Bowen, J. and Reeves, S.},
title={UI-driven test-first development of interactive systems},
journal={Proceedings of the 2011 SIGCHI Symposium on Engineering Interactive Computing Systems, EICS 2011},
year={2011},
pages={165-174},
doi={10.1145/1996461.1996515},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960163485&doi=10.1145%2f1996461.1996515&partnerID=40&md5=ef3b8b2d9ae4aa75dce202d7670ca918},
abstract={Test-driven development (TDD) is a software development approach, which has grown out of the Extreme Programming and Agile movements, whereby tests are written prior to the implementation code which is then developed and refactored so that it passes the tests. Testfirst development (TFD) takes a similar approach, but rather than relying on the testers to infer the correct tests from the requirements (often expressed via use cases) they use models of the requirements as the basis for the tests (and as such have a more formal approach). One of the problems with both TDD and TFD is that is has proven hard to adapt it for interactive systems as it is not always clear how to develop tests to also support user interfaces (UIs). In this paper we propose a method which uses both formal models of informal UI design artefacts and formal specifications to derive abstract tests which then form the basis of a test-first development process. Copyright 2011 ACM.},
author_keywords={Formal specification;  Interactive system design;  Test-first development},
keywords={Agile movement;  EXtreme Programming;  Formal approach;  Formal model;  Formal Specification;  Interactive system;  Software development approach;  Test driven development;  Test-first development;  UI designs;  Use-model, Computer systems;  Software testing;  Specifications;  Systems analysis;  Testing;  User interfaces, Software design},
}

@CONFERENCE{Scharff2011274,
author={Scharff, C.},
title={Guiding global software development projects using Scrum and Agile with quality assurance},
journal={2011 24th IEEE-CS Conference on Software Engineering Education and Training, CSEE and T 2011 - Proceedings},
year={2011},
pages={274-283},
doi={10.1109/CSEET.2011.5876097},
art_number={5876097},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959946670&doi=10.1109%2fCSEET.2011.5876097&partnerID=40&md5=90eaba1f8391cd05bd74a2087b144b83},
abstract={This paper focuses on a global software development project where extended teams of students distributed across two to three countries, namely the US, Cambodia, India and Senegal, experienced the roles of developers, auditors and testers. Developers used Scrum and Agile to develop mobile applications for different mobile platforms with the support of different end-to-end tooling infrastructures. This paper isolates and focuses on the role of auditors. It describes the model of collaboration, the role of auditing in Agile and Scrum adherence, and the importance of tools to support quality assurance activities. Recommendations for a better involvement of auditors in Agile and Scrum projects and the expected benefits of their contribution are discussed. © 2011 IEEE.},
keywords={Cambodia;  Global software development;  Mobile applications;  Mobile platform;  Senegal, Education computing;  Engineering education;  Quality assurance;  Quality control;  Technical presentations, Software design},
}

@CONFERENCE{Bruegge2011549,
author={Bruegge, B. and Naughton, H. and Gluchow, M.},
title={SLPC++: Teaching software engineering project courses in industrial application landscapes - A tutorial},
journal={2011 24th IEEE-CS Conference on Software Engineering Education and Training, CSEE and T 2011 - Proceedings},
year={2011},
pages={549-551},
doi={10.1109/CSEET.2011.5876147},
art_number={5876147},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959918159&doi=10.1109%2fCSEET.2011.5876147&partnerID=40&md5=6466d2a7876eb74285a78dd65a66fda5},
abstract={Single large project courses (SLPC) with clients from industry have been established as capstone courses in many software engineering curricula. They are considered a good way of teaching industry relevant software engineering practices to students. However they are lacking in two regards. First, the results are often seen as exploratory prototypes by the client and are not intended for productive use. Second, the projects are usually not integrated into the application landscape of the client. Both of these challenges are of great practical importance in real software engineering projects. In this tutorial we cover the key factors for successfully carrying out our teaching approach called SLPC++ to address these issues. First we show how to initiate such a project course with real clients and problems. Then we describe how to carry out the project using a hybrid process model based on a combination of the Unified Process and Scrum. Finally we address the issues instructors face during such courses. Throughout the tutorial we use examples from a series of four project courses carried out in a highly successful collaboration with the Munich Airport. © 2011 IEEE.},
keywords={Capstone course;  Hybrid process;  Key factors;  Large project;  Munich airports;  Practical importance;  Project course;  Real softwares;  Software engineering curricula;  Software engineering practices;  Teaching approaches;  Teaching software;  Unified process, Curricula;  Education computing;  Engineering;  Engineering education;  Industrial applications;  Industry;  Software engineering;  Teaching, Technical presentations},
}

@CONFERENCE{Benestad2011766,
author={Benestad, H.C. and Hannay, J.E.},
title={A comparison of model-based and judgment-based release planning in incremental software projects},
journal={Proceedings - International Conference on Software Engineering},
year={2011},
pages={766-775},
doi={10.1145/1985793.1985901},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959868269&doi=10.1145%2f1985793.1985901&partnerID=40&md5=408c703452ec69cc0195d381be28c913},
abstract={Numerous factors are involved when deciding when to implement which features in incremental software development. To facilitate a rational and efficient planning process, release planning models make such factors explicit and compute release plan alternatives according to optimization principles. However, experience suggests that industrial use of such models is limited. To investigate the feasibility of model and tool support, we compared input factors assumed by release planning models with factors considered by expert planners. The former factors were cataloged by systematically surveying release planning models, while the latter were elicited through repertory grid interviews in three software organizations. The findings indicate a substantial overlap between the two approaches. However, a detailed analysis reveals that models focus on only select parts of a possibly larger space of relevant planning factors. Three concrete areas of mismatch were identified: (1) continuously evolving requirements and specifications, (2) continuously changing prioritization criteria, and (3) authority-based decision processes. With these results in mind, models, tools and guidelines can be adjusted to address better real-life development processes. © 2011 ACM.},
author_keywords={agile;  case study;  large development projects;  practitioners' mental models;  repertory grid;  scrum},
keywords={agile;  Development project;  Mental model;  Repertory grids;  scrum, Industrial applications, Software design},
}

@CONFERENCE{Cataldo2011161,
author={Cataldo, M. and Herbsleb, J.D.},
title={Factors leading to integration failures in global feature-oriented development: An empirical analysis},
journal={Proceedings - International Conference on Software Engineering},
year={2011},
pages={161-170},
doi={10.1145/1985793.1985816},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959859896&doi=10.1145%2f1985793.1985816&partnerID=40&md5=587bc6ef03a45b314e9c0d435ca48689},
abstract={Feature-driven software development is a novel approach that has grown in popularity over the past decade. Researchers and practitioners alike have argued that numerous benefits could be garnered from adopting a feature-driven development approach. However, those persuasive arguments have not been matched with supporting empirical evidence. Moreover, developing software systems around features involves new technical and organizational elements that could have significant implications for outcomes such as software quality. This paper presents an empirical analysis of a large-scale project that implemented 1195 features in a software system. We examined the impact that technical attributes of product features, attributes of the feature teams and crossfeature interactions have on software integration failures. Our results show that technical factors such as the nature of component dependencies and organizational factors such as the geographic dispersion of the feature teams and the role of the feature owners had complementary impact suggesting their independent and important role in terms of software quality. Furthermore, our analyses revealed that cross-feature interactions, measured as the number of architectural dependencies between two product features, are a major driver of integration failures. The research and practical implications of our results are discussed. © 2011 ACM.},
author_keywords={cross-feature interaction;  feature-oriented development;  global software development},
keywords={cross-feature interaction;  Development approach;  Empirical analysis;  Empirical evidence;  Feature-oriented;  Geographic dispersion;  Global software development;  Large-scale projects;  Organizational factors;  Product feature;  Software integration;  Software Quality;  Software systems;  Technical attributes;  Technical factors;  Two-product, Computer software selection and evaluation;  Integration;  Safety engineering, Software design},
}

@CONFERENCE{Sletholt20111,
author={Sletholt, M.T. and Hannay, J. and Pfahl, D. and Benestad, H.C. and Langtangen, H.P.},
title={A literature review of agile practices and their effects in scientific software development},
journal={Proceedings - International Conference on Software Engineering},
year={2011},
pages={1-9},
doi={10.1145/1985782.1985784},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959882379&doi=10.1145%2f1985782.1985784&partnerID=40&md5=304deb8b4200b90136d433ff1ae12651},
abstract={The nature of scientific research and the development of scientific software have similarities with processes that follow the agile manifesto: responsiveness to change and collaboration are of the utmost importance. But how well do current scientific software development processes match the practices found in agile development methods, and what are the effects of using agile practices in such processes? In order to investigate this, we conduct a literature review, focusing on evaluating the agility present in a selection of scientific software projects. Both projects with intentionally agile practices and projects with a certain degree of agile elements are taken into consideration. In the agility assessment, we define and utilize an agile mapping chart. The elements of the mapping chart are based on Scrum and XP, thus covering two of the most prominent agile reference models. We compared the findings of the literature review to results of a previously conducted survey. The comparison indicates that scientific software development projects adopting agile practices perceive their testing to be better than average. No difference to average projects was perceived regarding requirements-related activities. Future work includes an in-depth case study to further investigate the existence and impact of agility in three large scientific software projects, ultimately aiming at a better understanding of the particularities involved in developing scientific software. Copyright 2011 ACM.},
author_keywords={Agile software development;  Literature review;  Scientific software;  SCRUM;  XP},
keywords={Agile software development;  Literature reviews;  Scientific software;  SCRUM;  XP, Software testing, Software design},
}

@CONFERENCE{Alegría201160,
author={Alegría, J.A.H. and Bastarrica, M.C. and Bergel, A.},
title={Analyzing the scrum process model with AVISPA},
journal={Proceedings - International Conference of the Chilean Computer Science Society, SCCC},
year={2011},
pages={60-65},
doi={10.1109/SCCC.2010.18},
art_number={5750495},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79955931911&doi=10.1109%2fSCCC.2010.18&partnerID=40&md5=569d56296c867bca763ec86efc1fa4fb},
abstract={Scrum is a widely known agile software process model specifically designed for guiding non-technical activities in software development. This process is formally defined in EPF and adopted by several software companies around the world. But having a process definition does not necessarily mean that it is well specified. We have developed AVISPA, a tool for localizing error patterns in software process models specified with EPF. In this paper, we analyze the public community specification of Scrum using AVISPA and we report our findings. © 2010 IEEE.},
keywords={Agile softwares;  Error patterns;  Process definition;  Process model;  Public communities;  Software company;  Software development;  Software process models, Computer science;  Computer software, Software design},
}

@ARTICLE{Zhang201184,
author={Zhang, Y. and Patel, S.},
title={Agile model-driven development in practice},
journal={IEEE Software},
year={2011},
volume={28},
number={2},
pages={84-91},
doi={10.1109/MS.2010.85},
art_number={5456357},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78649730252&doi=10.1109%2fMS.2010.85&partnerID=40&md5=3c23cf54a458dc6b6975903998299f94},
abstract={This article presents practical experiences and lessons learned in defining and implementing an agile model-driven development process using the MDD tools chain. This process and its implementation inherit the merits of scrum, extreme programming, and the Unified Software Development Processes. The experience data demonstrates that combining MDD practices with agile development process can significantly reduce software development cycle time and increase productivity and quality. © 2006 IEEE.},
author_keywords={agile process;  MDD;  scrum;  UML modeling},
keywords={Agile development;  Agile process;  Experience data;  EXtreme Programming;  MDD;  Model driven development;  Practical experience;  scrum;  Software development cycles;  Software development process;  UML Modeling, Software design},
}

@ARTICLE{Gul2011111,
author={Gul, E.},
title={A fuzzy system model for task implementation in extreme programming process},
journal={Advances in Intelligent and Soft Computing},
year={2011},
volume={101},
pages={111-117},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976615914&partnerID=40&md5=6a8ead566a3a7099cc472e4ddeb745f8},
abstract={Software simulation enables us to see how a software process is working and gives indications of some of the parameters of the process. In this study the implementation of the tasks in extreme programming software process was modeled using a fuzzy system. The inputs of the system are defined as communication between pair programmers, the writing of unit tests and the coding rules, while the output is the implemented task. The defuzzified output of this fuzzy system provides quantitative results that can be used to determine to how good a task has been implemented. © Springer-Verlag Berlin Heidelberg 2011.},
author_keywords={Agile software development;  Extreme programming;  Fuzzy systems;  Software process models},
keywords={Computer software;  Fuzzy systems;  Semantic Web;  Semantics;  Software engineering, Agile software development;  EXtreme Programming;  Extreme programming process;  Fuzzy system modeling;  Quantitative result;  Software process;  Software process models;  Software simulation, Software design},
}

@CONFERENCE{Bavani2011206,
author={Bavani, R.},
title={Fixed price distributed agile projects in outsourced product testing - An experience report},
journal={Proceedings of International Conference on Software Engineering: Software Quality: The Road Ahead, CONSEG 2011},
year={2011},
pages={206-212},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901801019&partnerID=40&md5=21968762cd4f51b64df461680405b0f9},
abstract={Agile Software Development and the breed of Agile Methodologies (XP, SCRUM, DSDM, etc.) have gained popularity since 2001. Primarily founded as methodologies for software projects executed at a single location, Agile Methodologies have started showing promising results in multi-site projects too with many adopters and practitioners across the globe. Agile Software Development focuses on early delivery of working software to measure the progress of projects and hence to mitigate risks. It creates an environment that responds to changes by means of being flexible and nimble. It discourages creation of extensive documents that do not add any value to the customer. Distributed Agile Software Development and Testing is nothing but applying Agile Principles and Practices to software projects executed by teams located across geographies. In this context, service providers prefer Time & Material based pricing over Fixed Price model in order to avoid the risk of cost overruns induced by project changes. On the other hand, in order to reduce financial risks and to implement a fixed-scope on a mutually agreeable timeline or fixed-schedule, customers prefer to execute projects on fixed-cost basis. This paper is based on our experience in delivering a Fixed Price Distributed Agile project to one of our strategic customers. This paper presents the challenges in executing Fixed Price contracts, and the approach and real time course corrections we made to deliver this project. Besides, this paper discusses our Findings along with the Best Practices and Lessons Learned.},
keywords={Computer software selection and evaluation;  Risk assessment;  Sales;  Software design;  Software testing, Agile Methodologies;  Agile software development;  Experience report;  Fixed-price contracts;  Principles and practices;  Service provider;  Single location;  Software project, Costs},
}

@ARTICLE{Espinoza201153,
author={Espinoza, A. and Garbajosa, J.},
title={A study to support agile methods more effectively through traceability},
journal={Innovations in Systems and Software Engineering},
year={2011},
volume={7},
number={1},
pages={53-69},
doi={10.1007/s11334-011-0144-5},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79952252599&doi=10.1007%2fs11334-011-0144-5&partnerID=40&md5=6aefb5b13ca039c7f2c9d1032eae59cc},
abstract={Traceability is recognized to be important for supporting agile development processes. However, after analyzing many of the existing traceability approaches it can be concluded that they strongly depend on traditional development process characteristics. Within this paper it is justified that this is a drawback to support adequately agile processes. As it is discussed, some concepts do not have the same semantics for traditional and agile methodologies. This paper proposes three features that traceability models should support to be less dependent on a specific development process: (1) user-definable traceability links, (2) roles, and (3) linkage rules. To present how these features can be applied, an emerging traceability metamodel (TmM) will be used within this paper. Tm Msupports the definition of traceability methodologies adapted to the needs of each project. As it is shown, after introducing these three features into traceability models, two main advantages are obtained: 1) the support they can provide to agile process stakeholders is significantly more extensive, and 2) it will be possible to achieve a higher degree of automation. In this sense it will be feasible to have a methodical trace acquisition and maintenance process adapted to agile processes. © The Author(s) 2011.},
author_keywords={Agile methods;  Iso-24744:2007 SEMDM;  Metamodeling;  Storytest-driven development (SDD);  Test-driven development (TDD);  Traceability methodology},
keywords={Agile methods;  Iso-24744:2007 SEMDM;  Metamodeling;  Storytest-driven development (SDD);  Test-driven development (TDD);  Traceability methodology, Semantics},
}

@ARTICLE{Piho2011283,
author={Piho, G. and Tepandi, J. and Roost, M.},
title={Evaluation of the archetypes based development},
journal={Frontiers in Artificial Intelligence and Applications},
year={2011},
volume={224},
pages={283-295},
doi={10.3233/978-1-60750-688-1-283},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884910828&doi=10.3233%2f978-1-60750-688-1-283&partnerID=40&md5=0a57ba52f3995b7aa6928e74418df4d0},
abstract={Archetypes based development (ABD) utilizes archetypes and archetype patterns to increase dependability of software, reduces semantic heterogeneity of models and data types, improves maturity of the software development process, leads development of one-off software towards software factories, as well as satisfies the needs of small and medium sized software houses. ABD uses Zachman framework (ZF) for enterprise architecture in combination with business archetypes and archetype patterns as a central idea for the engineering of domains, requirements and software. We explain the ABD and evaluate it from the Bjørner's domain modelling, MDA (Model Driven Architecture), XP (Extreme Programming) and CMMI (Capability Maturity Model Integration) for Development perspectives. © 2011 The authors and IOS Press. All rights reserved.},
author_keywords={Archetypes and archetype patterns based development;  Capability Maturity Model Integration (CMMI) for Development;  domain engineering;  Extreme Programming (XP);  Model Driven Architecture (MDA);  Zachman Framework (ZF)},
keywords={Semantics;  Software architecture;  Software engineering, Archetype patterns;  Capability maturity model integration;  Domain engineering;  EXtreme Programming;  Model driven architectures;  Zachman framework, Software design},
}

@CONFERENCE{Krishna201159,
author={Krishna, V.},
title={Align correctly your current team with scrum model},
journal={Proceedings of International Conference on Software Engineering: Software Quality: The Road Ahead, CONSEG 2011},
year={2011},
pages={59-62},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901789257&partnerID=40&md5=b3dc62c06503cb00c2f6e8fa2d5bd66e},
abstract={The Scrum consists of mainly three key roles: Product Owner, ScrumMaster and Scrum Team. However in general a typical team structure contains - Developers, Team/Tech Lead, Testers, Test Lead, Project Manager, Technical architect, Project Sponsor, Project Director, Quality Manager, etc. This list may vary depending upon projects and organizations. Consequently, it becomes essential to align the existing team with Scrum model.},
keywords={Computer software selection and evaluation;  Management;  Software engineering, Project managers;  Project sponsors;  Quality managers;  Team structures, Human resource management},
}

@ARTICLE{Op'tLand2011110,
author={Op't Land, M. and Krouwel, M.R. and Van Dipten, E. and Verelst, J.},
title={Exploring normalized systems potential for Dutch MoD's agility (a proof of concept on flexibility, time-to-market, productivity and quality)},
journal={Lecture Notes in Business Information Processing},
year={2011},
volume={89 LNBIP},
pages={110-121},
doi={10.1007/978-3-642-23388-3_5},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-80053320499&doi=10.1007%2f978-3-642-23388-3_5&partnerID=40&md5=fb284ad8bdbce5475f222b438e0c0fdd},
abstract={Both the Command and Control Support Centre (C2SC) of the Dutch Ministry of Defense, and Capgemini are constantly exploring better ways of building and maintaining information systems which effectively support strategy and operations of an enterprise. In a Proof of Concept conducted in March and April 2011, together with University of Antwerp, they evaluated the possibilities of the Normalized Systems approach for building information systems. In 50 man days not only a system was built that would normally be built in 100-150 man days, also a major technology change had taken place (in week 2 Cocoon and EJB2 were replaced by Struts and EJB3) and changes in the (data) models were instantly processed, even in the last week of development. With these results, Normalized Systems is considered a key enabler in rapid enterprise transformation. Moreover, because Normalized Systems makes it possible to have a continuous link from enterprise (process) modeling to software development and a short feedback loop from system development back to enterprise modeling, it is also considered a key enabler for agile enterprise engineering. This will also enable shortening the typical cycles of enterprise governance. © 2011 Springer-Verlag.},
author_keywords={Agile Enterprise Engineering;  case study;  DEMO;  Ministry of Defense;  Normalized Systems;  SCRUM},
keywords={Command and control systems;  Industry;  Information systems;  Research;  Software design, Agile enterprise;  Building information system;  Capgemini;  Command and control;  DEMO;  Dutch ministry of defense;  Enterprise governance;  Enterprise modeling;  Enterprise transformation;  Feed-back loop;  Ministry of Defense;  Proof of concept;  SCRUM;  System development;  Systems approach;  Technology change;  Time-to-market;  University of Antwerp, Agile manufacturing systems},
}

@CONFERENCE{Shrivastava2010671,
author={Shrivastava, D.P. and Lakshminarayan, R.V. and Sujatha, S.V.S.L.},
title={New engineering technique of software development},
journal={ICCTD 2010 - 2010 2nd International Conference on Computer Technology and Development, Proceedings},
year={2010},
pages={671-676},
doi={10.1109/ICCTD.2010.5646448},
art_number={5646448},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78650610640&doi=10.1109%2fICCTD.2010.5646448&partnerID=40&md5=93d529febcc77b3de20b71dc2cb92f9b},
abstract={Computer software is an engine of growth of social-economy development which requires new engineering techniques and strategies. The demand for quality in software applications has grown. Hence as software becomes more integrated into our lives, the effects of software failures become more acute. Testing is an essential part of software development providing an indicator of the quality of the software. Testing remains the primary way to improve reliability of software. Billions of dollars are spent on testing in the software industry, as testing usually accounts for more than half the cost of software development. The demand of new engineering technologies for quality in software applications has grown and awareness of software testing-related issues plays an important role of all testing levels. The unit level of testing has undergone the most recent and most dramatic change. With the introduction of new agile (aka, "lightweight") development methods, such as XP (eXtreme Programming) came the idea of Test-Driven Development (TDD). The TDD is a software development engineering technique that melds program design, implementation and testing in a series micro-iterations that focus on simplicity and feedback. Programmer tests are created using a unit testing framework and are 100% automated. This paper contributes in the development of TDD framework for testing of unit, which includes new engineering concepts and the methodologies issues in form of TDD techniques using V design model especially for engineering education, industrial training and software development. © 2010 IEEE.},
author_keywords={ATCUT;  eXtreme programming;  Metrics;  TDD;  Test case;  Unit testing},
keywords={ATCUT;  EXtreme Programming;  Metrics;  TDD;  Test case;  Unit testing, Computer software selection and evaluation;  Engineering;  Engineering education;  Software reliability;  Software testing, Software design},
}

@CONFERENCE{O'Connor2010305,
author={O'Connor, C.P.},
title={Better planning via tasking as a team},
journal={Proceedings of the ACM International Conference Companion on Object Oriented Programming Systems Languages and Applications Companion, SPLASH '10},
year={2010},
pages={305-306},
doi={10.1145/1869542.1869624},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78650083688&doi=10.1145%2f1869542.1869624&partnerID=40&md5=45fa6f2ebebf349edc308f9cebdfa874},
abstract={Do you find your story estimation sessions taking too much time away from development? Do you have stories that go over their estimates by a significant amount or turn into multiple stories? Then this session is for you. In this session we will look at various methods to improve tasking by better leveraging the team as a whole to strive toward more clearly defined and more granular stories. We will address common pitfalls such as stories that are really epics, overly vague stories as well as how to identify good stories and improve the definition of done for your stories. © 2010 ACM.},
author_keywords={Agile development;  Agile teams;  Scrum;  XP},
keywords={Agile development;  Agile teams;  Scrum;  XP, Agile manufacturing systems;  Computer systems programming, Object oriented programming},
}

@ARTICLE{Porrawatpreyakorn201094,
author={Porrawatpreyakorn, N. and Quirchmayr, G. and Chutimaskul, W.},
title={A prototype for the support of integrated software process development and improvement},
journal={Communications in Computer and Information Science},
year={2010},
volume={114 CCIS},
pages={94-105},
doi={10.1007/978-3-642-16699-0_11},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78650150085&doi=10.1007%2f978-3-642-16699-0_11&partnerID=40&md5=9ce912c5eeaf125e84e6f57a64740dca},
abstract={An efficient software development process is one of key success factors for quality software. Not only can the appropriate establishment but also the continuous improvement of integrated project management and of the software development process result in efficiency. This paper hence proposes a software process maintenance framework which consists of two core components: an integrated PMBOK-Scrum model describing how to establish a comprehensive set of project management and software engineering processes and a software development maturity model advocating software process improvement. Besides, a prototype tool to support the framework is introduced. © 2010 Springer-Verlag.},
author_keywords={Project Management;  Software Development;  Software Process Improvement;  Software Process Maintenance},
keywords={Continuous improvements;  Core components;  Integrated project;  Integrated software;  Key success factors;  Maturity model;  Prototype tools;  Quality software;  Software Development;  Software development process;  Software engineering process;  Software process;  Software Process Improvement, Computer software maintenance;  Information technology;  Maintainability;  Project management, Software design},
}

@CONFERENCE{Scharff2010388,
author={Scharff, C. and Gotel, O. and Kulkarni, V.},
title={Transitioning to distributed development in students' global software development projects: The role of agile methodologies and end-to-end tooling},
journal={Proceedings - 5th International Conference on Software Engineering Advances, ICSEA 2010},
year={2010},
pages={388-394},
doi={10.1109/ICSEA.2010.66},
art_number={5614989},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78649881475&doi=10.1109%2fICSEA.2010.66&partnerID=40&md5=3228081c175ceadba0160ff759ff4e62},
abstract={From 2005 to 2008, we explored different models of collaboration in student software development projects. In the past, project roles were distributed across students in the US, Cambodia, India and Thailand. What was common to our previous models was the co-location of developers, the client and quality assurance roles being the ones that were commonly distributed. A loose waterfall software development process was always used and activities were supported by a mashup of technologies. In 2009, we distributed the developers across the US, India and Senegal to form a truly distributed developer role. We also switched to the use of Agile methodologies with Scrum and to an end-to-end tooling solution, specifically the IBM Rational Team Concert environment. This paper describes the new model and reports on the evolution of our process and tooling infrastructure. In particular, it investigates how well Agile and Scrum practices supported our model and how important tooling is to their implementation. Initial guidelines for other educators are provided. © 2010 IEEE.},
author_keywords={Agile methodologies;  Global software development;  Scrum},
keywords={Agile Methodologies;  Cambodia;  Colocations;  Distributed development;  Global software development;  Mash-up;  New model;  Project roles;  Scrum;  Senegal;  Software development process;  Software development projects;  Thailand;  Tooling solutions, Quality assurance;  Students, Software design},
}

@ARTICLE{Mohan2010316,
author={Mohan, K.K. and Harun, R.S. and Srividya, A. and Verma, A.K.},
title={Quality framework for reliability improvement in SAP netweaver business intelligence environment through lean software development-A practical perspective},
journal={International Journal of Systems Assurance Engineering and Management},
year={2010},
volume={1},
number={4},
pages={316-323},
doi={10.1007/s13198-011-0029-x},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84555191184&doi=10.1007%2fs13198-011-0029-x&partnerID=40&md5=fadfdd95622c0e59361f78dc373a2d7d},
abstract={Software development life cycle (SDLC) is used in software projects, similarly SAP Implementation projects use ASAP methodology. Requirements engineering (RE) is a tool which helps project to manage their requirements properly. Unified modeling language (UML) helps in robust design of the project. LEAN is a tool particularly very effective in eliminating waste in software projects. The defects found at maintenance level in software projects are generally very expensive when the defects flow from requirements and design level. Defects found at support level will cause serious technical issues and eventually effect business decisions. Handling this scenario in SAP BI environment via LEAN methods offers us rich dividends. By using RE, UML, LEAN together in SAP BI environment, this paper describes a new problem- solution framework to handle issues occurring at the maintenance levels with analysis on effort, cost and efficiency for reliability improvement. © 2011 The Society for Reliability Engineering.},
author_keywords={Jidoka;  LEAN;  Muda;  Requirements engineering (RE);  Root cause analysis (RCA) software review;  SAP BI;  Software development life cycle (SDLC);  Unified modeling language (UML)},
keywords={Jidoka;  LEAN;  Muda;  Root cause analysis;  Software development life cycle (SDLC);  Unified Modeling, Computer software maintenance;  Computer software selection and evaluation;  Defects;  Life cycle;  Maintainability;  Reliability analysis;  Requirements engineering;  Software reliability;  Unified Modeling Language, Software design},
}

@ARTICLE{Esfahani2010424,
author={Esfahani, H.C. and Yu, E. and Cabot, J.},
title={Situational evaluation of method fragments: An evidence-based goal-oriented approach},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2010},
volume={6051 LNCS},
pages={424-438},
doi={10.1007/978-3-642-13094-6_33},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79956330734&doi=10.1007%2f978-3-642-13094-6_33&partnerID=40&md5=33e144d7f4e6238c782f96496c5be1a0},
abstract={Despite advances in situational method engineering, many software organizations continue to adopt an ad-hoc mix of method fragments from well-known development methods such as Scrum or XP, based on their perceived suitability to project or organizational needs. With the increasing availability of empirical evidence on the success or failure of various software development methods and practices under different situational conditions, it now becomes feasible to make this evidence base systematically accessible to practitioners so that they can make informed decisions when creating situational methods for their organizations. This paper proposes a framework for evaluating the suitability of candidate method fragments prior to their adoption in software projects. The framework makes use of collected knowledge about how each method fragment can contribute to various project objectives, and what requisite conditions must be met for the fragment to be applicable. Pre-constructed goal models for the selected fragments are retrieved from a repository, merged, customized with situational factors, and then evaluated using a qualitative evaluation procedure adapted from goal-oriented requirements engineering. © Springer-Verlag Berlin Heidelberg 2010.},
author_keywords={Goal-oriented modeling;  Method evaluation;  Situational method engineering;  Software development methodology},
keywords={Development method;  Empirical evidence;  Evaluation of methods;  Goal models;  Goal oriented modeling;  Goal-oriented approach;  Goal-oriented requirements engineering;  Informed decision;  Method evaluation;  Project objectives;  Qualitative evaluations;  Situational factors;  Situational method engineering;  Software development methodology;  Software development methods;  Software organization;  Software project, Information systems;  Models;  Requirements engineering;  Software design;  Systems engineering, Quality control},
}

@BOOK{Wildt201031,
author={Wildt, D. and Prikladnicki, R.},
title={Transitioning from distributed and traditional to distributed and agile: An experience report},
journal={Agility Across Time and Space: Implementing Agile Methods in Global Software Projects},
year={2010},
pages={31-46},
doi={10.1007/978-3-642-12442-6_3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885124716&doi=10.1007%2f978-3-642-12442-6_3&partnerID=40&md5=1a6d4c5bb2e8ec9a01c48de465332ea2},
abstract={Global companies that experienced extensive waterfall phased plans are trying to improve their existing processes to expedite team engagement. Agile methodologies have become an acceptable path to follow because it comprises project management as part of its practices. Agile practices have been used with the objective of simplifying project control through simple processes, easy to update documentation and higher team iteration over exhaustive documentation, focusing rather on team continuous improvement and aiming to add value to business processes. The purpose of this chapter is to describe the experience of a global multinational company on transitioning from distributed and traditional to distributed and agile. This company has development centers across North America, South America and Asia. This chapter covers challenges faced by the project teams of two pilot projects, including strengths of using agile practices in a globally distributed environment and practical recommendations for similar endeavors. © 2010 Springer-Verlag Berlin Heidelberg.},
}

@CONFERENCE{DeJager2010231,
author={De Jager, G.P. and Huisman, H.M. and Kruger, H.A.},
title={A Data Envelopment Analysis approach for evaluating efficiency of the Extreme Programming system development methodology},
journal={Proceedings of the IADIS International Conference Information Systems 2010},
year={2010},
pages={231-238},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860761616&partnerID=40&md5=c3c647d206f1802f51898826bff32a03},
abstract={Many organizations have deployed system development methodologies in order to improve information systems development. Various factors influencing the successful adoption of system development methodologies have been identified by numerous studies. However, a need was identified to evaluate the post-implementation efficiency of system development methodologies. The aim of this paper is to present theoretical and empirical background for an evaluation model to measure the efficiency of a software development methodology after implementation. A linear programming method called Data Envelopment Analysis was used to compare the application of the Extreme Programming system development methodology in different organizations. According to the results of the analysis, it was possible to classify organizations' use of Extreme Programming as efficient or inefficient. Recommendations could be made to increase efficiency of individual organizations that were classified as inefficient. © 2010 IADIS.},
author_keywords={Data Envelopment Analysis;  Extreme Programming;  Information systems;  System development methodology},
keywords={Deployed systems;  Evaluation models;  EXtreme Programming;  Information systems development;  Post-implementation;  Software development methodologies;  System development methodologies, Data envelopment analysis;  Information systems;  Societies and institutions;  Software engineering, Efficiency},
}

@CONFERENCE{Fernandes2010391,
author={Fernandes, J.M. and Almeida, M.},
title={Classification and comparison of agile methods},
journal={Proceedings - 7th International Conference on the Quality of Information and Communications Technology, QUATIC 2010},
year={2010},
pages={391-396},
doi={10.1109/QUATIC.2010.71},
art_number={5655659},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78751561614&doi=10.1109%2fQUATIC.2010.71&partnerID=40&md5=b61c1b64a12c3310a65dc5b3898bb9fb},
abstract={This manuscript describes a technique and its tool support to perform comparisons on agile methods, based on a set of relevant features and attributes. This set includes attributes related to four IEEE's Software Engineering Body of Knowledge (SWEBOK) Knowledge Areas (KAs) and to the agile principles defined in the Agile Manifesto. With this set of attributes, by analysing the practices proposed by each method, we are able to assess (1) the coverage degree for the considered KAs and (2) the agility degree. In this manuscript, the application of the technique is exemplified in comparing extreme Programming (XP) and Scrum. © 2010 IEEE.},
keywords={Agile methods;  Coverage degree;  EXtreme Programming;  Knowledge areas;  Software engineering body of knowledge;  Tool support, Software engineering, Information technology},
}

@CONFERENCE{AL-Allaf2010,
author={AL-Allaf, O.N.A.},
title={Agile software development processes in large web development enterprises},
journal={Proceedings of the IASTED International Conference on Software Engineering and Applications, SEA 2010},
year={2010},
doi={10.2316/P.2010.725-039},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862303287&doi=10.2316%2fP.2010.725-039&partnerID=40&md5=cff3d5f3cd42e8dbca17bf464eba0f12},
abstract={Agile processes can be applied to any software process for effective response to changing requirements during the development process and effective communication among stakeholders. There is lack of surveys related to agile processes in large web development enterprises in the world and the current state of adoption of agile processes by large enterprises is still unknown. A survey has been conducted in this research based on questionnaire and interviews in five large Jordanian enterprises to examine the process models adopted by these enterprises, the extent to which these enterprises are using agile processes, and finally to examine the problems associated with large web applications' development. The results of this survey showed that there is a weakness in adoption of agile processes in large Jordanian enterprises and the Extreme Programming (XP) is well known agile process by the developers working in these enterprises. According to survey results, we suggested recommendations related to adoption of XP agile process in large enterprises.},
author_keywords={Extreme Programming (XP);  Large web applications;  Software development;  Software methodologies},
keywords={Agile process;  Agile software development process;  Development process;  Effective communication;  EXtreme Programming;  Process model;  Software methodologies;  Software process;  WEB application;  Web development, Software design;  Software engineering;  Surveys;  World Wide Web, Industry},
}

@CONFERENCE{Tian2010160,
author={Tian, D. and Wen, J. and Liu, Y. and Ma, N. and Wei, H.},
title={A Test-Driven Web application model based on layered approach},
journal={Proceedings 2010 IEEE International Conference on Information Theory and Information Security, ICITIS 2010},
year={2010},
pages={160-163},
doi={10.1109/ICITIS.2010.5688746},
art_number={5688746},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79951608084&doi=10.1109%2fICITIS.2010.5688746&partnerID=40&md5=debc10d6a57cc26bbe2f53b42ec9e57a},
abstract={The eXtreme Programming (XP) software development methodology has received considerable industrial attention in recent years. As a methodology which is highly responsive to customer's changing requirements, XP has been widely used in Web application developing process. As a key characteristic of XP, Test-Driven Development(TDD) can be used for refactoring the new code and ensuring the quality of the Web application software. At the same time, Web application make use of the layered approach to enhance the scalability. As to the guideline of using the layered approach with XP methodology, no studies has been found so far. Based on the layered approach, this paper proposes a Test-Driven model for Web application. What's more, this paper identifies what kinds of test should be done in every layer of the Web application. © 2010 IEEE.},
author_keywords={Extreme programming;  Layered approach;  Test model;  Test-driven development},
keywords={Developing process;  EXtreme Programming;  Key characteristics;  Layered approach;  Refactorings;  Software development methodologies;  Test model;  Test-driven development;  WEB application, Information theory;  Security of data;  Software design;  Testing, World Wide Web},
}

@CONFERENCE{Kanwal2010,
author={Kanwal, F. and Junaid, K. and Fahiem, M.A.},
title={A hybrid software architecture evaluation method for FDD - An agile process model},
journal={2010 International Conference on Computational Intelligence and Software Engineering, CiSE 2010},
year={2010},
doi={10.1109/CISE.2010.5676863},
art_number={5676863},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79951593516&doi=10.1109%2fCISE.2010.5676863&partnerID=40&md5=c1b5fc23692bbc934e46f21de1055b87},
abstract={The software development industry suffers from the delay in project completion time due to heavy documentation requirements of traditional process models. To overcome these delays, agile process models are getting a wide acceptance and popularity in the industry. The beauty of these models is light weight documentation and heavy intercommunications. Due to an emphasis of these models on rapid development, there is an ever increasing need of architecture evaluation. A single software architecture evaluation method (SAEM) capable of preserving the agility does not exist at the moment. In this paper, we have proposed a hybrid SAEM for feature driven development (FDD) agile process model. The proposed SAEM is hybrid of quality attribute workshop (QAW), architecture tradeoff analysis method (ATAM) and active review for intermediate designs (ARID). ©2010 IEEE.},
author_keywords={Agile process models;  ARID;  ATAM;  FDD;  QAW;  Software architecture evaluation methods},
keywords={Agile process model;  ARID;  ATAM;  FDD;  QAW;  Software architecture evaluation methods, Artificial intelligence;  Software design, Software architecture},
}

@CONFERENCE{Rong2010316,
author={Rong, G. and Shao, D. and Zhang, H.},
title={SCRUM-PSP: Embracing process agility and discipline},
journal={Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
year={2010},
pages={316-325},
doi={10.1109/APSEC.2010.44},
art_number={5693208},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79951766476&doi=10.1109%2fAPSEC.2010.44&partnerID=40&md5=f05d7b06edcd281046e693cbcb32c101},
abstract={With the research and debates on software process, the mainstream software processes can be grouped into two categories, the plan-driven (disciplined) processes and the agile processes. In terms of the classification, personal software process (PSP) is a typical plan-driven process while SCRUM is an agile-style instance. Although they are distinct from each other per se, our research found that PSP and SCRUM may also complement each other when SCRUM provides an agile process management framework, and PSP provides the skills and disciplines that a qualified team member needs to estimate, plan and manage his/her job. This paper proposes an integrated process model, SCRUM-PSP, which combines the strengths of each. We also verified that this integrated process by adopting it into a real project environment where typical agile processes are favored, i.e. change-prone requirements, rapid development, fast delivery, etc. As a result, manageability and predictability which traditional plan-driven processes usually benefit can also be achieved. The work described in this paper is a worthy attempt to embrace both process agility and discipline. © 2010 IEEE.},
author_keywords={PSP SCRUM integration},
keywords={Agile process;  Integrated process;  Integrated process model;  Personal software process;  PSP SCRUM integration;  Rapid development;  Real projects;  Software process;  Team members, Software engineering},
}

@CONFERENCE{DeJager2010,
author={De Jager, G.P. and Huisman, H.M. and Kruger, H.A.},
title={A quantitative model to evaluate post-implementation efficiency of Scrum},
journal={Proceedings of 9th International Conference on New Trends in Software Methodologies, Tools and Techniques, SoMeT_10},
year={2010},
page_count={19},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861557950&partnerID=40&md5=c72df0b4fad99ba609c24dfc5576c869},
abstract={In order to improve the information system development process many companies have adopted system development methodologies. Various evaluation methods and frameworks exist in the literature to assist companies during their adoption phase. However, a need was identified to evaluate the efficiency of a system development methodology after adoption. In an era where there is a reappraisal of the usefulness of system development methodologies it is essential to have a valid and reliable method of evaluation. The aim of this paper is to propose an evaluation model to measure post-implementation efficiency of a software development methodology. Data Envelopment Analysis, a linear programming method, is investigated as a means to evaluate efficiency of a SDM after adoption. This paper focus on the Scrum software development methodology as it is a popular methodology in use today. With Data Envelopment Analysis it is possible to classify different companies' use of Scrum as efficient or inefficient. The results also make it possible to identify specific areas in a company that needs improvement. These individual recommendations can be applied to increase the post-implementation efficiency of a company's systems development methodology.},
author_keywords={Data envelopment analysis;  Information systems;  Scrum;  System development methodology},
keywords={Evaluation Method;  Evaluation models;  Information system development process;  Post-implementation;  Quantitative models;  Scrum;  Software development methodologies;  Specific areas;  System development methodologies;  Systems development, Data envelopment analysis;  Industry;  Information systems;  Rating;  Software engineering, Efficiency},
}

@CONFERENCE{Yang2010889,
author={Yang, G. and Yu, S. and Chen, G. and Chu, J.},
title={Agile industrial design management based on Scrum},
journal={2010 IEEE 11th International Conference on Computer-Aided Industrial Design and Conceptual Design, CAID and CD'2010},
year={2010},
volume={2},
pages={889-891},
doi={10.1109/CAIDCD.2010.5681880},
art_number={5681880},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79951636651&doi=10.1109%2fCAIDCD.2010.5681880&partnerID=40&md5=6411b24e240b63a6c646f49aa704143f},
abstract={While the business of Yangtze River and Pearl River delta in China is booming, most OEM enterprises attempt to maintain or exploit market through rapid development or innovation in the form of customized design. With the design period is cut down greatly, in order to improve design quality on the current situation of industrial design in China, this paper proposes the method of agile industrial design, and builds the agility model with three major factors of dynamic team, lightweight process, and flexible methods. The method is adapted to the conceptual design process filled with uncertainty, especially in creativity and demand. Based on it, the paper introduces Scrum used in software development and analyzes its usability in the industrial design. Finally, agile industrial design management mode based on Scrum is constructed. It has solved the problem of rapid response ability in meeting the quality requirements of customers. This mode helps enterprises improve the scientific management in agile design environment. © 2010 IEEE.},
author_keywords={Agile design;  Design management;  Industrial design;  Scrum},
keywords={Agile design;  Current situation;  Design management;  Design period;  Design Quality;  Industrial design;  Major factors;  Mode-based;  Pearl River delta;  Quality requirements;  Rapid development;  Rapid response;  Scientific management;  Scrum;  Software development;  Yangtze River, Conceptual design;  Industry;  Product design, Software design},
}

@CONFERENCE{Suganya2010,
author={Suganya, G. and Sahaya Arul Mary, S.A.},
title={Progression towards agility: A comprehensive survey},
journal={2010 2nd International Conference on Computing, Communication and Networking Technologies, ICCCNT 2010},
year={2010},
doi={10.1109/ICCCNT.2010.5591769},
art_number={5591769},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78549293081&doi=10.1109%2fICCCNT.2010.5591769&partnerID=40&md5=60365420283f3635fd6fac16f7d7808f},
abstract={In software development, there are two broad schools of thought: the traditional sequential or the "Waterfall method" and the iterative or the "Agile method". This paper aims to discuss about the pitfalls of traditional methods in developing a product and the application of agile methods to improve the process. Agile aims to deliver a customer-driven product in time and budget. The paper is supported by the views of developers who had moved to agile from waterfall models.},
author_keywords={Iterative model;  Scrum;  Waterfall model;  XP},
keywords={Agile methods;  Customer-driven;  Iterative model;  Scrum;  Software development;  Waterfall methods;  Waterfall model;  XP, Software design},
}

@CONFERENCE{Hannay2010,
author={Hannay, J.E. and Benestad, H.C.},
title={Perceived productivity threats in large agile development projects},
journal={ESEM 2010 - Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement},
year={2010},
doi={10.1145/1852786.1852806},
art_number={1852806},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78149250176&doi=10.1145%2f1852786.1852806&partnerID=40&md5=cc31fba11a8ee45c84b831953c718058},
abstract={Applying agile methodology in large software development projects introduces many challenges. For example, one may expect that the combination of autonomous teams and the necessity for an overall organizational control structure may lead to conflicts, and one may expect that Agile's informal means of knowledge sharing breaks down as the number of project participants increases. Such issues may in turn compromise the project's productivity. In order to better understand potential threats to productivity in large agile development projects, we conducted repertory grid interviews with 13 project members on their perceptions of threats to productivity. The project was a large software development project consisting of 11 Scrum teams from three different subcontractors. The repertory grid sessions produced 100 issues, which were content analyzed into 10 main problem areas: (1) Restraints on collaboration due to contracts, ownership, and culture, (2) Architectural and technical qualities are given low priority, (3) Conflicts between organizational control and flexibility, (4) Volatile and late requirements from external parties, (5) Lack of a shared vision for the end product, (6) Limited dissemination of functional knowledge, (7) Excessive dependencies within the system, (8) Overloading of key personnel, (9) Difficulties in maintaining well-functioning technical environments, (10) Difficulties in coordinating test and deployment with external parties. Using critical-case reasoning, we claim that projects deploying agile practices in projects with less favorable conditions than those enjoyed in the current project, and that are larger and more complex, are likely to face similar challenges. © 2010 ACM.},
author_keywords={agile;  case study;  large development projects;  practitioners' mental models;  repertory grid},
keywords={agile;  case study;  large development projects;  Mental model;  Repertory grids, Productivity, Software design},
}

@CONFERENCE{Zazworka2010,
author={Zazworka, N. and Stapel, K. and Knauss, E. and Shull, F. and Basili, V.R. and Schneider, K.},
title={Are developers complying with the process: An XP study},
journal={ESEM 2010 - Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement},
year={2010},
doi={10.1145/1852786.1852805},
art_number={1852805},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78149271080&doi=10.1145%2f1852786.1852805&partnerID=40&md5=7df562eb1e05d3e05bae8e1a1bbbf0e0},
abstract={Adapting new software processes and practices in organizational and academic environments requires training the developers and validating the applicability of the newly introduced activities. Investigating process conformance during training and understanding if programmers are able and willing to follow the specific steps are crucial to evaluating whether the process improves various software product quality factors. In this paper we present a process model independent approach to detect process non-conformance. Our approach is based on non-intrusively collected data captured by a version control system and provides the project manager with timely updates. Further, we provide evidence of the applicability of our approach by investigating process conformance in a five day training class on eXtreme Programming (XP) practices at the Leibniz Universität Hannover. Our results show that the approach enabled researchers to formulate minimal intrusive methods to check for conformance and that for the majority of the investigated XP practices violations could be detected. © 2010 ACM.},
author_keywords={process conformance;  process improvement;  XP programming},
keywords={Academic environment;  EXtreme Programming;  process conformance;  Process Improvement;  Process model;  Process non-conformance;  Project managers;  Software process;  Software product quality;  Training class;  Version control system;  XP programming, Project management;  Software engineering, Computer software selection and evaluation},
}

@ARTICLE{Pino20101662,
author={Pino, F.J. and Pedreira, O. and García, F. and Luaces, M.R. and Piattini, M.},
title={Using Scrum to guide the execution of software process improvement in small organizations},
journal={Journal of Systems and Software},
year={2010},
volume={83},
number={10},
pages={1662-1677},
doi={10.1016/j.jss.2010.03.077},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77956063491&doi=10.1016%2fj.jss.2010.03.077&partnerID=40&md5=943f88f55250c255928ddc070916eefc},
abstract={For software process improvement - SPI - there are few small organizations using models that guide the management and deployment of their improvement initiatives. This is largely because a lot of these models do not consider the special characteristics of small businesses, nor the appropriate strategies for deploying an SPI initiative in this type of organization. It should also be noted that the models which direct improvement implementation for small settings do not present an explicit process with which to organize and guide the internal work of the employees involved in the implementation of the improvement opportunities. In this paper we propose a lightweight process, which takes into account appropriate strategies for this type of organization. Our proposal, known as a "Lightweight process to incorporate improvements", uses the philosophy of the Scrum agile method, aiming to give detailed guidelines for supporting the management and performance of the incorporation of improvement opportunities within processes and their putting into practice in small companies. We have applied the proposed process in two small companies by means of the case study research method, and from the initial results, we have observed that it is indeed suitable for small businesses. © 2010 Elsevier Inc. All rights reserved.},
author_keywords={Agile methods;  Model to guide improvements;  Scrum;  Small software companies;  Software process improvement;  SPI},
keywords={Agile methods;  Scrum;  Small software companies;  Software Process Improvement;  SPI, Industry, Software design},
}

@CONFERENCE{Scharff201025,
author={Scharff, C. and Verma, R.},
title={Scrum to support mobile application development projects in a just-in-time learning context},
journal={Proceedings - International Conference on Software Engineering},
year={2010},
pages={25-31},
doi={10.1145/1833310.1833315},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77955823829&doi=10.1145%2f1833310.1833315&partnerID=40&md5=94557c4c498bfa068f8c646674c0636a},
abstract={Developing mobile applications is a challenging endeavor where technology and creativity are essential. Agile methodologies seem to be particularly adapted to the development of mobile applications; mobile applications have a limited scope and user interaction and time to market are particularly important. In this paper, we describe a study that evaluates the use of Scrum for software success in mobile application development. We defined an innovative model of working with Scrum in a class setting at Pace University involving a professional Scrum Master of the New York software industry and a real product owner. The mobile application that was developed targeted the growing mobile market in Africa. We explored the overall experience, adoption of Scrum and difficulties encountered by teams using Scrum for the first time. The paper reports on our findings and summarizes guidelines for instructors interested in replicating our work. © 2010 ACM.},
author_keywords={agile methodologies;  education;  Java ME;  mobile application development;  Scrum},
keywords={Agile Methodologies;  Innovative models;  Java ME;  Just-in-time learning;  Mobile application development;  Mobile applications;  Mobile markets;  New York;  Scrum;  Software industry;  Time to market;  User interaction, Concurrent engineering;  Mobile telecommunication systems;  Software engineering;  Technical presentations, Java programming language},
}

@CONFERENCE{Hewett201067,
author={Hewett, R. and Kulkarni, A. and Seker, R. and Stringfellow, C.},
title={On effective use of reliability models and defect data in software development},
journal={2006 IEEE Region 5 Conference},
year={2010},
pages={67-71},
doi={10.1109/TPSD.2006.5507460},
art_number={5507460},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77955637268&doi=10.1109%2fTPSD.2006.5507460&partnerID=40&md5=3f050432ac2bb93a328accef36505b3a},
abstract={In software technology today, several development methodologies such as extreme programming and open source development increasingly use feedback from customer testing. This makes the customer defect data become more readily available. This paper proposes an effective use of reliability models and defect data to help managers make software release decisions by applying a strategy for selecting a suitable reliability model, which best fits the customer defect data as testing progresses. We validate the proposed approach in an empirical study using a dataset of defect reports obtained from testing of three releases of a large medical system. The paper describes detailed results of our experiments and concludes with suggested guidelines on the usage of reliability models and defect data. ©2006 IEEE.},
keywords={Best fit;  Customer testing;  Data sets;  Defect reports;  Development methodology;  Empirical studies;  EXtreme Programming;  Medical systems;  Open source development;  Reliability model;  Software development;  Software technology, Customer satisfaction;  Defects;  Sales;  Software design;  Software reliability;  Statistical tests, Quality assurance},
}

@ARTICLE{Osterweil20102,
author={Osterweil, L.J. and Wise, A.},
title={Using process definitions to support reasoning about satisfaction of process requirements},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2010},
volume={6195 LNCS},
pages={2-13},
doi={10.1007/978-3-642-14347-2_2},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77955455585&doi=10.1007%2f978-3-642-14347-2_2&partnerID=40&md5=59682dcd22da2921bea12621c6ac042d},
abstract={This paper demonstrates how a precise definition of a software development process can be used to determine whether the process definition satisfies certain of its requirements. The paper presents a definition of a Scrum process written in the Little-JIL process definition language. The definition's details facilitate understanding of this specific Scrum process (while also suggesting the possibility of many variants of the process). The paper also shows how these process details can support the use of analyzers to draw inferences that can then be compared to requirements specifications. Specifically the paper shows how finite state verification can be used to demonstrate that the process protects the team from requirements changes during a sprint, and how analysis of a fault tree derived from the Little-JIL Scrum definition can demonstrate the presence of a single point of failure in the process, suggesting that this particular Scrum process may fail to meet certain process robustness requirements. A new Scrum process variant is then presented and shown to be more robust in that it lacks the single of point failure. © 2010 Springer-Verlag.},
keywords={Fault-trees;  Finite state verification;  Little-JIL;  Point failure;  Precise definition;  Process definition;  Process requirements;  Process variants;  Requirements change;  Requirements specifications;  Single point;  Software development process, Computer software;  Fault tree analysis;  Quality assurance;  Reliability, Software design},
}

@ARTICLE{Szoke201062,
author={Szoke, Á.},
title={Optimized feature distribution in distributed agile environments},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2010},
volume={6156 LNCS},
pages={62-76},
doi={10.1007/978-3-642-13792-1_7},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77955440672&doi=10.1007%2f978-3-642-13792-1_7&partnerID=40&md5=d9e0619df8878f1a78b7612ab81a1f5e},
abstract={In recent years, agile software development methods have gained increasing popularity. Distributed software development have been becoming a common business reality also. Software development organizations are striving to blend agile development methods like Scrum and distributed development to reap the benefits of both. However, agile and distributed development approaches differ significantly in their key tenets. While agile methods mainly rely on informal processes to facilitate coordination, distributed development typically relies on formal mechanisms. This paper aims at implementing modular design of software products to identify feature clusters that can be implemented co-located to minimize the communication needs between distributed teams. Presented method is evaluated with simulations that demonstrate how this method can produce 1) lower-risk feasible plans, 2) balanced workload on teams, and 3) provide higher quality feature distributions. Finally, the paper analyzes benefits and issues from the use of this method. © 2010 Springer-Verlag.},
author_keywords={agile release planning;  distributed software development},
keywords={Agile development methods;  Agile environment;  Agile methods;  Agile software development;  Balanced work-load;  Co-located;  Distributed development;  Distributed software development;  Distributed teams;  Feature distribution;  Modular designs;  Quality features;  Release planning;  Software development organizations;  Software products, Computer software, Software design},
}

@CONFERENCE{Ahmed2010287,
author={Ahmed, A. and Ahmad, S. and Ehsan, N. and Mirza, E. and Sarwar, S.Z.},
title={Agile software development: Impact on productivity and quality},
journal={5th IEEE International Conference on Management of Innovation and Technology, ICMIT2010},
year={2010},
pages={287-291},
doi={10.1109/ICMIT.2010.5492703},
art_number={5492703},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954941783&doi=10.1109%2fICMIT.2010.5492703&partnerID=40&md5=70b724830a32703ac9be58b9efc0e2e0},
abstract={Agile means swift, active and responsive and this is what agile software development methodology refers to. Agile software development methodologies are widely accepted these days. It is an iterative approach to keep pace with dynamic development environments. Traditional software development methods are not efficient enough to convene with the rapid change in requirements and short iterations that are required for efficient product delivery. This study contains a quantitative analysis of the agile methodologies in practice, and the benefits associated with them. Analyses are done on a defined set of attributes that result in increased productivity and improved quality through the application of these methodologies. A development model has also been derived from empirical research conducted in this paper. © 2010 IEEE.},
author_keywords={Agile;  Agile software development;  Productivity;  Quality},
keywords={Agile Methodologies;  Agile software development;  Development model;  Dynamic development;  Empirical research;  Increased productivity;  Iterative approach;  Product delivery;  Quantitative analysis;  Rapid changes;  Software development methods, Computer software selection and evaluation;  Engineering research;  Innovation;  Productivity, Software design},
}

@CONFERENCE{Kruchten2010497,
author={Kruchten, P.},
title={Software architecture and agile software development - A clash of two cultures?},
journal={Proceedings - International Conference on Software Engineering},
year={2010},
volume={2},
pages={497-498},
doi={10.1145/1810295.1810448},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954728160&doi=10.1145%2f1810295.1810448&partnerID=40&md5=70885bde61efd46d74a28a6f7fb7ea8a},
abstract={Software architecture is taking a bad rap with the agilists - proponents of agile and lean software development approaches: "BUFD big up-front design", "YAGNI You Ain't Gonna Need It", "massive documentation", "smells of waterfall", it is pictured as a typical non-agile practice. However, certain classes of system, ignoring architectural issues too long "hit a wall" and collapse by lack of an architectural focus. 'Agile architecture': a paradox, an oxymoron, two totally incompatible approaches? In this tutorial, we examine the real issues at stake, beyond the rhetoric and posturing, and show that the two cultures can coexist and support each other, where appropriate. We define heuristics to scope how much architecture a project really needs, to assign actual value to an otherwise invisible architecture; and we review management and development practices that do work in the circumstances where some significant architectural effort is needed, when you are actually going to need it. © 2010 ACM.},
author_keywords={agile process;  software architecture},
keywords={Agile practices;  Agile process;  Agile software development;  Software development approach, Computer software;  Software design, Software architecture},
}

@CONFERENCE{Zhang2010111,
author={Zhang, J.-M.},
title={The software development process methodology of resource-based access control},
journal={2010 The 2nd International Conference on Computer and Automation Engineering, ICCAE 2010},
year={2010},
volume={4},
pages={111-117},
doi={10.1109/ICCAE.2010.5451762},
art_number={5451762},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77952656587&doi=10.1109%2fICCAE.2010.5451762&partnerID=40&md5=012579104cd48365b60c7ea22435d7de},
abstract={This paper presents the software development process methodology of resource-based access control in which artifacts and milestones in RUP software development process are abstracted as the abstract documents which can be associated with each other as the same things to be managed with public attributes. Productions and modifications as operations on artifacts and milestones are abstracted as editing operations. The process can equip the abstract document with the abstract role, and equip the role with personnel and manhour, and then record actual man-hour for tracking and controlling the cost and quality. Personnel associated with the abstract document can easily find own tasks after logging in. Such abstract processes, making the entire software development process to manage the abstract document as the core, we can greatly simplify the entire software development process. The costs and quality is tracked and controlled, it is easy to find and locate defects as a basis of the plan, thus to adjust and improve the overall software development process in real time, and continuously improve the standards and standardization level of software technology. ©2010 IEEE.},
author_keywords={Abstract classes;  Abstract documentation;  Access control;  Agile software development;  Defect tracking;  Extreme programming;  Iterative;  Milestones;  Phases;  Quality factor;  Rational unified process;  Software cost;  Software development process;  Software quality;  The role of abstraction;  Traceability;  UML;  Use cases},
keywords={Abstract class;  Abstract classes;  Agile software development;  EXtreme Programming;  Quality factors;  Rational Unified Process;  Software development process;  UML use case, Abstracting;  Access control;  Computer control;  Computer software selection and evaluation;  Costs;  Defects;  Q factor measurement;  Quality control;  Security systems;  Standardization, Software design},
}

@ARTICLE{Nunes2010131,
author={Nunes, N.J.},
title={iUCP - Estimating interaction design projects with enhanced use case Points},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2010},
volume={5963 LNCS},
pages={131-145},
doi={10.1007/978-3-642-11797-8_11},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77951993798&doi=10.1007%2f978-3-642-11797-8_11&partnerID=40&md5=45e3255e952c78cc63240a8aa5e90a6d},
abstract={This paper describes an approach to adapt the use-case point estimation method to fit the requirements of agile development of interactive software. Creating product cost estimates early in the development lifecycle is a challenge for the software industry, they require substantial data from past projects and constant feedback and fine-tuning, which are rarely available or consistent through interactive software development. In addition, the profusion of incremental and evolutionary development methods (like Scrum and XP) produced new challenges with estimating frequent releases. Here we propose several changes to the original use-case point estimation method, in particular to take advantage of the enhanced information that can be extracted from usage-centered design (usageCD) that devotes particular attention to critical aspects like weighting actors and uses-cases for complexity. We propose to exploit user-roles, essential use-cases and the usageCD architecture to enhance the weighting heuristics for assigning complexity factors to actors and use-cases required to calculate the unadjusted use-case point reflecting the complexity of the requirements for a given iteration or evolution. We propose to exploit user-roles as the main basis for weighting complex actors, which originally are grouped in the highest weight factor. Conversely we propose to extract the complexity of use-cases from essential use case steps depicted through user intentions and system responsibilities and also the analysis classes extract from those for the usageCD architecture. Detailing this approach the paper presents a contribution, not only to leverage more accurate early lifecycle software estimation, but also to bridge the gap between SE and HCI enabling cross-fertilization between the two disciplines. © 2010 Springer.},
author_keywords={Integrating SE and HCI;  Interaction design;  Software estimation;  Use-cases},
keywords={Agile development;  Constant feedback;  Essential use case;  Evolutionary development;  Interaction design;  Interactive software;  Point estimation method;  Product cost;  Software estimation;  Software industry;  Use case points;  User intention;  Weight factor, Computer aided software engineering;  Computer software;  Cost accounting;  Design;  Estimation;  User interfaces, Software design},
}

@ARTICLE{Moe2010480,
author={Moe, N.B. and Dingsøyr, T. and Dybå, T.},
title={A teamwork model for understanding an agile team: A case study of a Scrum project},
journal={Information and Software Technology},
year={2010},
volume={52},
number={5},
pages={480-491},
doi={10.1016/j.infsof.2009.11.004},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77949485657&doi=10.1016%2fj.infsof.2009.11.004&partnerID=40&md5=2bd50ac726c737da26445af948aecfc2},
abstract={Context: Software development depends significantly on team performance, as does any process that involves human interaction. Objective: Most current development methods argue that teams should self-manage. Our objective is thus to provide a better understanding of the nature of self-managing agile teams, and the teamwork challenges that arise when introducing such teams. Method: We conducted extensive fieldwork for 9 months in a software development company that introduced Scrum. We focused on the human sensemaking, on how mechanisms of teamwork were understood by the people involved. Results: We describe a project through Dickinson and McIntyre's teamwork model, focusing on the interrelations between essential teamwork components. Problems with team orientation, team leadership and coordination in addition to highly specialized skills and corresponding division of work were important barriers for achieving team effectiveness. Conclusion: Transitioning from individual work to self-managing teams requires a reorientation not only by developers but also by management. This transition takes time and resources, but should not be neglected. In addition to Dickinson and McIntyre's teamwork components, we found trust and shared mental models to be of fundamental importance. © 2009 Elsevier B.V. All rights reserved.},
author_keywords={Agile software development;  Case study;  Empirical software engineering;  Scrum;  Software engineering;  Teamwork},
keywords={Agile software development;  Agile teams;  Case study;  Development method;  Empirical Software Engineering;  Human interactions;  Self-managing;  Self-managing team;  Sensemaking;  Shared mental model;  Software development;  Team effectiveness;  Team leadership;  Team performance, Research;  Software design, Computer software},
}

@CONFERENCE{Štolc201077,
author={Štolc, M. and Polášek, I.},
title={A visual based framework for the model refactoring techniques},
journal={SAMI 2010 - 8th International Symposium on Applied Machine Intelligence and Informatics, Proceedings},
year={2010},
pages={77-82},
doi={10.1109/SAMI.2010.5423766},
art_number={5423766},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77951477448&doi=10.1109%2fSAMI.2010.5423766&partnerID=40&md5=83ed41eefc78e5d7bd69493ca1f2b8aa},
abstract={Refactoring is one of the most important rules and practices of Extreme Programming from the family of the Agile Methodologies. We propose the tool to refactor the UML model (Class Diagrams for now). In the first step we need to find the flaws (bad smells) in the model with the OCL query and then in the second step we transform the flaw to the correct fragment with the transformation script. The paper presents the set of methods and tools for the model adjustment, cooperating with the CASE systems. We analyze the concept and algorithms for the refactoring, OCL queries and transformation scripts generating. We have prepared functional prototype of the editor for the refactoring rules definition, OCL query generator and the transformation script generator. In the future, we plan to extend the framework with alternative notations (e.g., QVT graph transformation rules, PICS, Viatra2) and the other techniques to find the flaws (e.g., rule-based system with predicates of the bad smells, XMI transformations and Abstract Syntax Tree algebra, Bit-Vector and Similarity Scoring Algorithms). ©2010 IEEE.},
keywords={Abstract Syntax Trees;  Agile Methodologies;  Class diagrams;  EXtreme Programming;  Functional Prototypes;  Graph transformation rules;  Refactorings;  Rule based system;  Script generator;  UML Model, Artificial intelligence;  Odors;  XML, Trees (mathematics)},
}

@ARTICLE{Fuentes-Fernández2010432,
author={Fuentes-Fernández, R. and García-Magariño, I. and Gómez-Rodríguez, A.M. and González-Moreno, J.C.},
title={A technique fordefining agent-oriented engineering processes with tool support},
journal={Engineering Applications of Artificial Intelligence},
year={2010},
volume={23},
number={3},
pages={432-444},
doi={10.1016/j.engappai.2009.08.004},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77049086548&doi=10.1016%2fj.engappai.2009.08.004&partnerID=40&md5=911904eda3979da8008d8f807766f8ed},
abstract={The formalization of engineering processes is necessary for guaranteeing the quality and cost of the products involved. Agent-oriented engineering has already proposed development processes that still need to be further formalized to be applicable by non-researchers. This paper proposes a technique to instantiate processes for specific agent-oriented methodologies. This technique is based on three orthogonal views that are respectively related with lifecycles, disciplines and guidances. In addition, processes are modeled with a tool, which is automatically generated from a process metamodel inspired by the software & systems process engineering metamodel. Accordingly, engineers can choose the methodology-process pair best-suited for the characteristics of their project. The paper illustrates the approach based on the unified development process and the scrum process for the INGENIAS methodology and compares the results with other existing alternatives. © 2009 Elsevier Ltd. All rights reserved.},
author_keywords={Agent-oriented engineering;  Model-driven development;  Multi-agent system;  Process engineering;  Software & systems process engineering metamodel},
keywords={Agent-oriented;  Agent-oriented methodology;  Automatically generated;  Development process;  Engineering models;  Engineering process;  INGENIAS methodology;  Meta model;  Orthogonal views;  Tool support, Engineering;  Process engineering;  Software agents, Multi agent systems},
}

@ARTICLE{Begier2010191,
author={Begier, B.},
title={Evolutionally improved quality of intelligent systems following their users' point of view},
journal={Studies in Computational Intelligence},
year={2010},
volume={283},
pages={191-203},
doi={10.1007/978-3-642-12090-9_17},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77949924015&doi=10.1007%2f978-3-642-12090-9_17&partnerID=40&md5=d5bcba3ab271a191e26c23b4e8918133},
abstract={Authors of various intelligent expert systems concentrate their efforts on innovative elements of the developed software. But they often ignore quality aspects especially concerning software usage and users' comfort of work. The decision how to improve an expert system during its evolutional development requires an instrument to determine whether the installed software tool meets expectations of its users. One of the possible solutions, in line with agile methodologies, is to involve users in the software process. Users provide regular feedback on the considered product. In the described approach feedback is obtained in a survey by questionnaire. The guidelines are given on how to design and conduct it. Quality tree of an expert system reflects its users' point of view. Specifications formulated on the basis of the feedback allow software designers to develop improved versions of the product. The reported empirical research refers to a software system applied in civil engineering. After six iterations of its assessment and then related improvements the level of users' satisfaction from the product is currently much better than that at the beginning. © 2010 Springer-Verlag Berlin Heidelberg.},
}

@CONFERENCE{Kamthan201090,
author={Kamthan, P. and Shahmir, N.},
title={Towards an understanding of the user story environment},
journal={Knowledge Management and Innovation: A Business Competitive Edge Perspective - Proceedings of the 15th International Business Information Management Association Conference, IBIMA 2010},
year={2010},
volume={1},
pages={90-100},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905082120&partnerID=40&md5=177ac9f24588e202fdb812422c141eb3},
abstract={An appropriate specification of user requirements is integral to the development of interactive software systems. This paper explores the development of user stories, which are one stylistic approach for expressing user requirements. In doing so, a conceptual framework (USF) for a successful realization of user stories is proposed. The basic elements of USF, namely user story process model, user story stakeholder model, user model, user story quality model, user story description model, and glossary, are explored, and their interrelationships are highlighted. The pedagogical implications of USF are presented.},
author_keywords={Agile methodology;  Conceptual modeling;  Experiential knowledge;  Quality;  User requirement},
keywords={Image quality;  Information management, Agile Methodologies;  Conceptual frameworks;  Conceptual model;  Description model;  Experiential knowledge;  Interactive software;  Quality modeling;  User requirements, Knowledge management},
}

@ARTICLE{Kelly2010389,
author={Kelly, S. and Keenan, F. and Connolly, D. and Damdul, N.},
title={Combining Open Space Technology (OST) with XP through Scenarios for enhanced requirements elicitation},
journal={Lecture Notes in Business Information Processing},
year={2010},
volume={48 LNBIP},
pages={389-390},
doi={10.1007/978-3-642-13054-0_46},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876213678&doi=10.1007%2f978-3-642-13054-0_46&partnerID=40&md5=b93fa07a45a622ac7dba465855756a68},
abstract={Numerous reports indicate that problems exist with the requirements phase of software development. Although agile approaches help, challenges that still exist involve supporting multiple diverse stakeholders including developers in understanding and representing a problem domain. This poster proposes the combination of Open Space Technology (OST) with eXtreme Programming (XP) through Scenarios to better facilitate all relevant stakeholders during requirements elicitation. © Springer-Verlag Berlin Heidelberg 2010.},
author_keywords={eXtreme programming;  Open space;  Scenarios},
keywords={Requirements engineering, Agile approaches;  EXtreme Programming;  Open space;  Problem domain;  Requirements elicitation;  Requirements phase;  Scenarios;  Space technologies, Software engineering},
}

@ARTICLE{O'hEocha201020,
author={O'hEocha, C. and Conboy, K.},
title={The role of the user story agile practice in innovation},
journal={Lecture Notes in Business Information Processing},
year={2010},
volume={65 LNBIP},
pages={20-30},
doi={10.1007/978-3-642-16416-3_3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78649840478&doi=10.1007%2f978-3-642-16416-3_3&partnerID=40&md5=cc67662318bc341bae92399c734d9af7},
abstract={The concept of an innovation space where different knowledge and perspectives can interact leading to innovation is central to lean thinking. The SECI framework of organizational knowledge creation identifies five enabling conditions which impinge on this space, namely intent, autonomy, fluctuation, redundancy and variety. User Stories, introduced in XP and now commonly used in Scrum, are a key practice in requirements capture. In common with lean thinking, they are user value centric, encourage rich dialogue between project stakeholders and avoiding premature specification of solutions. This conceptual paper examines user stories through the dual lenses of an innovation space and the five SECI enablers. The authors conclude that expressing user needs as user stories can support the development of innovative solutions, but that care must be taken in the design of the user stories and their application. This paper concludes with a set of recommendations to support innovation through user stories. © 2010 Springer-Verlag.},
author_keywords={agile methods;  innovation space;  knowledge creation;  lean thinking;  SECI;  user stories},
keywords={Agile methods;  Knowledge creations;  Lean thinking;  SECI;  User stories, Agile manufacturing systems},
}

@ARTICLE{Ansari201052,
author={Ansari, A.A. and Sharafi, S.M. and Nematbakhsh, N.},
title={A method for requirements management in distributed extreme programming environment},
journal={Journal of Theoretical and Applied Information Technology},
year={2010},
volume={20},
number={1},
pages={52-58},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78650263386&partnerID=40&md5=c074daf6dac423cc8329e7e989388da5},
abstract={Both Distributed Software Development (DSD) and eXtreme Programming (XP) approaches have gained significant Popularity. Both DSD and XP method are growing trends as software business requires quicker quality production at a cheaper price. Requirement Management (RM) is not easy to perform even under the best of circumstances and it becomes more difficult when performed globally because of the nature of distributed development projects and the diversity of stakeholders. This article presents an investigation of the possibility to integrate Requirement Management in Distributed eXtreme Programming. One reason for integrating RM with DXP was that XP emphasizes lightweight documentation in XP based development. We propose the development of model and tool for executing RM in DXP that are required for proper software engineering and that activity should not restrict the efficient execution of XP method in DSD. © 2005 - 2010 JATIT& LLS.},
author_keywords={Distributed Software Development (DSD);  eXtreme Programming (XP);  Requirements Management (RM)},
}

@ARTICLE{Taipale2010111,
author={Taipale, M.},
title={Huitale - A story of a Finnish lean startup},
journal={Lecture Notes in Business Information Processing},
year={2010},
volume={65 LNBIP},
pages={111-114},
doi={10.1007/978-3-642-16416-3_16},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78649826838&doi=10.1007%2f978-3-642-16416-3_16&partnerID=40&md5=f30bb8f60f3096ba4f14ae1a04c21268},
abstract={We in Huitale have implemented a lean product development process. As a result Huitale has a workflow that is predictable within acceptable variance. We can change the direction of the business at any given time but stay grounded in what we have learned. We can adjust the product roadmap visibility according to our business needs. In addition we have achieved exceptional quality. In past three years we have had two production bugs. The implementation of lean development process requires discipline and experience. © 2010 Springer-Verlag.},
author_keywords={agile software development;  eXtreme programming;  Kanban;  lean product development;  lean startup;  Scrum},
keywords={Agile manufacturing systems;  Product development, Agile software development;  EXtreme Programming;  Kanban;  Lean product development;  lean startup;  Scrum, Software design},
}

@ARTICLE{Conboy20101,
author={Conboy, K. and Duarte, V.},
title={Scaling agile to lean - Track summary},
journal={Lecture Notes in Business Information Processing},
year={2010},
volume={65 LNBIP},
pages={1-2},
doi={10.1007/978-3-642-16416-3_1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78649903021&doi=10.1007%2f978-3-642-16416-3_1&partnerID=40&md5=cb1cc6bff6603858b19bbab24ace3176},
abstract={There are many books, journals and articles explaining agile and to a much lesser extent lean software development methods. Technical competences such as software architecture, automated testing and quality assurance are key focal areas of these materials on agile and lean methods. While some are prescriptive, there is often a substantial difference between the textbook 'vanilla' version of the method and the method actually enacted in practice. Prescribed practices are inevitably interpreted in diverse ways or tailored to suit the specific needs of teams. The constantly evolving technological environment that software development projects are enacted in also highlights the need to tailor prescribed agile practices to work in emerging deployment models, such as cloud computing and mobile computing. Quite a few empirical studies focus on how agile methods were adopted, tailored and used in realworld contexts (e.g., Rasmusson, 2003, Fitzgerald et al., 2006). However, there is a distinct absence of lean software development cases, and cases of agile deployment tend to be weak in terms of theoretical foundation, fail to build on previous lessons, and often lack consistency and coherence (Abrahamsson et al., 2009, Conboy, 2009). In the absence of sound, systematic research, there are few lessons learned across studies, and thus the existing body of knowledge is somewhat fragmented and inconclusive. A systematic and insightful understanding of agile adoption, tailoring and execution is yet to be achieved, and research on lean software development is yet to begin. © 2010 Springer-Verlag.},
keywords={Agile manufacturing systems;  Materials testing;  Quality assurance;  Software architecture, Agile methods;  Agile practices;  Automated testing;  Body of knowledge;  Cloud computing;  Empirical studies;  Focal area;  Lean methods;  Real-world;  Software development;  Software development methods;  Software development projects;  Systematic research;  Technical competence;  Technological environment;  Theoretical foundations, Software design},
}

@ARTICLE{Lavazza2010147,
author={Lavazza, L. and Morasca, S. and Taibi, D. and Tosi, D.},
title={Applying SCRUM in an OSS development process: An empirical evaluation},
journal={Lecture Notes in Business Information Processing},
year={2010},
volume={48 LNBIP},
pages={147-159},
doi={10.1007/978-3-642-13054-0_11},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876211466&doi=10.1007%2f978-3-642-13054-0_11&partnerID=40&md5=630509070766eeb6876f581a42da8290},
abstract={Open Source Software development often resembles Agile models. In this paper, we report about our experience in using SCRUM for the development of an Open Source Software Java tool. With this work, we aim at answering the following research questions: 1) is it possible to switch successfully to the SCRUM methodology in an ongoing Open Source Software development process? 2) is it possible to apply SCRUM when the developers are geographically distributed? 3) does SCRUM help improve the quality of the product and the productivity of the process? We answer to these questions by identifying a set of measures and by comparing the data we collected before and after the introduction of SCRUM. The results seem to show that SCRUM can be introduced and used in an ongoing geographically distributed Open Source Software process and that it helps control the development process better. © Springer-Verlag Berlin Heidelberg 2010.},
author_keywords={Agile methods;  Open-source software;  OSS;  Process improvement evaluation;  SCRUM},
keywords={Software design, Agile methods;  Open-source softwares;  OSS;  Process Improvement;  SCRUM, Computer software},
}

@ARTICLE{DeJager2010163,
author={De Jager, G.P. and Huisman, H.M. and Kruger, H.A.},
title={A quantitative model to evaluate post-implementation efficiency of Scrum},
journal={Frontiers in Artificial Intelligence and Applications},
year={2010},
volume={217},
pages={163-181},
doi={10.3233/978-1-60750-629-4-163},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78049244598&doi=10.3233%2f978-1-60750-629-4-163&partnerID=40&md5=ce46270bc5767aabcd2e4ae6e26bb947},
abstract={In order to improve the information system development process many companies have adopted system development methodologies. Various evaluation methods and frameworks exist in the literature to assist companies during their adoption phase. However, a need was identified to evaluate the efficiency of a system development methodology after adoption. In an era where there is a reappraisal of the usefulness of system development methodologies it is essential to have a valid and reliable method of evaluation. The aim of this paper is to propose an evaluation model to measure post-implementation efficiency of a software development methodology. Data Envelopment Analysis, a linear programming method, is investigated as a means to evaluate efficiency of a SDM after adoption. This paper focus on the Scrum software development methodology as it is a popular methodology in use today. With Data Envelopment Analysis it is possible to classify different companies' use of Scrum as efficient or inefficient. The results also make it possible to identify specific areas in a company that needs improvement. These individual recommendations can be applied to increase the post-implementation efficiency of a company's systems development methodology. © 2010 The authors and IOS Press. All rights reserved.},
author_keywords={Data Envelopment Analysis;  Information Systems;  Scrum;  System Development Methodology},
keywords={Data envelopment analysis;  Efficiency;  Information systems;  Linear programming;  Software engineering, Evaluation modeling;  Information system development process;  Post-implementation;  Quantitative modeling;  Scrum;  Software development methodologies;  System development methodologies;  Systems development, Software design},
}

@CONFERENCE{Kajko-Mattsson20091,
author={Kajko-Mattsson, M. and Aguiar, A. and Boness, K. and Kaindl, H. and Pooley, R. and Tael, A.},
title={Long-term perspective of agile methods},
journal={4th International Conference on Software Engineering Advances, ICSEA 2009, Includes SEDES 2009: Simposio para Estudantes de Doutoramento em Engenharia de Software},
year={2009},
pages={1-2},
doi={10.1109/ICSEA.2009.8},
art_number={5298422},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-70749102929&doi=10.1109%2fICSEA.2009.8&partnerID=40&md5=fd26715aa3ba3afcdf84355ff1e9e626},
abstract={Even if we have recognized many short-term benefits of agile methods, we still know very little about their long-term effects. In this panel, we discuss the long-term perspective of the agile methods. The panelists are either industrial or academic representatives. They will discuss problems and benefits related to the long-term lifecycle system management in agile projects. Ideally, the panel's outcome will provide ideas for future research. © 2009 IEEE.},
author_keywords={Citation research;  Documentation;  Iterative and incremental development;  Scrum;  Social activity},
keywords={Agile methods;  Iterative and incremental development;  Long-term effects;  Long-term perspective;  Research documentation;  Social activities;  System management, Computer software;  Technical writing, Research},
}

@CONFERENCE{Usha2009,
author={Usha, K. and Poonguzhali, N. and Kavitha, E.},
title={A quantitative approach for evaluating the effectiveness of refactoring in software development process},
journal={Proceedings of International Conference on Methods and Models in Computer Science, ICM2CS09},
year={2009},
art_number={5397935},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77949581309&partnerID=40&md5=18140a68f8706e506d1264d618f14313},
abstract={Software development is a mentally complicated task. Different software development methodologies and quality assurance methods are used in order to attain high quality, reliable, and bug free software. eXtreme Programming (XP) is a software development discipline in the family of agile methodologies that contributes towards quality improvement using dozen practices. One of the important practices in XP is Refactoring. Refactoring which can be defined as "a change made to the internal structure of software to make it easier to understand and cheaper to modify without changing its observable behavior". Although there has been a large amount of research investigations for this concept, but there has been little work done in quantitative approach. The main objective of the research is to develop a software development model using Refactoring practices. The software development model proposed in such a way that refactoring activity accompanies all the phases of software development. This work also shows the evaluation of effectiveness of the proposed software development model.},
author_keywords={eXtreme programming (XP);  Refactoring;  Software development},
keywords={Agile Methodologies;  Bug-free;  EXtreme Programming;  High quality;  Internal structure;  Observable behavior;  Quality improvement;  Quantitative approach;  Refactorings;  Software development;  Software development methodologies;  Software development models;  Software development process, Computer science;  Quality assurance;  Software design;  Total quality management, Computer software selection and evaluation},
}

@ARTICLE{Sadi2009251,
author={Sadi, M.H. and Ramsin, R.},
title={FRAME: A generic fractal process metamodel for agile methodologies},
journal={Studies in Computational Intelligence},
year={2009},
volume={253},
pages={251-264},
doi={10.1007/978-3-642-05441-9_22},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-74049107615&doi=10.1007%2f978-3-642-05441-9_22&partnerID=40&md5=a4c18c43e9eaf1a5e7c8e31f08661a64},
abstract={The widespread need for flexibility and adaptability in software development processes has resulted in the emergence of Agile practices and principles. Although different in fine-grained detail, all agile methodologies follow a common approach in their processes. To expose the common paradigm behind the design of agile processes, we have developed FRAME (FRactal Agile MEtamodel), a generic fractal process metamodel for agile process frameworks. Recursive application of FRAME at different levels of process design results in the specification of a configurable process framework; this framework serves as a basis for constructing agile methodologies through paradigm-based Situational Method Engineering (SME). In order to explore how FRAME is manifest in existing agile processes, relevant activity patterns have been extracted from seven prominent agile processes, thus forming a repository of concrete FRAME components. © 2009 Springer-Verlag Berlin Heidelberg.},
}

@CONFERENCE{N2009238,
author={N, G.R.},
title={Testing processes in business-critical chain software lifecycle},
journal={2009 WRI World Congress on Software Engineering, WCSE 2009},
year={2009},
volume={4},
pages={238-242},
doi={10.1109/WCSE.2009.424},
art_number={5319542},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-72849137727&doi=10.1109%2fWCSE.2009.424&partnerID=40&md5=697ee36db95cc61d512dabdeb2bf913b},
abstract={The business-critical chain lifecycle is an agile software development lifecycle that aims at aligning the software project deliverables to attain the business objectives based on business priorities. The traditional software development projects work on the assumption that all 'equal effort consumers' would be treated equally and worked upon. The agile methodology ensures that the delivery cycles are reduced thus introducing agility in the way business is supported by underlying technologies. The proposed lifecycle model introduces new variables pertaining to the business value generation each finished piece of code would produce. Hence the software project processes have to be modified to cater to it. Even the usual agile lifecycle testing strategies need to be modified to suit the proposed model. The test plans, test estimations, test resource management, quality control, regression plans and automation road map and plans have to be customized to cater to the new life cycle model. The secondary project management activities such as risk management, procurement management, etc also may to be modified with respect to the testing processes. My paper aims at using the critical chain principles and proposes a software lifecycle model that can cater to business priorities and aligning the testing processes not only to development cycles but also to the actual business value created. In this paper I would take a case study and compare and contrast when project uses the regular models and this new model. I would also provide guidelines to use this lifecycle model and modify regular project management activities to cater to the new model with emphasis on the testing processes. The paper would try to provide the ideal scenarios; in project teams, in consulting firms and in new customers and expectations; where such a model could provide high impact on the way consulting companies can do successful projects and creating more value to the customers. © 2009 IEEE.},
keywords={Agile Methodologies;  Agile software development;  Business objectives;  Business value;  Consulting firms;  Critical chain;  Development cycle;  High impact;  Life cycle model;  New model;  Procurement management;  Project team;  Resource management;  Road-maps;  Software development projects;  Software life cycle model;  Software life cycles;  Software project;  Test plan;  Testing process;  Testing strategies, Project management;  Quality function deployment;  Resource allocation;  Risk analysis;  Risk management;  Risk perception;  Software design;  Total quality management, Computer software},
}

@CONFERENCE{Gradel20093727,
author={Gradel, T. and Nosek, J.T.},
title={Model of critical factors for outsourcing agile development},
journal={15th Americas Conference on Information Systems 2009, AMCIS 2009},
year={2009},
volume={6},
pages={3727-3737},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870483159&partnerID=40&md5=620ee800d13ac1805f5927e7f444c2ce},
abstract={Companies are beginning to combine outsourcing with Agile software engineering techniques with the goal of receiving the benefits of both - faster time to market, greater quality, and smaller costs. Since Agile was originally developed to work principally with small collocated teams, scalability of Agile to the enterprise, and simultaneous use of Agile and outsourcing are questions concerning applicability of Agile techniques to global business environments. This paper first summarizes current experience studies and research in Agile, enterprise Agile and Agile outsourcing, to identify factors likely to affect success on Agile projects. It then extends a model originally developed by Chow and Cao (2007) to account for these factors. Finally it outlines an experiment whose goal is to determine which of these factors drives successful projects that use both Agile and outsourcing.},
author_keywords={Agile;  Extreme programming;  Global system development;  Model;  Outsourcing;  Scrum;  XP},
keywords={Agile;  EXtreme Programming;  Global systems;  Scrum;  XP, Industry;  Information systems;  Models;  Software engineering, Outsourcing},
}

@BOOK{Altarawneh2009130,
author={Altarawneh, H. and El-Shiekh, A.},
title={Web engineering in small Jordanian web development firms: An XP based process model},
journal={Utilizing Information Technology Systems Across Disciplines: Advancements in the Application of Computer Science},
year={2009},
pages={130-141},
doi={10.4018/978-1-60566-616-7.ch009},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900629570&doi=10.4018%2f978-1-60566-616-7.ch009&partnerID=40&md5=ccbfe53f67d919eadcaec210658ea62c},
abstract={Small firms do not have the managerial experience, the financial resources and the methodological know-how to manage web-based applications projects the way large firms do. Many small firms are unaware of existing software process assessment models and standards. There's often the assumption that assessments conformant to these models and standards can be expensive and time consuming, and therefore difficult to perform in small companies. This chapter proposes a theoretical model for small Web project development and its special features in the context small Web firms, which are capable of being "tailor able" to the particular stage of organizational development of small Web firms. The process model derived form Web engineering best practices, real case studies from Jordanian Web firms and agile development methodologies (extreme programming). This chapter also contains results from tow surveys: a questionnaire to Web developers and interview with Web mangers in Jordan. The results reflect the Web industry situation in small Jordanian firms, and the major problems they face. Most of small Web projects in Jordan run over time and budget, due to the ad hoc development and the weakness of Web project management. The results showed that there is a weakness in applying Web engineering practices in small Jordanian Web development firms. © 2009, IGI Global.},
}

@CONFERENCE{Jakobsen2009333,
author={Jakobsen, C.R. and Sutherland, J.},
title={Scrum and CMMI - Going from good to great: Are you ready-ready to be done-done?},
journal={Proceedings - 2009 Agile Conference, AGILE 2009},
year={2009},
pages={333-337},
doi={10.1109/AGILE.2009.31},
art_number={5261061},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-70449669327&doi=10.1109%2fAGILE.2009.31&partnerID=40&md5=c24982217ddeb1af7bdaa11ff53251fd},
abstract={Projects combining agile methods with CMMI combine adaptability with predictability to better serve large customer needs. The introduction of Scrum at Systematic, a CMMI Level 5 company, doubled productivity and cut defects by 40% compared to waterfall projects in 2006 by focusing on early testing and time to fix builds. Systematic institutionalized Scrum across all projects and used data driven tools like story process efficiency to surface Product Backlog impediments. This allowed them to systematically develop a strategy for a second doubling in productivity. Two teams have achieved a sustainable quadrupling of productivity compared to waterfall projects. We discuss here the strategy to bring the entire company to that level. Our experiences shows that Scrum and CMMI together bring a more powerful combination of adaptability and predictability than either one alone and suggest how other companies can combine them to achieve Toyota level performance - 4 times the productivity and 12 times the quality of waterfall teams.},
author_keywords={CMMI;  Flow;  Lean;  Measures;  Product owner;  Scrum},
keywords={Agile methods;  Data driven;  Large customer;  Level 5;  Process efficiency;  Surface products, Productivity},
}

@CONFERENCE{Therrien2009289,
author={Therrien, I. and LeBel, E.},
title={From anarchy to sustainable development: Scrum in less than ideal conditions},
journal={Proceedings - 2009 Agile Conference, AGILE 2009},
year={2009},
pages={289-294},
doi={10.1109/AGILE.2009.73},
art_number={5261070},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-70449643439&doi=10.1109%2fAGILE.2009.73&partnerID=40&md5=4976efcf7d8460eb2319f2a8c09b015d},
abstract={In early 2008, Pyxis Technologies was contracted in the third of a series of projects distributed between Canada and France. This project dwarfed its predecessors in scope and complexity. In over more than a year, it involved more than 30 people in 3 cities. With contributors separated by distance and time zones, organizations and expertise, the challenges faced ranged from organizing and coordinating the teams with Scrum and managing the evolution of the product. Through attention to problems and a willingness to adapt, the team has steered clear of any project-ending problems and managed to maintain a sustainable development pace. This is our story and what we've learned along the way.},
keywords={Time zones, Strategic planning, Sustainable development},
}

@CONFERENCE{Onions2009105,
author={Onions, P. and Patel, C.},
title={Enterprise SoBA: Large-scale implementation of acceptance test driven story cards},
journal={2009 IEEE International Conference on Information Reuse and Integration, IRI 2009},
year={2009},
pages={105-109},
doi={10.1109/IRI.2009.5211600},
art_number={5211600},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-70449368363&doi=10.1109%2fIRI.2009.5211600&partnerID=40&md5=f36ede73e5db8f615c90ac1bc41d9bb0},
abstract={Agile software development has proven to be an effective alternative to the regimentation of waterfallbased approaches. Recent research by Patel and Ramachandran [17] has led to the innovation of Acceptance Test Driven Story Cards (SoBA). Implemented using Extreme Programming, preliminary findings show SoBA retains essential Agile attributes like feedback, flow and universal responsibility for quality [3] whilst delivering improvements to estimation, communication, requirements gathering and testing. Original SoBA theory was exploratory, and its validation was experimental systems development. Enterprise software on the other hand is more complex and architectural in its design. This paper suggests integration with architecture, project management and business analysis practices in order to expand SoBA's potential and address criticisms of Agile methods and Extreme Programming; particularly instability of requirements, user conflicts and scalability. Enterprise SoBA is untried. This paper proposes highlevel abstract concepts and integration, and these will be tested during the course of ongoing research. ©2009 IEEE.},
author_keywords={Acceptance test driven story cards;  Enterprise software development;  Extreme programming;  Project management;  SoBa;  Story card based agile software development},
keywords={Acceptance test driven story cards;  Enterprise software development;  Extreme programming;  SoBa;  Story card based agile software development, Computer software;  Project management;  Software design, Information use},
}

@ARTICLE{Rusu2009377,
author={Rusu, L. and Lin, Y. and Hodosi, G.},
title={Management guidelines for database developers' teams in software development projects},
journal={Communications in Computer and Information Science},
year={2009},
volume={49},
pages={377-386},
doi={10.1007/978-3-642-04757-2_40},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-70350064468&doi=10.1007%2f978-3-642-04757-2_40&partnerID=40&md5=24f9ea522af4b6862b9a6cabc49034da},
abstract={Worldwide job market for database developers (DBDs) is continually increasing in last several years. In some companies, DBDs are organized as a special team (DBDs team) to support other projects and roles. As a new role, the DBDs team is facing a major problem that there are not any management guidelines for them. The team manager does not know which kinds of tasks should be assigned to this team and what practices should be used during DBDs work. Therefore in this paper we have developed a set of management guidelines, which includes 8 fundamental tasks and 17 practices from software development process, by using two methodologies Capability Maturity Model (CMM) and agile software development in particular Scrum in order to improve the DBDs team work. Moreover the management guidelines developed here has been complemented with practices from authors' experience in this area and has been evaluated in the case of a software company. The management guidelines for DBD teams presented in this paper could be very usefully for other companies too that are using a DBDs team and could contribute towards an increase of the efficiency of these teams in their work on software development projects. © 2009 Springer Berlin Heidelberg.},
author_keywords={Agile software development;  Capability maturity model;  Database developers' teams;  Management guidelines;  Software development project},
keywords={Agile software development;  Capability maturity models;  Database developers' teams;  Job market;  Software company;  Software development process;  Software development projects;  Team work, Database systems;  Industry;  Management, Software design},
}

@ARTICLE{Diaz200993,
author={Diaz, J. and Garbajosa, J. and Calvo-Manzano, J.A.},
title={Mapping CMMI level 2 to scrum practices: An experience report},
journal={Communications in Computer and Information Science},
year={2009},
volume={42},
pages={93-104},
doi={10.1007/978-3-642-04133-4_8},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-70349913578&doi=10.1007%2f978-3-642-04133-4_8&partnerID=40&md5=cc55a96bfc1d032a13c8df5f84d75358},
abstract={CMMI has been adopted advantageously in large companies for improvements in software quality, budget fulfilling, and customer satisfaction. However SPI strategies based on CMMI-DEV require heavy software development processes and large investments in terms of cost and time that medium/small companies do not deal with. The so-called light software development processes, such as Agile Software Development (ASD), deal with these challenges. ASD welcomes changing requirements and stresses the importance of adaptive planning, simplicity and continuous delivery of valuable software by short time-framed iterations. ASD is becoming convenient in a more and more global, and changing software market. It would be greatly useful to be able to introduce agile methods such as Scrum in compliance with CMMI process model. This paper intends to increase the understanding of the relationship between ASD and CMMI-DEV reporting empirical results that confirm theoretical comparisons between ASD practices and CMMI level2. © 2009 Springer Berlin Heidelberg.},
author_keywords={Agile Software Development;  CMMI;  Scrum},
keywords={Agile methods;  Agile software development;  CMMI;  Empirical results;  Experience report;  Level 2;  Process model;  Scrum;  Software development process;  Software markets;  Software Quality, Computer software selection and evaluation;  Customer satisfaction, Software design},
}

@ARTICLE{Maruping2009377,
author={Maruping, L.M. and Venkatesh, V. and Agarwal, R.},
title={A control theory perspective on agile methodology use and changing user requirements},
journal={Information Systems Research},
year={2009},
volume={20},
number={3},
pages={377-399},
doi={10.1287/isre.1090.0238},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-70149092236&doi=10.1287%2fisre.1090.0238&partnerID=40&md5=6ff61500e6cb5d3ac8c63c61a145f31a},
abstract={In this paper, we draw on control theory to understand the conditions under which the use of agile practices Iis most effective in improving software project quality. Although agile development methodologies offer the potential of improving software development outcomes, limited research has examined how project managers can structure the software development environment to maximize the benefits of agile methodology use during a project. As a result, project managers have little guidance on how to manage teams who are using agile methodologies. Arguing that the most effective control modes are those that provide teams with autonomy in determining the methods for achieving project objectives, we propose hypotheses related to the interaction between control modes, agile methodology use, and requirements change. We test the model in a field study of 862 software developers in 110 teams. The model explains substantial variance in four objective measures of project quality-bug severity, component complexity, coordinative complexity, and dynamic complexity. Results largely support our hypotheses, highlighting the interplay between project control, agile methodology use, and requirements change. The findings contribute to extant literature by integrating control theory into the growing literature on agile methodology use and by identifying specific contingencies affecting the efficacy of different control modes. We discuss the theoretical and practical implications of our results. © 2009 INFORMS.},
author_keywords={Agile methodologies;  Agility;  Control theory;  Requirements uncertainty;  Software development;  Teams},
keywords={Agile development methodologies;  Agile Methodologies;  Agility;  Requirements change;  Requirements uncertainties;  Software developer;  Software development environment;  Teams, Human resource management;  Managers;  Project management;  Software design;  Software engineering;  Software testing, Control theory},
}

@CONFERENCE{Umarji2009216,
author={Umarji, M. and Seaman, C. and Koru, A.G. and Liu, H.},
title={Software engineering education for bioinformatics},
journal={Proceedings - 22nd Conference on Software Engineering Education and Training, CSEET 2009},
year={2009},
pages={216-223},
doi={10.1109CSEET.2009.44},
art_number={4812701},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-67649996076&doi=10.1109CSEET.2009.44&partnerID=40&md5=e0539c437450febebf82c658f3a66944},
abstract={As software engineering educators, it is important for us to realize the increasing domainspecificity of software, and incorporate these changes in our design of teaching material. Bioinformatics software is an example of immensely complex and critical scient/ic software and this domain provides an excellent illustration of the role of computing in the life sciences. To study bioinformatics from a software engineering standpoint, we conducted an exploratory survey of bioinformatics developers. The survey had a range of questions about people, processes and products. We learned that practices like extreme programming, requirements engineering and documentation. As software engineering educators, we realized that the survey results had important implications for the education of bioinformatics professionals. We also investigated the current status of software engineering education in bioinformatics, by examining the curricula of more than fifty bioinformatics programs and the contents of over fifteen textbooks. We observed that there was no mention of the role and importance of software engineering practices essential for creating dependable software systems. Based on our findings and existing literature we present a set of recommendations for improving software engineering education in bioinformatics. © 2009 IEEE.},
keywords={Bioinformatics programs;  Bioinformatics software;  Current status;  Dependable softwares;  Engineering educators;  Engineering standpoint;  EXtreme Programming;  Life-science;  Software engineering practices;  Teaching materials, Computer software;  Curricula;  Engineering;  Engineering education;  Surveys, Bioinformatics},
}

@CONFERENCE{Sutherland2009,
author={Sutherland, J. and Schoonheim, G. and Rijk, M.},
title={Fully distributed scrum: Replicating local productivity and quality with offshore teams},
journal={Proceedings of the 42nd Annual Hawaii International Conference on System Sciences, HICSS},
year={2009},
doi={10.1109/HICSS.2009.225},
art_number={4755769},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-63349090309&doi=10.1109%2fHICSS.2009.225&partnerID=40&md5=5a2ab4a892fa00e179eed5764cfac274},
abstract={Scrum was designed for hyperproductive teams where productivity increases by 5-10 times over industry averages and many colocated teams have achieved this effect. The question for this paper is whether distributed, offshored teams can consistently achieve the same level of performance. In particular, can a team establish a localized velocity and quality and then maintain or increase that velocity and quality when distributing teams across continents. Since 2006, Xebia (Netherlands) started localized projects with half Dutch and half Indian team members. After establishing localized hyperproductivity, they move the Indian members of the team to India and show the same velocity with fully distributed teams. After running XP engineering practices inside many distributed Scrum projects, Xebia has systematically productized a model for high performance, distributed, offshore teams with one of the lowest defect rates in the industry. © 2009 IEEE.},
keywords={Co-located;  Defect rates;  Distributed teams;  Engineering practices;  Netherlands;  Productivity increase;  Team members},
}

@ARTICLE{Hearty2009124,
author={Hearty, P. and Fenton, N. and Marquez, D. and Neil, M.},
title={Predicting project velocity in XP using a learning dynamic Bayesian network model},
journal={IEEE Transactions on Software Engineering},
year={2009},
volume={35},
number={1},
pages={124-137},
doi={10.1109/TSE.2008.76},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-60449107898&doi=10.1109%2fTSE.2008.76&partnerID=40&md5=616aab1fc71627a5d30b79894d6ec1e5},
abstract={Bayesian networks, which can combine sparse data, prior assumptions and expert judgment into a single causal model, have already been used to build software effort prediction models. We present such a model of an Extreme Programming environment and show how it can learn from project data in order to make quantitative effort predictions and risk assessments without requiring any additional metrics collection program. The model's predictions are validated against a real world industrial project, with which they are in good agreement. © 2009 IEEE.},
author_keywords={Bayesian nets;  Causal models;  Extreme programming;  Risk assessment},
keywords={Distributed parameter networks;  Forecasting;  Inference engines;  Intelligent networks;  Marine biology;  Programming theory;  Risk assessment;  Risk management;  Risk perception;  Speech analysis;  Speech recognition, Bayesian;  Bayesian nets;  Bayesian network models;  Causal models;  Effort predictions;  Expert judgments;  Extreme programming;  Industrial projects;  Project datum;  Software effort predictions;  Sparse datum, Bayesian networks},
}

@ARTICLE{García-Magariño2009108,
author={García-Magariño, I. and Gómez-Rodríguez, A. and Gómez-Sanz, J. and González-Moreno, J.C.},
title={INGENIAS-SCRUM development process for multi-agent development},
journal={Advances in Soft Computing},
year={2009},
volume={50},
pages={108-117},
doi={10.1007/978-3-540-85863-8_14},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-58149195405&doi=10.1007%2f978-3-540-85863-8_14&partnerID=40&md5=07da08f346cfe2bd1418d37007aa9a92},
abstract={One of the key issues in development of Multi-agent System is following the more suitable development process for a particular problem. This means that development process models must be defined. Definition leads to better process understanding, facilitates process measurement and improvement, and constitutes the basis for automating the process itself. The main goal of this paper is the definition of a process for agent-based development. This definition is based on the Software Process Engineering Metamodel(SPEM) and applied in the definition of the software engineering process of INGENIAS MAS methodology following a SCRUM approach. © 2009 Springer-Verlag Berlin Heidelberg.},
author_keywords={AOSE;  Development process;  INGENIAS;  Multiagent systems (MAS);  SCRUM},
}

@ARTICLE{Yagüe2009180,
author={Yagüe, A. and Rodríguez, P. and Garbajosa, J.},
title={Optimizing agile processes by early identification of hidden requirements},
journal={Lecture Notes in Business Information Processing},
year={2009},
volume={31 LNBIP},
pages={180-185},
doi={10.1007/978-3-642-01853-4_24},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-66749189990&doi=10.1007%2f978-3-642-01853-4_24&partnerID=40&md5=a141ee0eaec2300bfcee3e2009273990},
abstract={In recent years, Agile methodologies have increased their relevance in software development, through the application of different testing techniques like unit or acceptance testing. Tests play in agile methodologies a similar role that in waterfall process models: check conformance. Nevertheless the scenario is not the same The contribution of this paper is to explain how the process can be modified to do early identification of hidden requirements (HR) using testing techniques in agile methodologies, specifically using failed tests. The result is an optimized agile process where it may be possible to reach the desired level of functionality in less iterations, but with a similar level of quality. Furthermore it might be necessary to re-think process elements role, e.g. tests, in the Agile context not assuming waterfall definition and scope. © 2009 Springer Berlin Heidelberg.},
keywords={Testing, Acceptance testing;  Agile contexts;  Agile Methodologies;  Agile process;  Process elements;  Process model;  Software development;  Testing technique, Computer software},
}

@CONFERENCE{Bavani200974,
author={Bavani, R.},
title={Critical success factors in distributed agile for outsourced product development},
journal={CONSEG 2009 - Proceedings of the International Conference on Software Engineering},
year={2009},
pages={74-79},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898832794&partnerID=40&md5=b37c7d1de48ddd8db4c7c05275a6de8d},
abstract={Agile Software Development and the breed of Agile Methodologies (XP, SCRUM, DSDM, etc.) have gained popularity since 2001. Primarily founded as methodologies for software projects executed at a single location, Agile Methodologies have started showing promising results in multi-site projects too with many adopters and practitioners across t h e g l o b e . For more than two decades, offshore delivery models have been successful in case of application maintenance and enhancement projects. In case of development projects iterative lifecycle approaches have gained familiarity and acceptability compared to the classical waterfall approach in delivering results and ensuring customer satisfaction. Agile Software Development focuses on early delivery of working software to measure the progress of projects and hence to mitigate risks. It creates an environment that responds to changes by means of being flexible and nimble. It discourages creation of extensive documents that do not add any value to the customer. Distributed Agile Software Development and Testing is nothing but applying Agile Principles and Practices to software projects executed by teams located across geographies. This paper is based on our experience in executing Outsourced Product Development &Testing engagements using Distributed Agile practices. This paper presents Critical Success Factors that need to be considered while implementing Agile Software Development and Testing across distributed teams.},
keywords={Customer satisfaction;  Iterative methods;  Product development;  Risk assessment;  Software design, Agile Methodologies;  Agile practices;  Agile software development;  Critical success factor;  Development project;  Distributed teams;  Principles and practices;  Software project, Software testing},
}

@ARTICLE{Santana2009124,
author={Santana, C. and Gusmão, C. and Soares, L. and Pinheiro, C. and Maciel, T. and Vasconcelos, A. and Rouiller, A.},
title={Agile software development and CMMI: What we do not know about dancing with elephants},
journal={Lecture Notes in Business Information Processing},
year={2009},
volume={31 LNBIP},
pages={124-129},
doi={10.1007/978-3-642-01853-4_15},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-66749116009&doi=10.1007%2f978-3-642-01853-4_15&partnerID=40&md5=0a1d4140e668cced63db4e927559e429},
abstract={In this paper we discuss how the merging of Agile Methodologies and Software Quality Models in same process today is ignoring many important aspects of both approaches. The inconsideration of these points results in a rigid integration of Agile and Quality Models that limits the full potential of their synergies. Ignoring such important items however does not necessarily means that they are not being utilized in the process, it normally indicates their utilization in an ad-hoc way. To explore this topic, we collected qualitative and quantitative data from literature and two Brazilian companies which work with agile and XP. © 2009 Springer Berlin Heidelberg.},
author_keywords={Agile software development;  Capability maturity model integration;  CMMI},
keywords={Software design, Agile Methodologies;  Agile software development;  Brazilian companies;  Capability maturity model integration;  CMMI;  Quality models;  Quantitative data;  Software quality models, Computer software selection and evaluation},
}

@ARTICLE{Sato2009192,
author={Sato, D. and Trindade, F.},
title={The lego lean game},
journal={Lecture Notes in Business Information Processing},
year={2009},
volume={31 LNBIP},
pages={192-193},
doi={10.1007/978-3-642-01853-4_26},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-66749137542&doi=10.1007%2f978-3-642-01853-4_26&partnerID=40&md5=1b25f6d12d3d9ea937cd44d725e18919},
abstract={After revolutionizing the automobile industry, Lean principles have been applied to different knowledge areas, such as software development. However, many people haven't been introduced to the concepts that made Lean successful. In this interactive session, the participants will work in a small Lego TM production line, experiencing the problems and applying Lean practices to overcome them. The workshop will also discuss the similarities and differences between the production line scenario and the software development industry. © 2009 Springer Berlin Heidelberg.},
author_keywords={kanban;  Lean software development;  pull system;  push system;  systems thinking;  work cell},
keywords={Software design;  System theory, kanban;  Lean software development;  pull system;  push system;  systems thinking;  work cell, Computer software},
}

@ARTICLE{Nastar2009411,
author={Nastar, M. and Wallman, P.},
title={An interdisciplinary approach to resolving conflict in the water domain},
journal={Environmental Science and Engineering (Subseries: Environmental Science)},
year={2009},
pages={411-424},
doi={10.1007/978-3-540-88351-7-31},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879611736&doi=10.1007%2f978-3-540-88351-7-31&partnerID=40&md5=e080207b519d623065afbfe63bbae842},
abstract={Integrated Water Management (IWM) in line with the European Union Water Framework Directive (WFD) promotes a collaborative-oriented approach to tackle water management issues. This requires the participation of various government departments and stakeholder groups along with scientists and experts from different scientific disciplines. Conflict, arising from the diversity of perspectives, beliefs and benefits among those interest groups is a common characteristic of integrated water management. In order to benefit from stakeholder participations in supporting and accepting any results obtained in stakeholder meetings etc, the conflict of interests must be addressed. Examining the essence of the conflict, the Integrated Sustainability Assessment (ISA) is a form of knowledge co-production aiming at gathering and synthesizing diverse perceptions of persisting problems. ISA is a cyclical process of scoping, envisioning, experimenting and learning to provide the stakeholder with a deeper understanding of causalities behind the water issues. Following the visionary process of ISA, we particularly focus on agent based modeling as an essential method to understand and visualize the complexity of water resource management. Agent Based Models (ABM) complements traditional analytic methods and is a useful approach to depict not only the roots of conflict, but also potential resolutions based on stakeholders viewpoints. Nevertheless, ABM and designing and implementing the computer applications, which are supposed to reflect the ideas shaped during the ISA process, is very challenging. There are few examples of computer models, if any, embedding multiple disciplines to capture the interactions among stakeholders related to water issues. As a result of these challenges, many developed models detach from the initial goals and cannot be used effectively to address the problem. We strive to address some of these challenges by recognizing the need for an analytical (conceptual) framework along with empirical evidence from case studies as well as utilizing appropriate methodologies and tools for the implementation phase. Respectively, first, we explore the role of the Agent Modeling Language (AML) to develop the conceptual model upon which the computer models should be built up. AML provides a rich set of modeling constructs for modeling applications that substantiates and/or shows characteristics of multi-agent systems such as a river basin with all its stakeholders. Second, we propose to apply eXtreme Programming (XP) methodology to implement agent-based models. XP is based on short-time software delivery providing the developers with the opportunity of fixing the applications' errors, and changing the direction of development in the early stages. We use an example to illustrate the process of developing an agent-based model and how to deal with the complications of converging different perspectives in the model. © Springer-Verlag Berlin Heidelberg 2009.},
author_keywords={Agent;  Agent based modeling;  Conflict;  Extreme programming;  Integrated sustainability assessment;  Integrated water management},
keywords={Agents;  Application programs;  Computational methods;  Computer applications;  Environmental engineering;  Environmental regulations;  Information technology;  Multi agent systems;  Sustainable development;  Water conservation;  Water management, Agent-based modeling;  Conflict;  EXtreme Programming;  Integrated water management;  Sustainability assessment, Economic and social effects},
}

@ARTICLE{Keenan2009245,
author={Keenan, F. and Damdul, N. and Kelly, S. and Connolly, D.},
title={Summary reporting for a linked interaction design-scrum approach: How much modeling is useful?},
journal={Lecture Notes in Business Information Processing},
year={2009},
volume={31 LNBIP},
pages={245-246},
doi={10.1007/978-3-642-01853-4_51},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-66749184651&doi=10.1007%2f978-3-642-01853-4_51&partnerID=40&md5=846591441a9ce511fcf36b49ea69858d},
abstract={Identifying the minimum beneficial modeling to support an agile development team is crucial. Often, story cards arranged on wall charts or spontaneously drawn diagrams provide sufficient detail to allow a team to understand an emerging problem. However, what is beneficial when a new stakeholder joins a team after development has commenced and needs to have project background and progress reported? This poster reports on the models produced by a process combining aspects of Interaction Design (ID) and Scrum for internet development in such a scenario. © 2009 Springer Berlin Heidelberg.},
author_keywords={Interaction design;  Modeling;  Persona;  Scrum},
keywords={Software engineering, Agile development;  Interaction design;  Internet development;  Modeling;  Persona;  Scrum, Design},
}

@BOOK{May2009184,
author={May, P.},
title={When is a scrum not a scrum?},
journal={Agile Testing: How to Succeed in an Extreme Testing Environment},
year={2009},
pages={184-190},
doi={10.1017/CBO9780511596797.026},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927060877&doi=10.1017%2fCBO9780511596797.026&partnerID=40&md5=1528c8a4907512116bc9221923cc6749},
abstract={SYNOPSIS This chapter presents a case study in which a large project was managed with Scrum by splitting the deliverable into three separate parts. Each part was assigned to a separate development team and the project was run as a “Scrum of Scrums.” The case study focuses on one of these teams, describing how they followed the Scrum methodology closely to build and system-test their part of the deliverable. It then examines a few of the reasons for the exceptional outcome achieved by this team: zero code bugs in their first live code release. The chapter closes with a look at common deviations from the prescribed Scrum methodology, and whether a project that deviates in any of these ways can still be considered to be following Scrum. Introduction My name is Peter May and I have worked for Deloitte as a technology consultant for the past six years. During this time, I’ve been involved in a number of agile projects in various roles, including developer, test manager, and latterly, as a project manager. Each of these agile projects has used the Scrum project management approach, but each has deviated from the “pure” Scrum approach to a greater or lesser extent. In the case study that follows, I look at a model example of how Scrum, when implemented in a form close to its “pure” form, can lead to the production of very-high-quality software artifacts. © John Watkins 2009 and Cambridge University Press, 2009.},
}

@BOOK{Thompson200962,
author={Thompson, G.},
title={A mixed approach to system development and testing: Parallel agile and waterfall approach streams within a single project},
journal={Agile Testing: How to Succeed in an Extreme Testing Environment},
year={2009},
pages={62-65},
doi={10.1017/CBO9780511596797.012},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927027806&doi=10.1017%2fCBO9780511596797.012&partnerID=40&md5=67635d435bae9d3427c67469aee85e22},
abstract={SYNOPSIS This case study describes a project for which I was the test program manager for an FTSE 100 life assurance company that was delivered using both waterfall/V-model and agile approaches alongside each other in separate but dependent projects. Introduction My name is Geoff Thompson. I have been involved in software testing for nearly twenty years. In addition to automation, I have in my time been a test analyst right through to a test program manager. In that time I have experienced or directly used many life-cycle delivery approaches, such as waterfall [5], Timeboxes [21], V-model [4], Rational Unified Process [7], Interactive [27], Agile and Scrum [26]. I am currently the Services Director for Experimentus Ltd, a U.K.-based software quality consultancy, specializing in process improvement, project management, test, configuration management, and requirements management. I am a founding member of the Information Systems Examination Board Software Testing Board and also a founding member of the International Software Testing Qualifications Board [42], and am currently the U.K. representative to the Board. I am also the founder and chairman of the U.K. Testing Board (www.uktb.org.uk). The following case study describes a project for which I was the test program manager for an FTSE 100 life assurance company (the BigLifeAssurance Insurance Co. Ltd [BLA Ltd]) that was delivered using waterfall/V-model and agile approaches alongside each other in separate but dependent projects. © John Watkins 2009 and Cambridge University Press, 2009.},
}

@CONFERENCE{Xiaohua2008566,
author={Xiaohua, W. and Zhi, W. and Ming, Z.},
title={The relationship between developers and customers in agile methodology},
journal={Proceedings of the International Conference on Computer Science and Information Technology, ICCSIT 2008},
year={2008},
pages={566-572},
doi={10.1109/ICCSIT.2008.9},
art_number={4624931},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-57849143803&doi=10.1109%2fICCSIT.2008.9&partnerID=40&md5=380a4a48ea38497f4fe84a8b185e4830},
abstract={Agile methods such as XP emphasize the adaptation to changes, the collaboration with customers and the role of individuals. The project manager, developer and customer should have a tactic to handle the uncertain factors and the management conflicts in software development process. XP ′ s on-site customer practice makes the customer play a important role in development process, and facilitate the broad collaboration between developer and customer. Based on the feature of XP project life cycle and practices, this paper explores respective activities and responsibilities between development team and customer team, and the issues in their collaboration. Some practices in which customer participates is addressed, the activities of both developer and customer are described, some probable problems when customer and programmer work together are presented, and a formal example is given. © 2008 IEEE.},
keywords={Computers;  Information technology;  Life cycle;  Project management;  Sales;  Windows operating system, Agile methodologies;  Agile methods;  Development processes;  Project managers;  Software development processes;  Uncertain factors;  XP projects, Customer satisfaction},
}

@CONFERENCE{Obendorf20082159,
author={Obendorf, H. and Finck, M.},
title={Scenario-based usability engineering techniques in agile development processes},
journal={Conference on Human Factors in Computing Systems - Proceedings},
year={2008},
pages={2159-2166},
doi={10.1145/1358628.1358649},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-57049092771&doi=10.1145%2f1358628.1358649&partnerID=40&md5=cd0c7a5e656fdd0493b6d4186a8dd5f2},
abstract={Improving the users' experience is a common goal of both software engineering and usability engineering. However, although practitioners of both disciplines collaborate in practice, development processes often rely on a sequential division of labor, and thus limit the effectiveness of a meeting of different perspectives. In this paper, we report on experiences we made in both academia and industry as we put an agile development process pattern to the test - combining Extreme Programming and Scenario-Based Usability Engineering, based on a blend of perspectives on equal terms.},
author_keywords={Contextual design;  Extreme programming;  Scenario-based design;  Software engineering;  Usability engineering},
keywords={Agile developments;  Contextual design;  Development processes;  Division of labors;  Engineering techniques;  Extreme programming;  Extreme programmings;  Scenario-based design, Agile manufacturing systems;  Engineering;  Human engineering;  Software design;  Software engineering;  Usability engineering, Computer systems},
}

@CONFERENCE{Patel2008267,
author={Patel, C. and Ramachandran, M.},
title={INSERT: An Improved Story card Based Requirement Engineering Practice for Extreme Programming},
journal={Proceedings of the 2008 International Conference on Software Engineering Research and Practice, SERP 2008},
year={2008},
pages={267-271},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-62749140801&partnerID=40&md5=4d740ad187f79ca05249e242638ae0d8},
abstract={Developing software that meets the customers or stakeholders ' needs and expectation is the ultimate goal of the software development methodology. To meet their need we have to perform requirement engineering which helps to identify and structure requirements. In traditional software development methods end users or stakeholders predefined their requirements and sent to the development team to analysis and negotiation to produce requirement specification. In many cases it is risky or very difficult and not economical to produce a complete, verifiable set of requirements. Traditional software development has a problem to deal with requirement change after careful analysis and negotiation. This problem is well tackled by the XP as XP recommends an on-site customer to represents their requirements through user stories on story cards. Generally customers have rarely a general picture of the requirements or system in their mind which leads problems related to requirements like requirements conflicts, missing requirements, and ambiguous requirements etc, and does not address non-functional requirements from exploration phase.},
author_keywords={Agile requirements;  Agile requirements elicitation;  Story cards;  User story},
keywords={Agile requirements;  Agile requirements elicitation;  End users;  Exploration phase;  EXtreme Programming;  Non-functional requirements;  On-site customers;  Requirement changes;  Requirement engineerings;  Requirement specifications;  Software development;  Software development methodologies;  Software development methods;  Story cards;  User story, Customer satisfaction;  Requirements engineering;  Sales;  Software design;  Windows operating system, Engineering research},
}

@CONFERENCE{Patel200830,
author={Patel, C. and Ramachandran, M.},
title={Acceptance test driven story card development: An improved requirement elicitation process in XP},
journal={International Conference on Software Engineering Theory and Practice 2008, SETP 2008},
year={2008},
pages={30-36},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878257448&partnerID=40&md5=2605a2aebc9f554df8af26ffdc471896},
abstract={Requirement elicitation is a process to collect information from the end users or stakeholders of system. In traditional software development models requirements are predefined and sent to the developers to do analysis from various stakeholders. Requirement elicitation and quality related to requirements are the challenging issues in the software development life cycle. XP, recommend an on-site customer to represents their requirements through user stories on story cards. Generally customers have rarely a general picture of the requirements or system in their mind which leads problems related to requirements like requirements conflicts, missing requirements, and ambiguous requirements etc, and not address non-functional requirements from exploration phase. Two third of the projects are failed because of ambiguous and incomplete user requirements, and poor quality of the requirements. Acceptance testing is also one of the key issues, which is often left unsolved or uncovered to verify user requirements in XP (Agile software development methodology). To solve these problems we propose A New Improved Requirement Elicitation (Gathering) Process framework for story cards in XP to improve quality of user stories to capture functional and non-functional user requirements on story cards. Our approach involves adopting acceptance tests right from story cards as soon as requirements are clearly understood. We also aim to demonstrate how acceptance test will improve story card driven agile software development (XP). We believe this will enhance the popularity of Agile based software development.},
author_keywords={Acceptance test;  Extreme programming;  Requirement engineering;  Story card;  User story},
keywords={Agile software development;  EXtreme Programming;  Non-functional requirements;  Requirement engineering;  Software development life cycle;  Software development models;  Story card;  User stories, Acceptance tests;  Requirements engineering;  Software design, Agile manufacturing systems},
}

@CONFERENCE{Patel200824,
author={Patel, C. and Ramachandran, M.},
title={Story card's values oriented prioritization matrix for XP (agile software development)},
journal={International Conference on Software Engineering Theory and Practice 2008, SETP 2008},
year={2008},
pages={24-29},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-70449407626&partnerID=40&md5=b96e5e1bdc47b40ed47110f1a78802f2},
abstract={Extreme Programming (XP) is a lightweight agile software development methodology. XP is a set of practices and principles which make XP better and more popular. XP proposes some of the best practices while some of them have weakness as well. From the software engineering point of view planning game (requirements engineering) practice needs to be well tackled compared to the other practices. Prioritization of story ards is remaining unsolved and it is relies on the one onsite customer knowledge. There is a system needs to build to prioritize requirements (Story Cards) based on the values of story cards and XP. In this paper we introduced modified planning game practice. We also analyze XP values and propose a prioritization matrix based on the story card's and XP values to solve the requirements prioritization problem, which give an ease on iteration and release planning for XP.},
keywords={Agile software development;  Best practices;  EXtreme Programming;  On-site customers;  Planning games;  Point of views;  Release planning;  Requirements prioritization, Iterative methods, Software engineering},
}

@ARTICLE{AzimSharifloo2008964,
author={Azim Sharifloo, A. and Saffarian, A.S. and Shams, F.},
title={Two architectural practices for extreme programming},
journal={Communications in Computer and Information Science},
year={2008},
volume={6 CCIS},
pages={964-967},
doi={10.1007/978-3-540-89985-3_144},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78449259814&doi=10.1007%2f978-3-540-89985-3_144&partnerID=40&md5=9d04994d44d64bad008e4f0094b0ef55},
abstract={Extreme programming (XP) is one of the important agile methods and is being used widely. Although XP itself is quite new, many of the practices utilized by it have been around for some time. The most controversial aspect of XP is the change management aspect of the process. In XP, the on-site customer requests the changes informally, often by verbally informing the development team. In spite of all benefits known about XP, it does not involve architectural techniques that are necessary to expect acceptable level of quality for the system being developed. This paper introduces two practices in order to empower XP's development process toward improving system's architecture. The main characteristic of proposed solution is that it is derived from values and practices of XP so as to be compatible with this process model and to keep its agility intact. © 2008 Springer-Verlag.},
author_keywords={Agile;  Architecture;  Extreme Programming;  Refactoring},
keywords={Agile;  Agile methods;  Change management;  Development process;  Development teams;  EXtreme Programming;  Improving systems;  Main characteristics;  On-site customers;  Process model;  Refactoring, Computer science, Agile manufacturing systems},
}

@CONFERENCE{NančovskaŠerbec2008233,
author={Nančovska Šerbec, I. and Kaučič, B. and Rugelj, J.},
title={Pair programming as a modern method of teaching computer science},
journal={MIPRO 2008 - 31st International Convention Proceedings: Computers in Education},
year={2008},
volume={4},
pages={233-237},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896812079&partnerID=40&md5=b12b98a62848a6223a3d2e100c3e2860},
abstract={At the Faculty of Education, University of Ljubljana we educate future computer science teachers. Beside didactical, pedagogical, mathematical and other interdisciplinary knowledge, students gain knowledge and skills of programming that are crucial for computer science teachers. For all courses, the main emphasis is the absorption of professional competences, related to the teaching profession and the programming profile. The latter are selected according to the well-known document, the ACM Computing Curricula. The professional knowledge is therefore associated and combined with the teaching knowledge and skills. In the paper we present how to achieve competences related to programming by using different didactical models (semiotic ladder, cognitive objectives taxonomy, problem solving) and modern teaching method "pair programming". Pair programming differs from standard methods (individual work, homeworks, seminars, projects etc.). It belongs to the extreme programming as a discipline of software development and is known to have positive effects on teaching first programming language. We have experimentally observed pair programming in the introductory programming course. The paper presents and analyzes the results of using this method: the aspects of satisfaction during programming and the level of gained knowledge. The results are in general positive and demonstrate the promising usage of this teaching method. © 2008 by MIPRO.},
keywords={Computer science teachers;  Computing curricula;  EXtreme Programming;  Introductory programming course;  Professional competence;  Professional knowledge;  Semiotic ladders;  Teaching methods, Curricula;  Education computing;  Mathematical programming;  Students;  Teaching, Computer science},
}

@BOOK{Gelbard2008169,
author={Gelbard, R.},
title={Software modeling processes: UML-xUML review},
journal={Handbook of Research on Modern Systems Analysis and Design Technologies and Applications},
year={2008},
pages={169-178},
doi={10.4018/978-1-59904-887-1.ch013},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898390945&doi=10.4018%2f978-1-59904-887-1.ch013&partnerID=40&md5=34750f84d829150c7c47ee8a10256de4},
abstract={Applications require short development cycles and constant interaction with customers. Requirement gathering has become an ongoing process, reflecting continuous changes in technology and market demands. System analysis and modeling that are made at the initial project stages are quickly abandoned and become outmoded. Model driven architecture (MDA), rapid application development (RAD), adaptive development, extreme programming (XP), and others have resulted in a shift from the traditional waterfall model. These methodologies attempt to respond to the needs, but do they really fulfill their objectives, which are essential to the success of software development? Unified modeling language (UML) was created by the convergence of several well-known modeling methodologies. Despite its popularity and the investments that have been made in UML tools, UML is not yet translatable into running code. Some of the problems that have been discovered have to do with the absence of action semantics language and its size. This chapter reviews and evaluates the UML evolution (UML2, xUML), providing criteria and requirements to evaluate UML and the xUML potential to raise levels of abstraction, flexibility, and productivity enhancement. At the same time, it pinpoints its liabilities that keep it from completely fulfilling the vision of software development through a continuous exactable modeling process, considered to be the future direction for modeling and implementation. © 2009, IGI Global.},
}

@ARTICLE{Khalaf20081968,
author={Khalaf, S.J. and Al-Jedaiah, M.N.},
title={Software quality and assurance in waterfall model and XP - A comparative study},
journal={WSEAS Transactions on Computers},
year={2008},
volume={7},
number={12},
pages={1968-1976},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-59249083752&partnerID=40&md5=af0c915c53bb10e29fbacc4a71ec7192},
abstract={Dealing with an increasingly volatile organizational environment is a serious challenge for managers of any software development. Traditional formal software development methodologies can be characterized as reflecting linear, sequential processes, and the related management approaches, and be effective in development software with stable, known, consistent requirements. Yet most real-world development efforts are much more likely to be conducted in more volatile environments, as organizations adapt to changing technology, markets, and social conditions. Requirements for systems must be able to change right along with them, often at "Internet speed" [1]. Project management approaches based on the traditional linear development methodologies are mismatched with such dynamic systems. The support of software quality in a software development process may be regarded under two aspects: first, by providing techniques, which support the development of high quality software and second, by providing techniques, which assure the required quality attributes in existing artifacts. Both approaches have to be combined to achieve effective and successful software engineering [2]. Agile methods may produce software faster but we also need to know how they meet our quality requirements. In this paper we compare the waterfall model with agile processes to show how agile methods achieve software quality under time pressure and in an unstable requirements environment, i.e. we analyze agile software quality assurance. We present a detailed waterfall model showing its software quality support processes. We then show the quality practices that agile methods have integrated into their processes. This allows us to answer the question "Can agile methods ensure quality even though they develop software faster and can handle unstable requirements"?},
author_keywords={Agile processes;  Customer needs;  Customer satisfactions;  Extreme programming;  Software development;  Software quality;  Waterfall model},
keywords={Agile manufacturing systems;  Customer satisfaction;  Formal methods;  Programming theory;  Project management;  Quality assurance;  Sales;  Software design;  Software engineering;  Total quality management, Agile processes;  Customer needs;  Customer satisfactions;  Extreme programming;  Software development;  Software quality;  Waterfall model, Computer software selection and evaluation},
}

@ARTICLE{Mahnic20081605,
author={Mahnic, V. and Zabkar, N.},
title={Using COBIT indicators for measuring scrum-based software development},
journal={WSEAS Transactions on Computers},
year={2008},
volume={7},
number={10},
pages={1605-1617},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-59249091674&partnerID=40&md5=370c6bb0aaa3a2360c48e7ef2b1c8c64},
abstract={The aim of this paper is to determine the level of compliance of AGIT model, developed during our previous research for measuring Scrum-based software development, with the information systems auditing criteria. For this purpose we use COBIT model. After a short introduction of Scrum, AGIT and COBIT, we perform comparison analysis of their indicators for software development. Then we upgrade AGIT model with the selected COBIT indicators. In order to improve the clarity of the model, we present its structure using IT Balanced Scorecard. Finally we suggest possible further research.},
author_keywords={Agile software development;  AGIT;  COBIT;  IT balanced scorecard;  IT indicators;  IT performance measurement;  Scrum},
keywords={Agile software development;  AGIT;  COBIT;  IT balanced scorecard;  IT indicators;  IT performance measurement;  Scrum, Software design},
}

@CONFERENCE{Rostal2008,
author={Rostal, P.M.},
title={Thoughts on weak links and Alexandrian life in scrum},
journal={PLoP08 - 15th Conference on Pattern Languages of Programs, Proceedings},
year={2008},
doi={10.1145/1753196.1753212},
art_number={13},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77952363640&doi=10.1145%2f1753196.1753212&partnerID=40&md5=984a284a15cb67c2482d790814658bca},
abstract={This paper looks at the Scrum software development process through a lens that emphasizes small worldness, nestedness, and scale-freeness, all characteristic of networks that feature weak links between their modules. Scrum has gained popularity over the past decade as a means of delivering valuable software to its host organization on a regular basis. Since weak links characterize natural and social systems at every scale, practitioners of Scrum should be able to improve their teams' processes by applying lessons learned from studying weak links. When practitioners look for weak links directly, they may find the task daunting and ask the question: "How can I tell whether weak links are strengthening or weakening my team's Scrum process if I can't even find them?" For the answer, this paper looks to Christopher Alexander's characteristics of wholeness, integrity, or life - strong centers, levels of scale, echoes, alternating repetition, and, in particular, the characteristic called deep interlock and ambiguity - which may correlate with the presence of weak links. © 2008 is held by the author(s).},
author_keywords={Christopher Alexander;  Life;  Nature of Order;  Patterns;  Scrum;  Weak links},
keywords={Christopher Alexander;  Lessons learned;  Nature of order;  Nestedness;  Scale-freeness;  Social systems;  Software development process;  Weak links, Computer software;  Linguistics;  Software design, Computer aided software engineering},
}

@CONFERENCE{Zualkernan2008,
author={Zualkernan, I.A.},
title={An ontology-driven approach for generating assessments for the scrum software process},
journal={SoMeT_08 - The 7th International Conference on Software Methodologies, Tools and Techniques},
year={2008},
page_count={16},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84858818293&partnerID=40&md5=ceb0c7cc39d8de36165841d47c3917be},
abstract={It is important for software engineers to have a correct understanding of the software process they are following. Recently, standards for process modeling like OMG's Software Process Engineering Meta-Model (SPEM) and associated tools like the Eclipse Process Framework (EPF) have emerged. These standards allow a fine-grained description of a process to be conveyed to a software engineer in the form of specialized websites. However, a mechanism to determine how well a software engineer really understands a particular software process is still lacking. This paper presents a competency framework for software process understanding An ontology and a system that automatically generates such assessments for the Scrum software engineering process is also described. Protégé is used to construct the ontology while Jena 2 and Velocity are used to generate IMS QTIbased assessments that are automatically converted to Adobe Flash Lite format. The assessments are rendered over the internet and the results are directly stored in the Moodle learning management system.},
author_keywords={EPF;  Ontology;  Owl;  Protégé;  Scrum;  Software process},
keywords={Associated tool;  Eclipse process framework;  EPF;  Flash lite;  Learning management system;  Meta model;  Owl;  Process Modeling;  Scrum;  Software engineering process;  Software engineers;  Software process;  Software process engineerings, Ontology;  Software engineering, Engineers},
}

@CONFERENCE{Patel2008357,
author={Patel, C. and Ramachandran, M.},
title={Bridging best traditional SWD practices with XP to improve the quality of XP projects},
journal={Proceedings - International Symposium on Computer Science and Its Applications, CSA 2008},
year={2008},
pages={357-360},
doi={10.1109/CSA.2008.74},
art_number={4654115},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-56649105341&doi=10.1109%2fCSA.2008.74&partnerID=40&md5=95a0a66bd147a768e96f2e12140f52bb},
abstract={Software quality is the main factor for the software reliability and software performance. Extreme programming strongly argues that it improves the quality of the software through feedback from iterative software development and by practicing pair programming and test driven development. Software quality is mainly depends on non-functional requirements. In most of cases non-functional requirements are not covered in the exploration phase. Especially in XP it is difficult to address non-functional requirements on the story cards. Our objective of this paper is knowledge based support to story cards to improve story cards and other XP practices by bridging them with the design of testability to improve non-functional user requirements, and predefined the factors for software testability on story cards with acceptance tests. © 2008 IEEE.},
keywords={Acceptance tests;  Extreme programmings;  Functional Requirements;  Knowledge-based;  Main factors;  Pair programmings;  Software developments;  Software performances;  Software qualities;  Software testabilities;  User requirements;  XP projects, Chemical shift;  Computer programming;  Computer science;  Computer software;  Computers;  Electric currents;  Knowledge based systems;  Large scale systems;  Magnetic anisotropy;  Reliability;  Software reliability;  Software testing;  Windows operating system, Computer software selection and evaluation},
}

@CONFERENCE{Cristal2008222,
author={Cristal, M. and Wildt, D. and Prikladnicki, R.},
title={Usage of SCRUM practices within a global company},
journal={Proceedings - 2008 3rd IEEE International Conference Global Software Engineering, ICGSE 2008},
year={2008},
pages={222-226},
doi={10.1109/ICGSE.2008.34},
art_number={4638671},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-56349131926&doi=10.1109%2fICGSE.2008.34&partnerID=40&md5=15accfc361b18453bd0e05531809a490},
abstract={Global companies that experimented extensive waterfall phased plans are trying to improve their existing processes to expedite team engagement. SCRUM has become an acceptable path to follow for those companies because it comprises project management as part of its practices. SCRUM has been used with the objective of simplifying project control through simple processes, easy to update documentation and higher team iteration over exhaustive documentation. Instead of investing team effort on producing static documentation, SCRUM proposes to focus on team continuous improvement aiming to add value to business processes. The purpose of this industry report is to describe two projects that experimented SCRUM practices within a globally distributed company. This company has development centers across North America, South America and Asia. This report covers challenges faced by the project teams, strengths and practical recommendations of using SCRUM in a globally distributed environment. © 2008 IEEE.},
keywords={Software engineering, Business processes;  Continuous improvements;  Development centers;  Distributed environments;  North America;  Practical recommendations;  Project controls;  Project teams;  South america;  Water falls, Project management},
}

@CONFERENCE{Fritzsche200881,
author={Fritzsche, M.},
title={Agile methods and requirements engineering in change intensive projects},
journal={ENASE 2008 - Proceedings of the 3rd International Conference on Evaluation of Novel Approaches to Software Engineering},
year={2008},
pages={81-88},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-55849132126&partnerID=40&md5=058cf84e0ea62110c9fccdca25bf9507},
abstract={In this paper we discuss how well agile methods can deal with requirements related issues in change intensive projects. Five agile methods are considered: eXtreme Programming, Scrum, Crystal, Dynamic Systems Development Method and Adaptive Software Development. We analyze how well these methods implement the basic goals of requirements engineering, how they counteract or support the occurrence of requirements changes and how they cope with problems arising from changing requirements. We show that agile methods provide a valid approach for requirements related issues, but also identify their weaknesses.},
author_keywords={Adaptive software development;  Agile software development;  Crystal;  Dynamic systems development method;  eXtreme programming;  Requirements engineering;  Scrum},
keywords={Agile manufacturing systems;  Dynamic programming;  Engineering;  Powders;  Requirements engineering;  Software design;  Software engineering, Adaptive software development;  Agile software development;  Dynamic systems development method;  eXtreme programming;  Scrum, Computer software selection and evaluation},
}

@CONFERENCE{Cordeiro20085,
author={Cordeiro, L. and Barreto, R. and Oliveira, M.},
title={Towards a semiformal development methodology for embedded systems},
journal={ENASE 2008 - Proceedings of the 3rd International Conference on Evaluation of Novel Approaches to Software Engineering},
year={2008},
pages={5-12},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-55849092010&partnerID=40&md5=2690a71084ab750da3d0998494b64424},
abstract={In recent days, the amount of functions has increased significantly in embedded products so that systems development methodologies play an important role to ensure the product's quality, cost, and time. Furthermore, this complexity coupled with constantly evolving specifications, has led to propose a semiformal development methodology to support the building of embedded real-time systems. A platform-based design approach has been used to balance costs and time-to-market in relation to performance and functionality constraints. We performed three expressive case studies and we concluded that the proposed methodology significantly reduces design time and improves software modularity and reliability.},
author_keywords={Agile methodologies;  Embedded agile development;  Embedded software verification;  Platform-based design;  Real-time software},
keywords={Agile manufacturing systems;  Computer software selection and evaluation;  Embedded systems;  Integrated circuits;  Software engineering;  Software reliability;  Verification, Agile methodologies;  Embedded agile development;  Embedded software verification;  Platform-based design;  Real-time software, Real time systems},
}

@CONFERENCE{Conrad2008549,
author={Conrad, M. and Huchard, M. and Preuss, T.},
title={Integrating shadows in model driven engineering for agile software development},
journal={Proceedings - CISIS 2008: 2nd International Conference on Complex, Intelligent and Software Intensive Systems},
year={2008},
pages={549-554},
doi={10.1109/CISIS.2008.69},
art_number={4606733},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-53149140630&doi=10.1109%2fCISIS.2008.69&partnerID=40&md5=1d48e5d856c9bf9013dffbac94ab8ff4},
abstract={Shadows are well known as a programming language feature in the application area of MUDs (a certain type of multi-player online game). We argue that agile methodologies can be enhanced by the use of shadows as this feature because of its inherent ability to dynamically change the behavior of classes and objects, provides mechanisms to ease common tasks such as prototyping, deprecating, dynamic classification and interclassing at run-time. Therefore shadows should be considered a notion beyond any specific programming languages in order to facilitate its use in model-driven software engineering. For this we introduce Shadows-UML, an UML extension, that would help to push forward the convergence between model-driven and agile methodologies. © 2008 IEEE.},
keywords={Agile manufacturing systems;  Computer software;  Computers;  Embedded systems;  Intelligent systems;  Linguistics;  Object recognition;  Query languages;  Software engineering;  Systems analysis;  Unified Modeling Language, Agile methodologies;  Agile software development;  Application area;  Dynamic classification;  International conferences;  Model Driven Engineering;  Model-driven;  On-line games;  Programming languages;  Prototyping;  Run-time;  Software-intensive systems;  UML extensions, Computer programming languages},
}

@CONFERENCE{Sureshchandra200897,
author={Sureshchandra, K. and Shrinivasavadhani, J.},
title={Moving from waterfall to agile},
journal={Proceedings - Agile 2008 Conference},
year={2008},
pages={97-101},
doi={10.1109/Agile.2008.49},
art_number={4599456},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-52949106106&doi=10.1109%2fAgile.2008.49&partnerID=40&md5=47a65fb5ba3ec0143c79f7b0e09998c8},
abstract={In a crisis ridden business environment, customers have become very averse to surprises. Business windows have become smaller; there is a heightened need for shorter development cycles and higher visibility. All this is translating into more and more customers specifically asking for agile. Service organizations such as Wipro Technologies need to adopt lean and agile methodologies to support the transition. As agile coaches, the biggest challenge we face is in transitioning the mindset of the team from that of a waterfall model to an agile thought pattern. Our experience in converting a waterfall team to agile is shared in this report. © 2008 IEEE.},
keywords={Agile methodologies;  Business environments;  Development cycles;  Service organizations;  Waterfall models;  Wipro Technologies},
}

@CONFERENCE{Valade2008148,
author={Valade, R.},
title={The big projects always fail: Taking an enterprise agile},
journal={Proceedings - Agile 2008 Conference},
year={2008},
pages={148-153},
doi={10.1109/Agile.2008.63},
art_number={4599467},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-52949094616&doi=10.1109%2fAgile.2008.63&partnerID=40&md5=5e65efdfc6c43f5bb8eada5893a49f0a},
abstract={My overall approach to software development has been to decompose large efforts into smaller, tractable components, and to fail fast when things appear to be heading in the wrong direction. Though not a particularly unusual model, I have been able to road-test it over eight years of agile experience, including a stint at DaimerChrysler on an Extreme Programming (XP) team that included some of the members of the original C3 payroll project. This pattern has been a keystone of our direction at the Technology division of Entertainment Publications, where we began our agile transformation about two years ago. Though it was originally a small pilot with an unspecified roll-out plan, we now use an agile approach for all our software development and support. This paper highlights the lessons we Ve learned in the process - some items for you to either avoid or embrace. © 2008 IEEE.},
keywords={Compensation (personnel);  Wages, EXtreme Programming;  Software development, Software design},
}

@CONFERENCE{Marchenko200815,
author={Marchenko, A. and Abrahamsson, P.},
title={Scrum in a multiproject environment: An ethnographically-inspired case study on the adoption challenges},
journal={Proceedings - Agile 2008 Conference},
year={2008},
pages={15-26},
doi={10.1109/Agile.2008.77},
art_number={4599449},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-52949130242&doi=10.1109%2fAgile.2008.77&partnerID=40&md5=7595819f02c4394865921429b5677532},
abstract={Agile methods continue to gain popularity. In particular, the Scrum method appears to be on the verge of becoming a de-facto standard in the industry, leading the so called Agile movement. While there are success stories and recommendations, there is little scientifically valid evidence of the challenges in the adoption of Agile methods in general, and Scrum in particular. Little, if anything, is empirically known about the application and adoption of Scrum in a multi-team and multi-project situation. The authors carried out an ethnographically informed longitudinal case study in industrial settings and closely followed how the Scrum method was adopted in a 20-person department, working in a simultaneous multi-project R&D environment. Altogether 10 challenges pertinent to the case of multi-team multi-project Scrum adoption were identified in the study. The authors contend that these results carry great relevance for other industrial teams. Future research avenues arising from the study are indicated. © 2008 IEEE.},
keywords={Agile methods;  Agile movement;  Case studies;  De facto standards;  Future research;  Industrial settings;  Multi-project environment, Standards},
}

@CONFERENCE{Jakobsen2008212,
author={Jakobsen, C.R. and Johnson, K.A.},
title={Mature agile with a twist of CMMI},
journal={Proceedings - Agile 2008 Conference},
year={2008},
pages={212-217},
doi={10.1109/Agile.2008.10},
art_number={4599479},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-52949097314&doi=10.1109%2fAgile.2008.10&partnerID=40&md5=1e2c9a4791067288a33c80a2ec0835f5},
abstract={Systematic is an agile company working at CMMI level 5, where the default way of working is based on Scrum and story based early testing development. Solid experiences in combining CMMI with Scrum and story based development, has shown that the mix provides strong synergies [2] and insights into what CMMI practices fit and amplify the execution of Scrum and story based early testing development This paper presents specifically how agile methods like Scrum are successfully combined with CMMI. CMMI provides solid support for what disciplines to consider. When applied the disciplines create a focus on important aspects of agile methods that perhaps are not normally elaborated, for example how to ensure a proper quality of a product backlog or how to ensure a proper "production line" for the project. This guidance may not be needed for small agile projects, but as the agile movement continues to grow, and is used for larger and more complex projects, agile projects will need to address these issues related to increased size and complexity. The experiences from combining CMMI and Scrum have led Systematic to identify examples of explicit guidance from CMMI that help to execute normal Scrum activities even better. These activities can be implemented in the spirit of the agile manifesto and principles and by doing so agile methods can be augmented and matured to ensure that even larger and more complex projects in the future can and will benefit from agile - with a twist of CMMI. © 2008 IEEE.},
keywords={Agile methods;  Agile movement;  Complex projects;  Level 5;  Production lines;  Solid supports, Chlorine compounds},
}

@CONFERENCE{Sutherland2008339,
author={Sutherland, J. and Schoonheim, G. and Rustenburg, E. and Rijk, M.},
title={Fully distributed scrum: The secret sauce for hyperproductive offshored development teams},
journal={Proceedings - Agile 2008 Conference},
year={2008},
pages={339-344},
doi={10.1109/Agile.2008.92},
art_number={4599502},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-52949084759&doi=10.1109%2fAgile.2008.92&partnerID=40&md5=ec53cb26ea47dff14af646f4118d827f},
abstract={Scrum was designed to achieve a hyperproductive state where productivity increases 5-10 times over industry averages and many collocated teams have achieved this effect. The question for this paper is whether distributed, offshore teams can consistently achieve the hyperproductive state. In particular, can a team establish a localized velocity and then maintain or increase that velocity when distributing teams across continents. Since 2006, Xebia started projects with half Dutch and half Indian team members. After establishing localized hyperproductivity, they move the Indian members of the team to India and show increasing velocity with fully distributed teams. After running XP engineering practices inside many distributed Scrum projects, Xebia has systematically productized a model very similar to the SirsiDynix model [1] for high performance, distributed, offshore teams with outstanding quality. © 2008 IEEE.},
keywords={Distributed teaming;  Engineering practices;  Productivity increases;  Team members, Technology},
}

@CONFERENCE{Laanti20081383,
author={Laanti, M.},
title={Implementing program model with agile principles in a large software development organization},
journal={Proceedings - International Computer Software and Applications Conference},
year={2008},
pages={1383-1391},
doi={10.1109/COMPSAC.2008.116},
art_number={4591786},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-51949087017&doi=10.1109%2fCOMPSAC.2008.116&partnerID=40&md5=508f3e41228b77d24eef81823944b086},
abstract={Organizations developing software have increasing interest towards deployment of agile methods. However, there is a problem in scaling up scrum and other agile methods, since these were originally meant for individual team scope. It is not enough to deploy agile methods only on the team level - because of the dependencies that teams have between each other when developing large software systems, and because the software engineering teams need input for their decision making (or actual decisions) and need to be synchronized with other activities. We present one way of scaling up scrum to program level consisting of several scrum teams, concentrating on the changes done in the process front-end. We also describe a new artifact called Agile Policy that was created for large-scale agile deployment. © 2008 IEEE.},
keywords={Computer applications;  Computers;  Concentration (process);  Decision making;  Problem solving;  Societies and institutions;  Software engineering;  Technology;  Word processing, Agile methods;  Agile principles;  Developing software;  Engineering teams;  Large software systems;  One way;  Scaling-up;  Software development organizations, Computer software},
}

@CONFERENCE{Hashmi2008519,
author={Hashmi, S.I. and Baik, J.},
title={Quantitative process improvement in XP using six sigma tools},
journal={Proceedings - 7th IEEE/ACIS International Conference on Computer and Information Science, IEEE/ACIS ICIS 2008, In conjunction with 2nd IEEE/ACIS Int. Workshop on e-Activity, IEEE/ACIS IWEA 2008},
year={2008},
pages={519-524},
doi={10.1109/ICIS.2008.53},
art_number={4529871},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-51349119215&doi=10.1109%2fICIS.2008.53&partnerID=40&md5=6fab4f44211f4a92ee8239c801fcd2e6},
abstract={XP (eXtreme Programming) has been used for reducing defects and dealing with changing customer requirements effectively. It has been well known for its defect reduction capability. But, software can be made more reliable by means of process improvement. In general, models like CMM/CMMI have been used for software development process improvement. However, these models have some problems to be used with XP because of less number of process artifacts produced by agile processes. Six Sigma on the other hand, provides the quantitative analysis capabilities required to measure and control process performance. Using XP with Six Sigma can provide means of analyzing XP data and systematically improve process performance. In order to prove our point, we map Six Sigma tools to activities involved at each phase of XP and show that Six Sigma technique can be used with XP to measure and improve the performance of XP process. We also suggest a Six Sigma process improvement guideline with examples. © 2008 IEEE.},
keywords={Communication;  Computer networks;  Cybernetics;  Information management;  Information science;  Software engineering, Process improvements;  Six-sigma, Windows operating system},
}

@CONFERENCE{Sharifloo2008310,
author={Sharifloo, A.A. and Saffarian, A.S. and Shams, F.},
title={Embedding architectural practices into extreme programming},
journal={Proceedings of the Australian Software Engineering Conference, ASWEC},
year={2008},
pages={310-319},
doi={10.1109/ASWEC.2008.4483219},
art_number={4483219},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-50249133082&doi=10.1109%2fASWEC.2008.4483219&partnerID=40&md5=0a6d5a4abf7f4c2dfcf879b60174cc63},
abstract={Today, agile methods become a popular approach to develop software systems. They try to satisfy customer, respond to changes, release in less time and achieve suitable profits for developers. XP is one of the most popular agile methods which is currently being used and different kinds of research have been accomplished about its various aspects such as pair programming. In spite of all benefits known of XP, it does not involve architectural techniques yet. As it is mentioned in many technical reports, the way to achieve high quality of system is to consider its architecture as an important matter in the development process. This paper introduces two practices in order to empower XP's development process toward improving system's architecture. The main characteristic of proposed solution is that it is derived from values and practices of XP in order to be compatible with XP process model and to keep its agility intact. © 2008 IEEE.},
keywords={Agile manufacturing systems;  Computer software;  Software engineering;  Technology, Agile methods;  Architectural techniques;  Australian Software Engineering Conference;  Development processes;  EXtreme Programming;  High-quality;  ITS architecture;  Pair-programming;  Process modelling;  Software systems;  Technical reports, Windows operating system},
}

@ARTICLE{Moser2008360,
author={Moser, R. and Pedrycz, W. and Sillitti, A. and Succi, G.},
title={A model to identify refactoring effort during maintenance by mining source code repositories},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2008},
volume={5089 LNCS},
pages={360-370},
doi={10.1007/978-3-540-69566-0_29},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-48249091200&doi=10.1007%2f978-3-540-69566-0_29&partnerID=40&md5=dd92bc9b0f0c8d8491d5eb871b02c695},
abstract={The use of refactoring as a way to continuously improve the design and quality of software and prevent its aging is mostly limited to Agile Methodologies and to a lower amount to software reengineering. In these communities refactoring is supposed to improve in the long-term the structure of existing code in order to make it easier to modify and maintain. To sustain such claims and analyze the impact of refactoring on maintenance we need to know how much refactoring developers do. In few cases such information is directly available for example from CVS log messages. In this study we propose a model on how to mine software repositories in order to obtain information of refactoring effort throughout the evolution of a software system. Moreover, we have developed a prototype that implements our model and validate our approach with two small case studies. © 2008 Springer-Verlag Berlin Heidelberg.},
author_keywords={Agile Methodologies;  Refactoring;  Software evolution;  Software metrics},
keywords={Codes (standards);  Codes (symbols);  Computer software;  Maintenance;  Mining;  Reengineering;  Software design;  Software engineering, Agile Methodologies;  Case studies;  International conferences;  Know-how;  Quality of softwares;  Refactoring;  Software evolution;  Software metrics;  Software Process Improvement;  Software reengineering;  Software repositories;  Software systems;  Source code repositories, Computer software maintenance},
}

@ARTICLE{Trinidad2008883,
author={Trinidad, P. and Benavides, D. and Durán, A. and Ruiz-Cortés, A. and Toro, M.},
title={Automated error analysis for the agilization of feature modeling},
journal={Journal of Systems and Software},
year={2008},
volume={81},
number={6},
pages={883-896},
doi={10.1016/j.jss.2007.10.030},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-42049110531&doi=10.1016%2fj.jss.2007.10.030&partnerID=40&md5=37e7cc86948271c403360a1535f92809},
abstract={Software Product Lines (SPL) and agile methods share the common goal of rapidly developing high-quality software. Although they follow different approaches to achieve it, some synergies can be found between them by (i) applying agile techniques to SPL activities so SPL development becomes more agile; and (ii) tailoring agile methodologies to support the development of SPL. Both options require an intensive use of feature models, which are usually strongly affected by changes on requirements. Changing large-scale feature models as a consequence of changes on requirements is a well-known error-prone activity. Since one of the objectives of agile methods is a rapid response to changes in requirements, it is essential an automated error analysis support in order to make SPL development more agile and to produce error-free feature models. As a contribution to find the intended synergies, this article sets the basis to provide an automated support to feature model error analysis by means of a framework which is organized in three levels: a feature model level, where the problem of error treatment is described; a diagnosis level, where an abstract solution that relies on Reiter's theory of diagnosis is proposed; and an implementation level, where the abstract solution is implemented by using Constraint Satisfaction Problems (CSP). To show an application of our proposal, a real case study is presented where the Feature-Driven Development (FDD) methodology is adapted to develop an SPL. Current proposals on error analysis are also studied and a comparison among them and our proposal is provided. Lastly, the support of new kinds of errors and different implementation levels for the proposed framework are proposed as the focus of our future work. © 2007 Elsevier Inc. All rights reserved.},
author_keywords={Agile methods;  Constraint programming;  Error analysis;  Feature models;  Theory of diagnosis},
keywords={Automation;  Constraint theory;  Error analysis;  Large scale systems;  Mathematical models;  Software engineering, Agile methods;  Constraint programming;  Feature models;  Software Product Lines (SPL);  Theory of diagnosis, Agile manufacturing systems},
}

@CONFERENCE{Taromirad2008418,
author={Taromirad, M. and Ramsin, R.},
title={An appraisal of existing evaluation frameworks for agile methodologies},
journal={Proceedings - Fifteenth IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, ECBS 2008},
year={2008},
pages={418-427},
doi={10.1109/ECBS.2008.32},
art_number={4492423},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-44149106419&doi=10.1109%2fECBS.2008.32&partnerID=40&md5=b2bbf3974ffed83d7a3bd62b2f011707},
abstract={The emergence of agile software development methodologies, and the sheer number of the variants introduced, has raised the need for evaluation and comparison efforts, mostly in order to facilitate the selection or engineering of an agile methodology aimed at a specific software development situation. But existing evaluation frameworks and comparison tools do not satisfy all the needs of project managers and method engineers. The principal objectives of this paper are to introduce a fundamental basis for evaluation frameworks that target existing challenges, and also to evaluate existing evaluation frameworks in order to identify their shortcomings. To this aim, we have proposed an evaluation criterion set, or metacriteria, according to which existing evaluation frameworks have been assessed. These meta-criteria define the essential features that an appropriate evaluation framework is expected to possess. The evaluation results show that existing evaluation frameworks do not satisfy typical requirements, and fail to address existing challenges. Therefore, the need still remains for an appropriate and useful evaluation framework for appraising agile methodologies. © 2008 IEEE.},
keywords={Agile methodologies;  Agile software development;  Metacriteria, Data reduction;  Feature extraction;  Metadata;  Project management, Computer aided software engineering},
}

@ARTICLE{Livermore200831,
author={Livermore, J.A.},
title={Factors that significantly impact the implementation of an agile software development methodology},
journal={Journal of Software},
year={2008},
volume={3},
number={4},
pages={31-36},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78651581351&partnerID=40&md5=2f6cca78b0ca0017a3ef9edd92317b62},
abstract={The Internet economy has altered the current rules of software engineering. Traditional development methodologies have proven too cumbersome to meet the rapidly changing requirements and short product cycles demanded by business today. To meet these rapidly changing requirements, software developers have developed agile software development methodologies (SDMs) utilizing iterative development, prototyping, templates, and minimal documentation requirements. This research project investigated agile SDM implementation using an online survey sent to software development practitioners worldwide. This survey data was used to identify factors related to agile SDM implementation. The factors that significantly impacted agile methodology implementations included training, management involvement, access to external resources, and corporation size. Other factors such as using models, having an implementation plan, collocating the development team, and developing software for Internet or intranet use did not significantly impact the implementation of an agile software development methodology. A number of the factors that impact the implementation of an agile development methodology are completely under the control of management. Organizations that are considering implement ting an agile methodology are able to manipulate some of these factors to increase the opportunities for success of their methodology. © 2008 Academy Publisher.},
author_keywords={Agile methodology implementation;  Agile software development;  Extreme programming;  Scrum},
keywords={Agile development;  Agile methodologies;  Agile software development;  Developing software;  Development methodologies;  External resources;  Internet economy;  Iterative development;  Management involvement;  On-line survey;  prototyping;  Research projects;  short product;  Software developers;  software development;  Survey data, Computer networks;  Computer software;  Industry;  Information technology;  Internet;  Management;  Mathematical models;  Product development;  Software engineering;  Space division multiple access;  Surveys;  Technology, Software prototyping},
}

@ARTICLE{Dawande200871,
author={Dawande, M. and Johar, M. and Kumar, S. and Mookerjee, V.S.},
title={A comparison of pair versus solo programming under different objectives: An analytical approach},
journal={Information Systems Research},
year={2008},
volume={19},
number={1},
pages={71-92},
doi={10.1287/isre.1070.0147},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-61349162996&doi=10.1287%2fisre.1070.0147&partnerID=40&md5=851e924bbe3de76dd0a79c390693ea9f},
abstract={This study compares the performances of pair development (an approach in which a pair of developers jointly work on the same piece of code), solo development, and mixed development under two separate objectives: effort minimization and time minimization. To this end, we develop analytical models to optimize module-developer assignments in each of these approaches. These models are shown to be strongly NP-hard and solved using a genetic algorithm. The solo and pair development approaches are compared for a variety of problem instances to highlight project characteristics that favor one of the two practices. We also propose a simple criterion that can reliably recommend the appropriate approach for a given problem instance. Typically, for efficient knowledge sharing between developers or for highly connected systems, the pair programming approach is preferable. Also, the pair approach is better at leveraging expertise by pairing experts with less skilled partners. Solo programming is usually desirable if the system is large or the effort needed either to form a pair or to code efficiently in pairs is high. Solo programming is also appropriate for projects with a tight deadline, whereas the reverse is true for projects with a lenient deadline. The mixed approach (i.e., an approach where both the solo and pair practices are used in the same project) is only indicated when the system consists of groups of modules that are sufficiently different from one another. © 2008 INFORMS.},
author_keywords={Extreme programming;  Genetic algorithms;  Heuristics;  Integer programming;  Pair programming;  Software development methodology},
keywords={Analytical approach;  Connected systems;  EXtreme Programming;  Heuristics;  Pair-programming;  Project characteristics;  Software development methodologies;  Time minimization, Integer programming;  Software engineering, Genetic algorithms},
}

@ARTICLE{RizwanJameelQureshi2008654,
author={Rizwan Jameel Qureshi, M. and Hussain, S.A.},
title={An adaptive software development process model},
journal={Advances in Engineering Software},
year={2008},
volume={39},
number={8},
pages={654-658},
doi={10.1016/j.advengsoft.2007.08.001},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-41549118861&doi=10.1016%2fj.advengsoft.2007.08.001&partnerID=40&md5=eb3c35cbe080428720496fb20e5816b3},
abstract={The concept of agile process models has gained great popularity in software (SW) development community in past few years. Agile models promote fast development. This property has certain drawbacks, such as poor documentation and bad quality. Fast development promotes use of agile process models in small-scale projects. This paper modifies and evaluates extreme programming (XP) process model and proposes a novel adaptive process mode based on these modifications. © 2007 Elsevier Ltd. All rights reserved.},
author_keywords={Adaptive software development;  CBD;  OSSD;  SDLC;  XP},
keywords={Adaptive algorithms;  Computer programming;  Mathematical models;  Project management, Adaptive software development;  Adaptive softwares;  Bad quality;  Extreme programming (XP) process models, Software engineering},
}

@ARTICLE{Dubinsky2008281,
author={Dubinsky, Y. and Hazzan, O. and Talby, D. and Keren, A.},
title={Agile system analysis and design},
journal={Lecture Notes in Business Information Processing},
year={2008},
volume={3 LNBIP},
pages={281-292},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872011065&partnerID=40&md5=24a6780fa79fbd58e9712f321a210c40},
abstract={Agile software development methods mainly aim at increasing software quality by fostering customer collaboration and performing exhaustive testing. The introduction of Extreme Programming (XP) - the most common agile software development method - into an organization is accompanied with conceptual and organizational changes. These changes range from daily-life changes (e.g., sitting together and maintaining an informative project environment) and continue with changes on the management level (e.g., meeting and listening to the customer during the whole process and the concept of the whole team which means that all role holders are part of the team). This paper examines the process of transition to an agile development process in a large-scale software project in the Israeli Air Force as it is perceived from the system analysis and design perspective. Specifically, the project specifications of the agile team are compared with those of a team who continues working according to the previous heavyweight method during the first half year of transition. Size and complexity measures are used as the basis of the comparison. In addition to the inspection of the specifications, the change in the role of the system analysts, as the system analysts conceive of it, is examined. © 2008 Springer-Verlag Berlin Heidelberg.},
keywords={Computer software selection and evaluation;  Information systems;  Software design;  Specifications;  Systems analysis, Agile development;  Agile software development;  Agile teams;  Complexity measures;  Customer collaboration;  Exhaustive testing;  EXtreme Programming;  Israeli air forces;  Large-scale software projects;  Management level;  Organizational change;  Project environment;  Project specification;  Software Quality;  System analysis and design;  Whole process, Agile manufacturing systems},
}

@ARTICLE{Hayes2008161,
author={Hayes, S. and Richardson, I.},
title={Scrum implementation using Kotter's change model},
journal={Lecture Notes in Business Information Processing},
year={2008},
volume={9 LNBIP},
pages={161-171},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878720047&partnerID=40&md5=2ca9a3104c09ed06ee9b65ff9ccb69e3},
abstract={Developing reliable software is a complex task which is becoming even more challenging as customers put overwhelming demands on software companies to produce high quality products in shorter time frames. Scrum is an agile, lightweight software development process that can be used to manage and control software projects using iterative, incremental practices. Scrum aims to increase productivity and improve quality in complex environments. Experts claim that this is a simple process whose aims are effortlessly achieved. The reality is that successful implementation is far from easy and requires significant training and plenty of practice. The case study presented in this paper investigates the use of Kotter's Change Model to support the implementation of Scrum in a software company. © Springer-Verlag Berlin Heidelberg 2008.},
keywords={Industry, Change models;  Complex environments;  Complex task;  Control software;  High-quality products;  Software company;  Software development process;  Time frame, Software engineering},
}

@CONFERENCE{Acharya2008193,
author={Acharya, S. and Burke, D.},
title={Incorporating gaming in software engineering projects: Case of RMU monopoly},
journal={IMSCI 2008 - 2nd International Multi-Conference on Society, Cybernetics and Informatics, Proceedings},
year={2008},
volume={1},
pages={193-198},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896634144&partnerID=40&md5=361cb0e74c144b83b837696f476fd195},
abstract={A major challenge in engineering education is retaining student interest in the engineering discipline. Active student involvement in engineering projects is one way of retaining student interest. Such involvement can only be realized if project inception comes entirely from the student. This paper presents a software game, RMU-Monopoly, developed as a project requirement for a software engineering course and describes the challenges and gains of a project. RMU-Monopoly was proposed by three junior software engineering students. The game is a multi-platform software program that allows up to eight players and implements all rules of the Monopoly board game. To ensure agility, the game was developed using the spiral software development model. The Software Requirements Specification (SRS) document was finalized through an iterative procedure. Standard Unified Modeling Language (UML) diagrams were used for product design. A Risk Mitigation, Monitoring, and Management Plan (RMMM) was developed to ensure proactive risk management. Gantt chart, weekly progress meetings and weekly scrum meetings were used to track project progress. C Sharp (C#) and Sub-Version were used in a client-server architecture to develop the software. The project was successful in retaining student interest in the software engineering discipline.},
author_keywords={Education;  Game;  Monopoly;  Retention;  Software},
keywords={Client server computer systems;  Competition;  Computer software;  Cybernetics;  Education;  Education computing;  Information science;  Interactive computer systems;  Product design;  Risk management;  Software engineering;  Unified Modeling Language, Client-server architectures;  Game;  Monopoly;  Retention;  Software engineering course;  Software engineering projects;  Software engineering students;  Software requirements specifications, Students},
}

@CONFERENCE{Keenan200772,
author={Keenan, F. and Bustard, D.},
title={Enhancing extreme programming (XP) with environment analysis},
journal={Proceedings of the IASTED International Conference on Software Engineering, SE 2007},
year={2007},
pages={72-77},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-56149098987&partnerID=40&md5=6bedb3736beca6e6dfe00b9b82cf63de},
abstract={Software development can be treated as a form of 'problem solving'. The two main activities are then (i) understanding the problem, by analysing the situation to determine relevant requirements; and (ii) solving the problem, by implementing software that takes account of those requirements. This paper argues that eXtreme Programming (XP) currently places insufficient emphasis on problem understanding and proposes an approach that offers additional front end analysis based on Soft Systems Methodology (SSM). The models of SSM are linked to XP through user stories. The first part of the paper outlines the process involved. This is followed by details of an initial investigation of the proposal, involving experimental group projects with undergraduate computing students. The results highlight some of the strengths and weaknesses of the approach, indicating directions for future research.},
author_keywords={EXtreme programming;  Soft systems methodology},
keywords={Software engineering;  Spontaneous emission;  Windows operating system, Environment analyses;  Experimental groups;  EXtreme programming;  Extreme programmings;  Front ends;  Future researches;  Soft systems methodologies;  Soft systems methodology;  Software developments;  User stories, Problem solving},
}

@CONFERENCE{Marçal200713,
author={Marçal, A.S.C. and De Freitas, B.C.C. and Furtado Soares, F.S. and Belchior, A.D.},
title={Mapping CMMI project management process areas to SCRUM practices},
journal={Proceedings - International Conference on Software Engineering},
year={2007},
pages={13-22},
doi={10.1109/SEW.2007.102},
art_number={4402760},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-47749150682&doi=10.1109%2fSEW.2007.102&partnerID=40&md5=6b06c4f9d13ad721cff6e25d2c28d05c},
abstract={Over the past years, the Capability Maturity Model (CMM) and Capability Maturity Model Integration (CMMI) have been broadly used for assessing organizational maturity and process capability throughout the world [20]. However, the rapid pace of change in information technology has caused increasing frustration to the heavyweight plans, specifications, and other documentation imposed by contractual inertia and maturity model compliance criteria [4]. In light of that, agile methodologies have been adopted to tackle this challenge. The aim of our paper is to present mapping between CMMI and one of these methodologies, Scrum. It shows how Scrum addresses the Project Management Process Areas of CMMI. This is useful for organizations that have their plan-driven process based on the CMMI model and are planning to improve its processes toward agility or to help organizations to define a new project management framework based on both CMMI and Scrum practices.},
keywords={Conformal mapping;  Planning;  Process engineering;  Process planning;  Software engineering;  Specifications, Agile methodologies (AM);  Capability maturity model (CMM);  Capability maturity model integration (CMMI);  Management frameworks;  Maturity models;  Organizational maturity;  Process capability (Cpk);  Project management process (PNP), Project management},
}

@CONFERENCE{Hashmi2007367,
author={Hashmi, S.I. and Baik, J.},
title={Software quality assurance in XP and spiral - A comparative study},
journal={Proceedings - The 2007 International Conference on Computational Science and its Applications, ICCSA 2007},
year={2007},
pages={367-374},
doi={10.1109/ICCSA.2007.69},
art_number={4301169},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-48049122405&doi=10.1109%2fICCSA.2007.69&partnerID=40&md5=a8e416392f6a28c6a6cf8270f00bd9b5},
abstract={Agile processes have been introduced to avoid the problems most of software practitioners have run up against by using traditional software development methodologies. These are well known for their benefits like focus on quality, early business value delivery, higher morale of stakeholders, and the reduced cost/schedule. Also, they can support the earlier and quicker production of the code by dividing the product into small segments called iterations. However, there are on-going debates about their flexibility to accommodate changing requirements and whether the productivity and quality of the agile processes is satisfactory for the customers or not. Previously available studies have mostly focused on comparing XP(eXtreme Programming) with some other Agile methodologies, rather than comparing it with traditional plan-driven software development methodologies. In this Paper, we identify the XP phases and practices, how they ensure product quality, and map XP phases against the Spiral model phases to prove that XP has built-in QA (Quality Assurance) practices in its life cycle, in addition to its focus on productivity. A case study is also included to empirically investigate quality of the product developed using XP with comparison to the product developed using Spiral Model. © 2007 IEEE.},
keywords={Flow patterns;  Life cycle;  Quality assurance;  Quality control;  Software design;  Total quality management;  Windows operating system, Agile methodologies;  Agile processing;  Business values;  Case studies;  Comparative studies;  Computational sciences;  EXtreme Programming;  International conferences;  Product qualities;  Software development;  Software practitioners;  Software quality assurance;  Spiral models;  Traditional software, Computer software selection and evaluation},
}

@CONFERENCE{Alarcón2007246,
author={Alarcón, P.P. and Garbajosa, J.},
title={Identifying application key knowledge through system operations modeling},
journal={Proceedings of the 6th IEEE International Conference on Cognitive Informatics, ICCI 2007},
year={2007},
pages={246-254},
doi={10.1109/COGINF.2007.4341897},
art_number={4341897},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-48049108674&doi=10.1109%2fCOGINF.2007.4341897&partnerID=40&md5=80a707a4b6732b3c933ffc1c310a99d3},
abstract={One of the problems associated with complex systems engineering is identifying the system knowledge relevant to build system implementation. System operations are an essential part of this knowledge. Software and system engineering standards highlight the importance of system operations; templates for a concept of operations document are available from different standard bodies in the context of requirements engineering and specification. However, specific guidelines for operations modeling are not usually provided. This paper introduces an approach to systematically model system operations. The cornerstone for this is an operations metamodel; this metamodel is presented within this paper and has been defined using UML 2.x. The baseline for the metamodel is a schema, also introduced within the paper, which formalizes system operations in terms of commands acting on systems, inputs to the system, and different kinds of outputs classified into responses, notifications and alarms. Operations models, as presented here, comprise system knowledge essentials from a functional point of view but reduced in size compared to the whole system specification. They can be deployed in several ways; this paper presents their use as drivers for system development and validation from early lifecycle stages. ©2007 IEEE.},
author_keywords={Agile methodologies;  Complex systems;  Concept of operations;  Conops;  Engineering of computer based systems;  Systems/software operations modeling;  Systems/software systems engineering;  User-system interaction modeling},
keywords={Chlorine compounds;  Industrial engineering;  Specifications;  Standards;  Systems engineering;  Technology;  Unified Modeling Language, Agile methodologies;  Cognitive informatics;  Complex systems;  Complex systems engineering;  Concept of operations;  Conops;  Engineering of computer based systems;  Engineering standards;  International conferences;  Life-cycle;  Meta modelling;  Model systems;  Standard bodies;  System development;  System implementation;  System knowledge;  System operations;  System specifications;  Systems/software operations modeling;  Systems/software systems engineering;  User-system interaction modeling, Knowledge engineering},
}

@CONFERENCE{Zanatta2007173,
author={Zanatta, A.L. and Vilain, P.},
title={Agile methods and quality models: Towards an integration in requirements engineering},
journal={19th International Conference on Software Engineering and Knowledge Engineering, SEKE 2007},
year={2007},
pages={173-178},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886911842&partnerID=40&md5=30a0830381c851c64c6b2f2be3da1a5a},
abstract={Significant attention has lately been given to the integration between agile methods and. software quality models. This is particularly true for the requirements engineering area, where agile methods neglect some of the documentation and control procedures traditionally used in its process. This work is an effort to extend Scrum so it becomes compatible with CMMI Requirements Management and Development process areas. We analyze Scrum and define some guidelines to meet the requisites of both process areas that are currently not addressed in Scrum. We applied and validated these guidelines in a software development organization. The results show that is possible to use agile methods with CMMI model, as long as the organization is prepared to apply new approaches. Copyright © (2007) by Knowledge Systems Institute (KSI).},
keywords={Control procedures;  Development process;  New approaches;  Process areas;  Quality models;  Requirements management;  Software development organizations;  Software quality models, Computer software selection and evaluation;  Knowledge engineering;  Requirements engineering, Software engineering},
}

@CONFERENCE{Beavers2007296,
author={Beavers, P.A.},
title={Managing a large "Agile" software engineering organization},
journal={Proceedings - AGILE 2007},
year={2007},
pages={296-303},
doi={10.1109/AGILE.2007.40},
art_number={4293612},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-46449135490&doi=10.1109%2fAGILE.2007.40&partnerID=40&md5=e9a03c5798a1ad257b9a887b697522ab},
abstract={This is the story of my business and personal transformation as our department adopted the Agile methodology. The bumps and bruises along the way forced a shift in management philosophy. Embracing the transformation has enabled significant success within the company. The confidence of our customers and internal organizations in our ability to deliver high quality software has increased dramatically. Software releases are now delivered on time with an improved level of quality. However, this success did not necessarily come easily. There were many obstacles to overcome as this large organization transformed itself from a largely waterfall development organization into a high-output Agile development machine. This article presents this transformation and the impact it had on the organization's leadership and management styles. © 2007 IEEE.},
keywords={Computer software selection and evaluation;  Industry;  Mathematical transformations;  Philosophical aspects;  Societies and institutions;  Software engineering, Agile development;  Agile methodologies;  High quality software;  management philosophy;  On time, Management},
}

@CONFERENCE{Mangalaraj2007383,
author={Mangalaraj, G.A. and Bhadauria, V.S.},
title={Pair programming: Effects of trust on software quality},
journal={Association for Information Systems - 13th Americas Conference on Information Systems, AMCIS 2007: Reaching New Heights},
year={2007},
volume={1},
pages={383-390},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870162932&partnerID=40&md5=5bd62cb16d5795977e74df544c505510},
abstract={Trust is increasingly becoming an important area of research in software development with the proliferation of agile methodologies. In this study, we propose to investigate the effect of trust on the performance of a pair programming team. High levels of trust in the competence of the fellow member are hypothesized to increase the perceived effort applied in software development. This relationship is moderated by the characteristics of the software development task. Perceived effort applied at the task is hypothesized to mediate the relationship between trust and the team performance which is measured in terms of the solution quality. We propose to use a laboratory experiment to test our model. Limitations are discussed and future research directions are suggested.},
author_keywords={Agile methodologies;  Pair programming;  Software development;  Software quality;  Trust},
keywords={Agile Methodologies;  Future research directions;  Laboratory experiments;  Pair-programming;  Software Quality;  Solution quality;  Team performance;  Trust, Computer software selection and evaluation;  Information systems;  Software engineering, Software design},
}

@CONFERENCE{Robinson2007339,
author={Robinson, N.},
title={A technical story},
journal={Proceedings - AGILE 2007},
year={2007},
pages={339-343},
doi={10.1109/AGILE.2007.68},
art_number={4293619},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-46449123770&doi=10.1109%2fAGILE.2007.68&partnerID=40&md5=7adcdeb82767264caf8c17b67d2cea3d},
abstract={Across the Agile community there has been a lot of discussion regarding the use of technical stories. While the community seems split into two camps of for and against, the majority of extreme programmers favour to define the system using only the traditional customer focused user stories. In some cases the technical story arguments are academic, but our experience report demonstrates clearly why sticking to user stories has its benefits. Our experience using Scrum and XP has been that allowing technical stories into the process can de-rail the ability to deliver constant, measurable business value per iteration, as well as inhibit the planning process. Once technical stories are allowed, the customer and business can be alienated very quickly, especially when they have no engineering background. Furthermore, when problems occur and the technical stories begin to slip, the customer can be left in a very difficult position, not knowing how to reprioritise or direct the process. It is therefore our intention to highlight some of the pitfalls that can result from using technical stories. © 2007 IEEE.},
keywords={Customer satisfaction;  Process planning;  Sales, (e ,3e) process;  Business values;  experience report;  Planning process (CPPS);  User stories, Process engineering},
}

@ARTICLE{Moser2007105,
author={Moser, R. and Scotto, M. and Sillitti, A. and Succi, G.},
title={Does XP deliver quality and maintainable code?},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2007},
volume={4536 LNCS},
pages={105-114},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-38149022696&partnerID=40&md5=7c91a670124cc0f76d90399b70abb340},
abstract={Extreme Programming aims at delivering working software for less money and still of high quality. It is well known that software maintainability is one of the most important concerns and cost factors of the software industry. The question of this research is whether Extreme Programming intrinsically delivers easily maintainable code or not. We propose a model on how to evaluate the evolution of source code quality and in particular maintainability in an Extreme Programming environment and evaluate it with a small case study. The results obtained from the case study seem to sustain the hypothesis that Extreme Programming enhances quality and in particular maintainability of a software product. Given such promising results, additional experimentation is required to validate and generalize the results of this work. © Springer-Verlag Berlin Heidelberg 2007.},
author_keywords={Maintainability;  Metrics;  Quality},
keywords={Artificial intelligence;  Computer programming;  Computer software maintenance;  Mathematical models, Cost factors;  Extreme Programming;  Software product;  Source code quality, Computer operating systems},
}

@CONFERENCE{Garrido200789,
author={Garrido, A. and Rossi, G. and Distante, D.},
title={Model refactoring in web applications},
journal={Proceedings - 9th IEEE International Symposium on Web Site Evolution, WSE 2007},
year={2007},
pages={89-96},
doi={10.1109/WSE.2007.4380249},
art_number={4380249},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78751538422&doi=10.1109%2fWSE.2007.4380249&partnerID=40&md5=5f6474412d4d11b696eccd1a93e7ed24},
abstract={Refactoring has been growing in importance with recent software engineering approaches, particularly agile methodologies, which promote continuous improvement of an application's code and design. Web applications are especially suitable for refactoring because of their rapid development and continuous evolution. Refactoring is about applying transformations that preserve program behavior. Code refactorings apply transformations to the source code while model refactorings apply to design models, both with the purpose of increasing internal qualities like maintainability and extensibility. In this paper we propose Web model refactorings as transformations that apply to the design models of a Web application. Particularly, we define refactorings on the navigation and presentation models, and present examples. Since changing these models impacts on what the user perceives, the intent of Web model refactorings is to improve external qualities like usability. They may also help to introduce Web patterns in a Web application. © 2007 IEEE.},
keywords={Agile Methodologies;  Continuous improvements;  Design models;  External quality;  Internal quality;  Presentation model;  Program behavior;  Rapid development;  Refactorings;  Source codes;  WEB application;  Web models, Codes (symbols);  Design;  Maintainability;  Software engineering, Websites},
}

@ARTICLE{Tanikella2007311,
author={Tanikella, R. and Matos, G. and Tai, G. and Wehrwein, B.},
title={Relating requirements to a user interface architecture for a rich enterprise web application},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2007},
volume={4473 LNCS},
pages={311-325},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-38049121251&partnerID=40&md5=278661dfd1a1d2808fea4134b42e7655},
abstract={Over the past few years, the demand for richer user interfaces and fast performance for web applications has also had its effect on enterprise web UI development. Solutions such as rich thin client frameworks and rich internet application (RIA) frameworks have emerged, alongside technologies like AJAX and Adobe Flex. At Siemens Corporate Research, our recent experience in developing a scalable enterprise web application with an agile methodology, however, has indicated that implementation decisions are often made without fully understanding the implications that the desired UI concept and look and feel have on the implementation. This paper presents a conceptual UI architecture and, for each aspect of the architecture, examines the types of requirements that should be gleaned from the various UI requirements documents. We make recommendations to help bridge the gap between user interface design specifications and user interface architectural specifications, including impacts on implementation-level architecture. © Springer-Verlag Berlin Heidelberg 2007.},
author_keywords={Agile development;  Presentation layer;  Rich internet application;  UI architecture;  Web application;  Web engineering},
keywords={Internet;  User interfaces;  Web services, Agile development;  Rich internet application (RIA);  Web application;  Web engineering, Software architecture},
}

@CONFERENCE{Moser2007519,
author={Moser, R. and Pedrycz, W. and Succi, G.},
title={Incremental effort prediction models in agile development using radial basis functions},
journal={19th International Conference on Software Engineering and Knowledge Engineering, SEKE 2007},
year={2007},
pages={519-522},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-67650730783&partnerID=40&md5=f55d60f20402bcb9c2b90cfc96fc6381},
abstract={Despite significant investment in research, the lightweight estimation of development effort is still an unsolved problem in software engineering. This study proposes a new, lightweight effort estimation model aimed at iterative development environments, as Agile Processes. The model is based on Radial Basis Functions. It is experimented in two semi-industrial projects conducted using a customized version of Extreme Programming (XP). The results are promising and evidence that the proposed model can be developed incrementally and from scratch for new projects without resorting to historical data. Copyright © (2007) by Knowledge Systems Institute (KSI).},
keywords={Agile development;  Effort estimation model;  Effort prediction model;  EXtreme Programming;  Historical data;  Iterative development;  Radial basis functions;  Unsolved problems, Knowledge engineering;  Radial basis function networks, Software engineering},
}

@CONFERENCE{Williams2007334,
author={Williams, M. and Packlick, J. and Bellubbi, R. and Coburn, S.},
title={How we made onsite customer work - An extreme success story},
journal={Proceedings - AGILE 2007},
year={2007},
pages={334-338},
doi={10.1109/AGILE.2007.33},
art_number={4293618},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-46449083311&doi=10.1109%2fAGILE.2007.33&partnerID=40&md5=288b5f70e8fa1e6c4a1213b83448e1df},
abstract={The Agile Manifesto emphasizes customer collaboration over contract negotiation. No Extreme Programming practice embodies this more than onsite customer. This paper describes our experience in adopting onsite customer in an environment where the practice was long considered impractical. We successfully overcame many obstacles to bring busy airline employees for extended periods of time to our development site thousands of miles from their homes and have them work with our team. We have realized significant gains in productivity, quality, and customer satisfaction as a result. Onsite customer has now become a standard way of doing business. © 2007 IEEE.},
keywords={contract negotiations;  Customer collaboration;  Extreme Programming (XP), Contracts;  Sales;  Standards, Customer satisfaction},
}

@CONFERENCE{Sutherland2007272,
author={Sutherland, J. and Jakobsen, C.R. and Johnson, K.},
title={Scrum and CMMI level 5: The magic potion for code warriors},
journal={Proceedings - AGILE 2007},
year={2007},
pages={272-277},
doi={10.1109/AGILE.2007.52},
art_number={4293608},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-46449126028&doi=10.1109%2fAGILE.2007.52&partnerID=40&md5=f76c7d2daa22493817875eca00f9d508},
abstract={Projects combining agile methods with CMMI 1 are more successful in producing higher quality software that more effectively meets customer needs at a faster pace. Systematic Software Engineering works at CMMI level 5 and uses Lean Software Development as a driver for optimizing software processes. Early pilot projects at Systematic showed productivity on Scrum teams almost twice that of traditional teams. Other projects demonstrated a story based test driven approach to software development reduced defects found during final test by 40% We assert that Scrum and CMMI together bring a more powerful combination of adaptability and predictability than either one alone and suggest how other companies can combine them. © 2007 IEEE.},
keywords={Agile Methods;  Level 5},
}

@CONFERENCE{Jensen200756,
author={Jensen, R.N. and Platz, N. and Tjørnehøj, G.},
title={How "developer stories" improves architecture - Facilitating knowledge sharing and embodiment, and making architectural changes visible},
journal={ICSOFT 2007 - 2nd International Conference on Software and Data Technologies, Proceedings},
year={2007},
volume={SE},
pages={56-64},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-67650254795&partnerID=40&md5=e1fd0cde401062ac9e168f50a8bed531},
abstract={Within the field of Software Engineering emergence of agile methods has been a hot topic since the late 90s. extreme Programming (XP) (Beck, 1999) was one of the first agile methods and is one of the most well-known. However research has pointed to weaknesses in XP regarding supporting development of viable architectures. To strengthen XP in this regard a new practice: Developer Stories (Jensen et al., 2006) was introduced last year mainly based on a theoretical argumentation. This paper reports from extensive experimentation with, and elaboration of the new practice. Results from this experimentation shows that using Developer Stories increases the likelihood of developing a viable architecture through a series of deliberate choices, through creating disciplined and recurring activities that: 1) Facilitate sharing and embodying of knowledge about architectural issues, and 2) heighten visibility of refactorings for both customers and developers.},
author_keywords={Agile development;  Architecture;  Design;  Developer stories;  Extreme programming;  Methodology;  Practice;  Software quality;  Systems development},
keywords={Agile development;  Developer stories;  Extreme programming;  Methodology;  Practice;  Software quality;  Systems development, Agile manufacturing systems;  Architecture;  Computer software selection and evaluation;  Software architecture;  Software engineering, Architectural design},
}

@BOOK{Sfetsos2007154,
author={Sfetsos, P. and Stamelos, I.},
title={Improving quality by exploiting human dynamics in agile methods},
journal={Agile Software Development Quality Assurance},
year={2007},
pages={154-170},
doi={10.4018/978-1-59904-216-9.ch008},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899225656&doi=10.4018%2f978-1-59904-216-9.ch008&partnerID=40&md5=1b9ea43d22bd47aa4797138f0ff8b8db},
abstract={Theory and experience have shown that human factors are critical for the success of software engineering practices. Agile methods are even more sensitive in such factors because they rely heavily on personal efforts with limited guidance from process manuals, allowing freedom in choosing solutions, inter-personal communications, etc. This fact raises important issues for the management of software engineers that are expected to apply agile methods effectively. One such issue at the agile organization executive level is human resource management, which should take into account agile development peculiarities, work competencies needed, agile workforce planning, etc. Another issue at the micro-management level is agile workforce management within the development process (e.g., team planning for a specific task or project) where individual human features will undoubtedly affect delivered quality and ultimately the task/project degree of success. This chapter deals with one problem at each level of management in an agile company applying extreme programming, one of the most diffused agile methods. In particular, the first part of the chapter proposes and discusses a model for personnel management based on the well known People-CMM1 assessment and improvement model, while the second one proposes a model that exploits developer personalities and temperaments to effectively allocate and rotate developers in pairs for pair programming. © 2007, Idea Group Inc.},
}

@CONFERENCE{McMichael2007262,
author={McMichael, B. and Lombardi, M.},
title={ISO 9001 and agile development},
journal={Proceedings - AGILE 2007},
year={2007},
pages={262-265},
doi={10.1109/AGILE.2007.36},
art_number={4293606},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-46449138772&doi=10.1109%2fAGILE.2007.36&partnerID=40&md5=15d5ad64759a7160b7848ae27b06bd0b},
abstract={Conventional thinking would conclude that agile and ISO must not be compatible. After all, ISO is often characterized as being heavy on process / heavy on documentation - the opposite of agile. Just as the assumption that agile is about no documentation is faulty, so are the assumptions that ISO needs to be a burdensome process. ISO 9001:2000 is not only compatible with agile, but can provide just enough structure to help ensure your agile processes are followed. This paper describes how Primavera Systems, a developer of enterprise project management software, established a Quality Management System (QMS) that was aligned with ISO 9001 while still maintaining all of the benefits of its Scrum / XP agile practices. © 2007 IEEE.},
keywords={(e ,3e) process;  Agile development;  Agile practices;  Agile processing;  Enterprise project management (EPM);  ISO 9001;  ISO 9001:2000;  Primavera Systems (CO);  Quality management system (QMS), Management;  Project management;  Quality management;  System program documentation;  Tropical engineering, Agile manufacturing systems},
}

@CONFERENCE{Judy2007316,
author={Judy, K.H. and Krumins-Beens, I.},
title={Ript™: Innovation and collective product ownership},
journal={Proceedings - AGILE 2007},
year={2007},
pages={316-323},
doi={10.1109/AGILE.2007.49},
art_number={4293615},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-46449090098&doi=10.1109%2fAGILE.2007.49&partnerID=40&md5=cd7a126d388cdd21cb9957eae7d7e668},
abstract={In 2006, Oxygen Media CEO Geraldine (Gerry) Laybourne, the woman largely responsible for Nickelodeon's early success, partnered with her XP/Scrum development team to create a new mission and new revenue stream for her company. This experience report covers product conception through initial release of a single product. It describes how Gerry's leadership qualities paired with agile practices to engender deep mutual trust and collective ownership over technical execution and business outcome. This unbounded collaboration provides a template for future projects at Oxygen and other organizations with innovation as part of their agile product development strategy. © 2007 IEEE.},
keywords={Industry;  Oxygen;  Planning;  Project management;  Strategic planning, Agile practices;  Business outcomes;  Collective ownership;  experience report;  Leadership qualities;  Mutual trust;  Oxygen Media (CO);  Product development strategy;  Single product, Product development},
}

@ARTICLE{Tessem200754,
author={Tessem, B. and Maurer, F.},
title={Job satisfaction and motivation in a large agile team},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2007},
volume={4536 LNCS},
pages={54-61},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-38149101056&partnerID=40&md5=86634e4b01da5efb1f6a313323ffb8a1},
abstract={Agile software development processes emphasize team work in small groups as one of the features that contribute to high software quality and knowledge dispersion among developers. Research supports claims that agile methods also lead to higher motivation and job satisfaction among developers. Research in workplace psychology indicates that factors like autonomy, variety, significance, feedback, and ability to complete a whole task are significant factors to ensure satisfaction and motivation among workers. In this case study, we show, through the analysis of semi structured interviews with software developers and business representatives, that large teams continuously adapting the SCRUM methodology are able to ensure these empowering factors, and thus ensure a staff of motivated and satisfied software developers. The study presented is based on data from an agile project involving 70 people (including 30 developers) building a software product for the oil & gas industry. © Springer-Verlag Berlin Heidelberg 2007.},
author_keywords={Agile software development;  Job satisfaction;  Large teams;  Motivation;  Qualitative case study;  SCRUM},
keywords={Feedback;  Job satisfaction;  Motivation, Knowledge dispersion;  Qualitative case study;  Software product;  Software quality, Software engineering},
}

@CONFERENCE{Sumrell2007291,
author={Sumrell, M.},
title={From waterfall to agile - How does a QA team transition?},
journal={Proceedings - AGILE 2007},
year={2007},
pages={291-294},
doi={10.1109/AGILE.2007.29},
art_number={4293611},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-46449094692&doi=10.1109%2fAGILE.2007.29&partnerID=40&md5=3b170c418ff7f39c7c5e881c3b405783},
abstract={We had been developing software with a strict waterfall mentality for several years. Our testing cycle was broken up into distinct phases for functional, system and regression testing. One phase did not start until the previous one was completed. Our testing team had always been a real asset to the organization. The entire team was a highly skilled group of automation testers using traditional, expensive off the shelf automated testing software. As we switched over to agile development using the Scrum framework, we really struggled with how to incorporate our traditional automated testing strategies into the agile world. Is testing in a waterfall project really that different then testing in an agile project? Yss! would uncover an issue that could take significant amount of time to fix and retest. We knew we needed to refine our development process so that we could get new features to market quicker and get customer feedback earlier in the process. We also needed to start testing early in the development process to avoid large re-work efforts before deployment. If we could do this, then we could deliver what our customers really wanted in a more timely fashion and not waste time developing features that they didn't need © 2007 IEEE.},
keywords={(e ,3e) process;  Agile development;  Automated testing;  Customer feedbacks;  Developing software;  development processes;  Regression testing;  Testing cycles;  Transition (Jel Classifications:E52 ,E41 ,E31), Automation;  Customer satisfaction;  Food processing;  Planning;  Quality function deployment;  Strategic planning, Software testing},
}

@ARTICLE{Williams2007134,
author={Williams, L.},
title={Structuring families of industrial case studies},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2007},
volume={4336 LNCS},
pages={134},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-36348943932&partnerID=40&md5=a20b9ec93c2a99d1c4afd09fddf0931d},
abstract={Practitioners are most influenced by results of research conducted in industrial settings. Evidence of the efficacy of a software development practice or process is best obtained through a triangulation of research findings obtained through a variety of empirical studies in various contexts. The use of an evaluation framework can enable a family of related industrial case studies in different contexts to be meta-analyzed and/or combined. Such an evaluation framework could consists of templates for specific quantitative measures to collect with associated instructions on what to include/exclude for consistent measurement collection as well as protocols for surveys and/or interviews. Groups of researchers interested in the same research question(s) can customize and evolve an evaluation framework for the technology under study. We have developed and evolved such a framework for the study of Extreme Programming, the Extreme Programming Evaluation Framework (XP-EF), which is available as a North Carolina State University Technical Report. XP-EF is currently at Version 1.4. The composition of Version 1.0 was initially developed from relevant literature. We refined the framework in several research cycles with industrial partners on four multi-release industrial case studies. We have also revised the process based upon input from anonymous reviews of our publications from researchers in the community, through discussions with members of the International Software Engineering Research Network (ISERN), and through presentation of our work to researchers and practitioners. Through these cycles of use and external feedback, the research and practitioner communities have provided input on the guidelines and artifacts embodied in the framework. We have conducted four case studies guided by the XP-EF. The reported results of these case studies reference the evaluation framework used, enabling precise replication of metrics collection and data analysis. © Springer-Verlag Berlin Heidelberg 2007.},
keywords={Data reduction;  Engineering research;  Feedback control;  Software engineering;  Surveys, Extreme Programming Evaluation Framework (XP-EF);  International Software Engineering Research Network (ISERN), Industrial management},
}

@ARTICLE{Siakas2007597,
author={Siakas, K.V. and Siakas, E.},
title={The agile professional culture: A source of agile quality},
journal={Software Process Improvement and Practice},
year={2007},
volume={12},
number={6},
pages={597-610},
doi={10.1002/spip.344},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-37749018922&doi=10.1002%2fspip.344&partnerID=40&md5=e67c39ae47927bdce67d44d1ed6c20b1},
abstract={Ever since agile software development was introduced in the millennium shift, it has become a controversial software engineering topic with practitioners and researchers arguing about the benefits of it. The opinions have been widely divergent, on one side the supporters of the plan-driven predictable Software Process Improvement (SPI) embracing repeatable processes and continuous improvements, and on the other the agile development putting individuals and interactions over process and tools, working software over comprehensive documentation, customer collaboration over contract negotiation and change response over comprehensive plans. In this article, the agile methodology is examined from the human and cultural points of view. The concept of culture is analysed for deeper understanding of human and cultural dynamics influencing the agile professional culture. Parallels are drawn to success factors identified in recognised management approaches, such as the Effective Technical and Human Implementation of Computer Systems (ETHICS) and Total Quality Management (TQM). The type of organisation, suitable to embrace the agile professional development culture, is identified by examining the success factors observed. The democratic type of organisation in the C.HI.D.DI. (Clan-HIerarchical-Democratic-DIsciplined) typology is proposed to be the most suitable to create and sustain added business value and competitive advantage for agile software development. Copyright © 2007 John Wiley & Sons, Ltd.},
author_keywords={Agile culture;  Agile development;  Effective Technical and Human Implementation of Computer Systems (ETHICS);  Human factor;  Soft issues;  TQM},
keywords={Competitive intelligence;  Customer satisfaction;  Human engineering;  Quality management;  Software engineering, Agile culture;  Agile development;  Software Process Improvement (SPI), Professional aspects},
}

@CONFERENCE{Mishra2007237,
author={Mishra, D. and Mishra, A.},
title={Achieving success in supply chain management software by agility},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2007},
volume={4589 LNCS},
pages={237-246},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-35148875137&partnerID=40&md5=f9914d7ba1c4d775254e8ff3fb497a25},
abstract={Supply chain management is comprehensive software. Due to its scope and unpredictable, complex and unstable requirements, it is not possible to develop it with predictable development process models. Agile methodologies are targeted towards such kind of problems that involves change and uncertainty, and are adaptive rather than predictive. The aim of this paper is to analyze the management and development methodologies used in development of supply chain management software. This paper shows how to overcome risks and handicaps in each development phase of a complex inventive project. It also provides a set of guidelines regarding how the agile methods may be adopted, combined and used in these kinds of projects. © Springer-Verlag Berlin Heidelberg 2007.},
author_keywords={Adaptive development;  Agile methods;  DSDM;  FDD;  SCM;  Scrum;  XP},
keywords={Agile manufacturing systems;  Large scale systems;  Problem solving;  Project management;  Requirements engineering;  Supply chain management, Adaptive development;  Agile methods, Software engineering},
}

@ARTICLE{Padberg2007162,
author={Padberg, F. and Tichy, W.},
title={Lean production methods in modem software development [Schlanke Produktionsweisen in der Modernen Softwareentwicklung]},
journal={Wirtschaftsinformatik},
year={2007},
volume={49},
number={3},
pages={162-170},
doi={10.1007/s11576-007-0046-1},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34948881361&doi=10.1007%2fs11576-007-0046-1&partnerID=40&md5=c7475af4653703266f7b4839cded901a},
abstract={This poper shows that Extreme Programming (XP) is rooted in the principles of Lean Production. XP drastically slims down the development process, but adds extreme customer orientation and extreme ways of quality assurance to the process. The fact that XP and other agile methods in modern software development are based on lean principles explains why agile methods can produce high-quality software in a cost-effective way. the paper also contains a discussion of problems that come up when using XP in practice, and raises important questions about lean methods in software development; for example, whether lean methods scale to large software projects and large software organizations. When trying to answer such questions, software engineering could draw from experience with lean production and lean development in other fields.},
author_keywords={Agile methods;  Extreme programming;  Lean production;  Software process models},
}

@ARTICLE{Reichhart2007231,
author={Reichhart, S. and Gîrba, T. and Ducasse, S.},
title={Rule-based assessment of test quality},
journal={Journal of Object Technology},
year={2007},
volume={6},
number={9},
pages={231-251},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-36148966624&partnerID=40&md5=a72311a03c78844bc26fd965c374bf61},
abstract={With the success of agile methodologies more and more projects develop large test suites to ensure that the system is behaving as expected. Not only do tests ensure correctness, but they also offer a live documentation for the code. However, as the system evolves, the tests need to evolve as well to keep up with the system, and as the test suite grows larger, the effort invested into maintaining tests is a significant activity. In this context, the quality of tests becomes an important issue, as developers need to assess and understand the tests they have to maintain. In this paper we present TestLint, an approach together with an experimental tool for qualifying tests. We define a set of criteria to determine test quality, and we evaluate our approach on a large sample of unit tests found in open-source projects.},
}

@ARTICLE{Santos200728,
author={Santos, P.},
title={SCRUM meets CMMi},
journal={Dr. Dobb's Journal},
year={2007},
volume={32},
number={9},
pages={28-33},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34548368556&partnerID=40&md5=0c7bbb2f0b0d31c2626320fc33548a70},
abstract={The significance of process improvement model, CMMi and SCRUM, agile methodology used for improving software production methods, is discussed. CMMi evaluation is efficient during the development of a configuration-management and version-control tool. It can be used to recognize the quality status of software, which are developed for specific process. It helps the company to enhance rapid personnel growth and increase agile processes. SCRUM maximizes project control and provides fallback solutions. It is also easy to learn and follow that increase the personnel productivity. It includes Defect Control that registers tasks, assignments, pending work, finished tasks, manages queries, and handles release notes. WiKi is also used on Linux server for analysis and designing documentation, planning, and technical articles for the improvement of software development.},
}

@ARTICLE{Ambler200760,
author={Ambler, S.W.},
title={Agile on a fixed budget},
journal={Dr. Dobb's Journal},
year={2007},
volume={32},
number={9},
pages={60-62},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34548351755&partnerID=40&md5=200f27289f1eb88bf7271d4b196fe187},
abstract={The views of Scott W. Ambler on resources, schedule, and scope for the agile software development in a fixed budget, are discussed. He states that the quality suffers due to shortcuts and/or poor decisions made by technical staff to avoid constraints in developing a software. Developers need to work in short, time-boxed iterations delivering working software on a regular basis to complete a software development project. They also need to use working software that provides feedback of stakeholders, enabling them to determine the requirements of end-users. The use of Extreme Programming (XP), Scrum, and Agile Modeling allows stakeholders to change the requirements as the project progresses. Technical writers need to produce external documentation to develop software efficiently.},
}

@CONFERENCE{Cornelissen2007213,
author={Cornelissen, B. and Van Deursen, A. and Moonen, L. and Zaidman, A.},
title={Visualizing testsuites to aid in software understanding},
journal={Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR},
year={2007},
pages={213-222},
doi={10.1109/CSMR.2007.54},
art_number={4145039},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34547657373&doi=10.1109%2fCSMR.2007.54&partnerID=40&md5=01948d45404274d4f9c8bb8864d5159d},
abstract={Agile software development methods such as eXtreme Programming have brought renewed attention to testing during the software development process, both as a quality assurance method and as a form of live documentation. It is for this reason that a software system's testsuite is an ideal starting point for gaining knowledge about its inner workings. In this paper, we propose to use sequence diagrams to visualize information that is dynamically obtained from testsuites. We employ abstraction techniques such as constructor hiding and stack depth limitation to make the diagrams more scalable. We use JPACMAN as a case study to validate our results by consulting with domain experts, and use their feedback to fine-tune our techniques. © 2007 IEEE.},
keywords={Abstraction techniques;  Sequence diagrams;  Software systems;  Stack depth limitation, Computer programming;  Software testing;  System program documentation, Software engineering},
}

@CONFERENCE{Jiménez-Díaz2007143,
author={Jiménez-Díaz, G. and González-Calero, P. and Gómez-Albarrán, M.},
title={Using role-play virtual environments to learn software design},
journal={European Conference on Games Based Learning, ECGBL 2007},
year={2007},
pages={143-151},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897567314&partnerID=40&md5=9fbc41ae0fb07867d012908ff8be2868},
abstract={Object-oriented software design is a kind of black-art that requires a combination of common sense, experience, good taste and the capability to look at a problem from different points of view. According to our experience, these abilities cannot be easily transferred to the students in a lecture. Taking ideas from the way software is designed in industry, according to agile methodologies, we have tried a more active teaching approach using role-play. Students are faced with a design problem and provided with an initial sketchy design, i.e. a number of classes, and several use cases to be solved using those classes. Each student adopts the role of an object and each use case is executed through message passing between the objects represented by the students. This way, the students have the chance to, at their own pace, evaluate the consequences of a given design and test their ideas with the other actors in play. The good results obtained during the empirical evaluation of this active learning approach have motivated us to transfer our teaching methodology to virtual environments. Using our previous experience developing game-based learning environments and taking ingredients from the interface and gameplay of first-person shooters and sport games, we have designed a role-play virtual environment (RPVE) that intends to maintain, and even reinforce, the benefits of role-play in the classroom. We developed ViRPlay3D, a RPVE to understand object-oriented software behavior. It supported a single player, included a simple metaphor and did not allow the modification of CRC cards. Nowadays, we have completed the specifications of ViRPlay3D2, an extension of ViRPlay3D for, both, understanding and creating object-oriented designs. ViRPlay3D2 is a multiplayer environment where students mimic the classroom role-play sessions. The students are immersed in the environment using a first-person view that simulates the point of view of the objects that participate in the role-play. The students can modify the proposed design and the simulation is recorded for a further evaluation.},
author_keywords={Active learning;  CRC cards;  Object-oriented design;  Role-play;  Software design;  Virtual environments},
keywords={Computer aided instruction;  Object oriented programming;  Software design;  Virtual reality, Active Learning;  CRC cards;  Game-based learning environments;  Object oriented software;  Object-oriented design;  Object-oriented software designs;  Role play;  Teaching methodologies, Students},
}

@CONFERENCE{Mingshu2006423,
author={Mingshu, L. and Meng, H. and Fengdi, S. and Juan, L.},
title={A risk-driven method for eXtreme programming release planning},
journal={Proceedings - International Conference on Software Engineering},
year={2006},
volume={2006},
pages={423-430},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34247111505&partnerID=40&md5=1ab0e09e44da59b82a987568db22b282},
abstract={XP (eXtreme Programming) has become popular for IID (Iteration and Increment Development). It is suitable for small teams, lightweight projects and vague/volatile requirements. However, some challenges are left to developers when they desire to practise XP. A critical one of them is constructing the release plan and negotiating it with customers. In this paper, we propose a risk-driven method for XP release planning. It has been applied in a case study and the results show the method is feasible and effective. XP practicers can follow it to decide a suitable release plan and control the development process. Copyright 2006 ACM.},
author_keywords={Decision;  Negotiation;  Release planning;  Risk;  XP},
keywords={Computer aided software engineering;  Project management;  Requirements engineering;  Risk assessment, Iteration and Increment Development (IID);  Lightweight projects;  XP release planning, Computer programming},
}

@CONFERENCE{Ge2006305,
author={Ge, X. and Paige, R.F. and Polack, F.A.C. and Chivers, H. and Brooke, P.J.},
title={Agile development of secure web applications},
journal={ICWE'06: The Sixth International Conference on Web Engineering},
year={2006},
pages={305-312},
doi={10.1145/1145581.1145641},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34250689142&doi=10.1145%2f1145581.1145641&partnerID=40&md5=620e6776c3b5e3ac9260a29185402a5e},
abstract={A secure system is one that is protected against specific undesired outcomes. Delivering a secure system, and particularly a secure web application, is not easy. Integrating general-purpose information systems development methods with security development activities could be a useful means to surmount these difficulties [6]. Agile processes, such as Extreme Programming, are of increasing interest in software development. Most significantly for web applications, agile processes encourage and embrace requirements change, which is a desirable characteristic for web application development. In this paper, we present an agile process to deliver secure web applications. The contribution of the research is not the development of a new method or process that addresses security concerns. Rather, we investigate general-purpose information system development methods (e.g., Feature-Driven Development (FDD)) and mature security methods, namely risk analysis, and integrate them to address the development of secure web applications. The key features of our approach are (1) a process capable of dealing with the key challenges of web applications development, namely decreasing life-cycle times and frequently changing requirements; and (2) an iterative approach to risk analysis that integrates security design throughout the development process.},
author_keywords={Feature driven development;  Security risk assessment;  Web applications},
keywords={Information systems;  Requirements engineering;  Risk assessment;  Security of data;  Software design, Feature driven development;  Mature security methods;  Security risk assessment;  Web applications, Web services},
}

@CONFERENCE{Lee20061767,
author={Lee, J.C.},
title={Embracing agile development of usable software systems},
journal={Conference on Human Factors in Computing Systems - Proceedings},
year={2006},
pages={1767-1770},
doi={10.1145/1125451.1125784},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869118953&doi=10.1145%2f1125451.1125784&partnerID=40&md5=d53d0e8bda43f6345df9f55a051b4803},
abstract={The interdisciplinary nature of system design can lead to communication problems between developers in different fields. This is becoming evident in the emerging field of agile software development which has largely ignored or been unable to address usability. This work presents a development process and toolset that draws on extreme programming - an agile software development process, and scenario-based design - a usability engineering process. This approach will allow developers in both fields to better communicate and work together to efficiently design usable systems.},
author_keywords={Agile development;  Central design record;  Extreme programming;  Scenario-based design;  Usability},
keywords={Agile development;  Central design record;  EXtreme Programming;  Scenario-based design;  Usability, Communication;  Design;  Human engineering;  Usability engineering, Software engineering},
}

@CONFERENCE{Maurer20061057,
author={Maurer, F. and Melnik, G.},
title={Agile methods: Moving towards the mainstream of the software industry},
journal={Proceedings - International Conference on Software Engineering},
year={2006},
volume={2006},
pages={1057-1058},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34247127485&partnerID=40&md5=7a91db6bca3d870dc8c2e954a75ea980},
abstract={A fleet of emerging agile methods of software development (with extreme Programming and Scrum being the most broadly used) is both gaining popularity and generating lots of controversy. This high-level tutorial gives an overview of agile methods and provides background to understand how agile teams are trying to address modem software development challenges. Analysis of initial empirical evidence is used to discuss strengths and limitations of agile methods in various contexts. The participants are introduced to the innovation diffusion models and environments, and discuss what is needed for agile methods to cross the chasm and move into the mainstream of software development.},
author_keywords={Agile methods;  Agile project management;  Extreme programming;  Innovation diffusion;  Knowledge sharing;  Lean;  Quality assurance;  Scrum},
keywords={Agile manufacturing systems;  Information dissemination;  Project management;  Quality assurance, Agile methods;  Agile project management;  Extreme programming;  Innovation diffusion;  Knowledge sharing, Software engineering},
}

@CONFERENCE{Yap2006175,
author={Yap, M.},
title={Value based extreme programming},
journal={Proceedings - AGILE Conference, 2006},
year={2006},
volume={2006},
pages={175-182},
doi={10.1109/AGILE.2006.61},
art_number={1667578},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34247599018&doi=10.1109%2fAGILE.2006.61&partnerID=40&md5=a64c12980a29bf632d6acfe9d20f8a20},
abstract={Agile methods, such as Scrum and Extreme Programming, are not known for carefully tracking to time and cost estimates. On most projects, schedule slips are common and cost increases are predictable. At the end of every iteration, some of our stories get dropped, usually due to reasons such as "the story took longer than what we expected", or "we didn 't find out scope X about the story until we were in the middle of the iteration ". Every slip and increase reduces total business value delivered and project overruns force other high-value projects to be delayed or canceled. Together these costs cause a large negative value impact that could be avoided. Agile needs a better way to measure total value delivered in relation to cost. Agile methods must encourage accountability for on-time delivery and scope, based on value and cost. What is missing in most Agile implementations is a value-based feedback mechanism involving shared responsibility between the customer and the team. This experience report describes how one company addressed these challenges and the lessons learned: it explains how we achieved on-time delivery, assisted customers in selecting high value features, provided shared responsibility, and facilitated individual team member empowerment. All the practices used are presented in pattern format. © 2006 IEEE.},
keywords={Computer programming;  Industrial economics;  Iterative methods;  Personnel;  Value engineering, Agile implementations;  Value-based feedback mechanism, Agile manufacturing systems},
}

@CONFERENCE{Lee200698,
author={Lee, C. and Baba, M.S.},
title={Bayesian and fuzzy logic student model in the C++ STL intelligent tutoring system},
journal={Lecture Notes in Engineering and Computer Science},
year={2006},
pages={98-103},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888249955&partnerID=40&md5=b0a767ad9f3b035a736ece21a676d0af},
abstract={The C++ Standard Template Library (STL) Intelligent Tutoring System seeks to guide students in applying the STL for problem-solving. It is discovered that the key problem in using the C++ STL lies in the lack of capability in prerequisite concepts. Therefore, the ability to model a cause-effect relationship in Bayesian reasoning using a corresponding set of conditional probability is highly appropriate for the student modeling. To enhance the student model, a stereotype is assigned according to the student's understanding for further assessments. Fuzzy logic technique is capable of providing human-like diagnosis of the student's knowledge. The development applies practices from the extreme Programming methodology and J2EE technologies. The evaluation results revealed that the Bayesian Theorem has the capability of modeling the student's prerequisite and directing the student during the tutorial session. The Fuzzy Stereotyping of Students Expert System works well in categorizing the students according to four stereotypes - novice, beginner, intermediate and advanced.},
author_keywords={Bayesian Theorem;  C++ Standard Template Library;  Fuzzy Logic;  Intelligent Tutoring Systems},
keywords={Bayesian Theorem;  Cause-effect relationships;  Conditional probabilities;  Evaluation results;  EXtreme Programming;  Fuzzy logic techniques;  Intelligent tutoring system;  Standard template library, Computer aided instruction;  Computer science;  Education computing;  Expert systems;  Fuzzy logic, Students},
}

@CONFERENCE{Dubinsky200611,
author={Dubinsky, Y. and Hazzan, O. and Talby, D. and Keren, A.},
title={System analysis and design in a large-scale software project: The case of transition to agile development},
journal={ICEIS 2006 - 8th International Conference on Enterprise Information Systems, Proceedings},
year={2006},
volume={ISAS},
pages={11-18},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77953879921&partnerID=40&md5=52e098ee5fdddcd00c89cf5f0a317b73},
abstract={Agile software development methods mainly aim at increasing software quality by fostering customer collaboration and performing exhaustive testing. The introduction of Extreme Programming (XP) - the most common agile software development method - into an organization is accompanied with conceptual and organizational changes. These changes range from daily-life changes (e.g., sitting together and maintaining an informative project environment) and continue with changes on the management level (e.g., meeting and listening to the customer during the whole process and the concept of the whole team which means that all role holders are part of the team). This paper examines the process of transition to an agile development process in a large-scale software project in the Israeli Air Force as it is perceived from the system analysis and design perspective. Specifically, the project specifications of the agile team are compared with those of a team who continues working according to the previous heavyweight method during the first half year of transition. Size and complexity measures are used as the basis of the comparison. In addition to the inspection of the specifications, the change in the role of the system analysts, as the system analysts conceive of it, is examined.},
author_keywords={Agile development;  Project specifications;  System analysis and design;  The system analyst role},
keywords={Agile development;  Agile software development;  Agile teams;  Complexity measures;  Customer collaboration;  Exhaustive testing;  EXtreme Programming;  Israeli air forces;  Large-scale software projects;  Management level;  Organizational change;  Project environment;  Project specification;  Software Quality;  System analysis and design;  Whole process, Computer software selection and evaluation;  Design;  Information systems;  Software design;  Specifications;  Systems analysis, Agile manufacturing systems},
}

@CONFERENCE{Cichon2006242,
author={Cichon, P. and Huzar, Z. and Mazur, Z. and Mrozowski, A.},
title={Managing adaptive information projects in the context of a software developer organizational structure},
journal={Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
year={2006},
pages={242-255},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883012272&partnerID=40&md5=746f9dae2d1bc3305b20db5b4c12f8ce},
abstract={The article describes an unique production process and an organizational structure for adaptive software development project execution with the use of SPEM profile of UML language. The organization of a company presented in this paper is based on neutral matrix model including elements essential for remote execution of adaptive projects. The presented solution enables to react more quickly to changes during execution, minimize the risk of incorrect functional requirement specification and improve the final product quality through strong verification of every phase of the productive process.},
keywords={Adaptive information;  Adaptive software development;  Functional requirement;  Organizational structures;  Production process;  Productive process;  Remote execution;  Software developer, Information systems},
}

@BOOK{Siponen2006143,
author={Siponen, M. and Baskerville, R. and Kuivalainen, T.},
title={Extending security in agile software development methods},
journal={Integrating Security and Software Engineering: Advances and Future Visions},
year={2006},
pages={143-159},
doi={10.4018/978-1-59904-147-6.ch007},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899373728&doi=10.4018%2f978-1-59904-147-6.ch007&partnerID=40&md5=591421a2c3ceaa222a9a1cade8207f8e},
abstract={Software developers can use agile software development methods to build secure information systems. Current agile methods have few (if any) explicit security features. While several discrete security methods (such as checklists and management standards) can supplement agile methods, few of these integrate seamlessly into other software development methods. Because of the severe constraints imposed by agile methods, these discrete security techniques integrate very poorly into agile approaches. This chapter demonstrates how the security features can be integrated into an agile method called feature driven development. © 2007, Idea Group Inc.},
}

@CONFERENCE{Li2006445,
author={Li, H. and Kou, H. and Attanandana, T. and Yost, R.S.},
title={An international crop nutrient management decision support system for personal digital assistant devices: NuMaSS-PDA},
journal={Computers in Agriculture and Natural Resources - Proceedings of the 4th World Congress},
year={2006},
pages={445-450},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-58249097089&partnerID=40&md5=b90a6ed11c270caff01ba474fee1e75c},
abstract={One of the major challenges to food security in the developing world is how to provide an adequate but not excessive application of nutrients to crops to ensure food production while maintaining or improving environmental health. This has long been a problem in agriculture and is well known to be a knowledge-intensive process. The problem solution draws on multi-disciplinary information in several disciplines of agriculture and thus provides a challenge for information technology. A handheld decision aid program, Nutrient Management Support System for a Personal Digital Assistants (NuMaSS-PDA), has been developed to support nutrient management for PDA devices for extension officers, farmer leaders, and farmers in the tropics. The program inputs begin with diagnostic field and plant data, the various observations and measured data are combined in a Bayesian combination framework for a summary evaluation of the probability of deficiencies in nitrogen, phosphorus, and potassium. This diagnostic module is one of four that comprise the decision-aid: 1) Diagnosis, 2) Prediction, 3) Economic analysis and 4) A Recommendation Summary. The Economic analysis module will in included in future releases. Efficient use, user-friendliness, cost-effectiveness, local adaptability and environmental concern were specifications for software development. The development framework uses SuperWaba, a Java-like programming tool with GNU General Public License (GPL). This development tool facilitated the implementation for multiple platforms, including Palm OS and various Windows mobile platforms. A flexible routine that permits language versions of English, French, Portuguese, Tetun, and Tagalog languages has been developed for prototype testing. The extreme programming style was followed to facilitate inclusion of multiple disciplines and viewpoints in the software. Pilot testing of the algorithms in Thailand indicates that NuMaSS-PDA improves predictions of nutrient requirements.},
author_keywords={Decision-aids;  Extreme programming;  Multi-language support;  PDA;  Site-specific nutrient management;  Superwaba},
keywords={Administrative data processing;  Agriculture;  Artificial intelligence;  Computer programming;  Computer programming languages;  Computer software;  Crops;  Decision making;  Decision support systems;  Decision theory;  Digital devices;  Economic analysis;  Hand held computers;  Java programming language;  Linguistics;  Management information systems;  Natural resources management;  Nutrients;  Phosphorus;  Potassium;  Program diagnostics;  Query languages;  Windows operating system, Decision-aids;  Extreme programming;  Multi-language support;  PDA;  Site-specific nutrient management;  Superwaba, Personal digital assistants},
}

@ARTICLE{Pedrycz2006700,
author={Pedrycz, W.},
title={Quantitative logic-based framework for agile methodologies},
journal={Journal of Systems Architecture},
year={2006},
volume={52},
number={11},
pages={700-707},
doi={10.1016/j.sysarc.2006.06.014},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33749593962&doi=10.1016%2fj.sysarc.2006.06.014&partnerID=40&md5=55b27a89707697627d59e53becf9d536},
abstract={Agile methodologies and Extreme programming are the new and highly promising endeavors in Software Engineering. By addressing the important issue of dealing with continuously changing requirements we are faced with panoply of new problems and a genuine need to revisit some principles and classic models of software developments. When it comes to the management of software projects and a way in which we are looking at the software processes and underlying practices, it becomes apparent that in the management practices the issue of uncertainty needs to be quantified and fully addressed. Similarly, it becomes of interest to develop lightweight models of software quality and software processes that are easy to construct and modify as well are transparent to the developer and manager. Given these arguments, in this study we propose logic models based upon the mechanisms of multivalued and fuzzy logic. The realization of such models gives rise to so-called logic networks that are easy to construct, calibrate and interpret. © 2006 Elsevier B.V. All rights reserved.},
author_keywords={Agile methodology;  Extreme programming;  Fuzzy logic;  Learning and calibration of logic models;  Logic framework of modeling;  Logic networks;  Uncertainty},
keywords={Agile methodology;  Extreme programming;  Learning and calibration of logic models;  Logic framework of modeling;  Logic networks;  Uncertainty, Calibration;  Fuzzy sets;  Logic programming;  Problem solving;  Software engineering;  Uncertain systems, Formal logic},
}

@ARTICLE{Britton20068,
author={Britton, C.},
title={Take it to the bridge},
journal={ITNOW},
year={2006},
volume={48},
number={6},
pages={8-9},
doi={10.1093/itnow/bwl069},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33750974783&doi=10.1093%2fitnow%2fbwl069&partnerID=40&md5=ee32b7390f5865c4cd7e5ebc1658fffe},
abstract={The views of Chris Britton on the ways of making IT application development a proper engineering discipline are discussed. The design process is hierarchical and there is a hierarchy of designs from high-level to detailed. The actual process of design is to have a hypothesis and test it. An extreme programming approach to building a bridge will be to start at one end. The explicit requirements are to have facilities to make an order to have delivered and to be billed for the delivery. A major part of making IT applications an engineering discipline will be identifying implicit requirements and working out ways of testing them. The application and technical architectures must take into account non-functional requirements and the context model helps provide a business risk assessment of not meeting the non-functional requirements.},
keywords={Computer architecture;  Industrial management;  Risk assessment;  Software engineering, Business risk assessment;  Extreme programming;  Technical architectures, Information technology},
}

@ARTICLE{Turnu2006610,
author={Turnu, I. and Melis, M. and Cau, A. and Setzu, A. and Concas, G. and Mannaro, K.},
title={Modeling and simulation of open source development using an agile practice},
journal={Journal of Systems Architecture},
year={2006},
volume={52},
number={11},
pages={610-618},
doi={10.1016/j.sysarc.2006.06.005},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33749629486&doi=10.1016%2fj.sysarc.2006.06.005&partnerID=40&md5=3e4d0bb0a9cb29267f6549954f01f85a},
abstract={The goal of this work is to study the effects of the adoption of agile practices on open source development. In particular, we started to evaluate the effects of TDD (Test Driven Development) since it is easer to apply in a distributed environment than most other agile practices. In order to reach this goal we used the simulation modeling approach. We developed a simulation model of open source software development process. The model was tuned using data from a real FLOSS project: Apache HTTP Server. To introduce the TDD practice in our FLOSS simulation model, we made some assumptions based on empirical results. The two FLOSS development models (nonTDD and TDD) were compared. The one incorporating the agile practice yields better results in terms of code quality. © 2006 Elsevier B.V. All rights reserved.},
author_keywords={Extreme programming;  Open source;  Software process simulation;  Test driven development},
keywords={Agile practices;  Development models;  FLOSS project;  Test driven developments, Codes (symbols);  Computer simulation;  Distributed computer systems;  Mathematical models;  Project management;  Software engineering, Open systems},
}

@ARTICLE{Melis2006345,
author={Melis, M. and Turnu, I. and Cau, A. and Concas, G.},
title={Evaluating the impact of test-first programming and pair programming through software process simulation},
journal={Software Process Improvement and Practice},
year={2006},
volume={11},
number={4},
pages={345-360},
doi={10.1002/spip.286},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33747129327&doi=10.1002%2fspip.286&partnerID=40&md5=8691096e4102cf6b5a55df623a38c799},
abstract={In this article, we present a simulation model that we developed for exploring the influence of two key Extreme Programming (XP) practices - Test-first Programming and Pair Programming - on the evolution of an XP software project. We present the results obtained simulating a typical XP project changing the usage levels of the two practices. We focused on output variables related to effort, size, quality and released functionalities. Copyright © 2006 John Wiley & Sons, Ltd.},
author_keywords={Extreme programming;  Pair programming;  Process model;  Software process simulation;  Test driven development;  Test-first},
keywords={Computer programming;  Computer simulation;  Mathematical models;  Project management, Extreme programming;  Pair programming;  Process model;  Software process simulation;  Test driven development;  Test-first, Software engineering},
}

@ARTICLE{Sfetsos2006269,
author={Sfetsos, P. and Angelis, L. and Stamelos, I.},
title={Investigating the extreme programming system - An empirical study},
journal={Empirical Software Engineering},
year={2006},
volume={11},
number={2},
pages={269-301},
doi={10.1007/s10664-006-6404-6},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33644883897&doi=10.1007%2fs10664-006-6404-6&partnerID=40&md5=ca95b39416a45ed4f0bf9eb80a5de13f},
abstract={In this paper we discuss our empirical study about the advantages and difficulties 15 Greek software companies experienced applying Extreme Programming (XP) as a holistic system in software development. Based on a generic XP system including feedback influences and using a cause-effect model including social-technical affecting factors, as our research tool, the study statistically evaluates the application of XP practices in the software companies being studied. Data were collected from 30 managers and developers, using the sample survey technique with questionnaires and interviews, in a time period of six months. Practices were analysed individually, using Descriptive Statistics (DS), and as a whole by building up different models using stepwise Discriminant Analysis (DA). The results have shown that companies, facing various problems with common code ownership, on-site customer, 40-hour week and metaphor, prefer to develop their own tailored XP method and way of working-practices that met their requirements. Pair programming and test-driven development were found to be the most significant success factors. Interactions and hidden dependencies for the majority of the practices as well as communication and synergy between skilled personnel were found to be other significant success factors. The contribution of this preliminary research work is to provide some evidence that may assist companies in evaluating whether the XP system as a holistic framework would suit their current situation. © Springer Science + Business Media, Inc. 2006.},
author_keywords={Agile methods;  Cause-effect model;  Developer perception;  Empirical study;  Extreme programming system;  Feedback model;  Manager perception;  Pair programming;  Planning game;  Refactoring;  Simple design;  Stepwise discriminant analysis;  Test-driven development},
keywords={Agile methods;  Cause-effect model;  Extreme programming system;  Feedback model, Computer software;  Mathematical models;  Software engineering, Computer programming},
}

@ARTICLE{Benediktsson200687,
author={Benediktsson, O. and Dalcher, D. and Thorbergsson, H.},
title={Comparison of software development life cycles: A multiproject experiment},
journal={IEE Proceedings: Software},
year={2006},
volume={153},
number={3},
pages={87-101},
doi={10.1049/ip-sen:20050061},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33745324025&doi=10.1049%2fip-sen%3a20050061&partnerID=40&md5=6244f2cbfb9eda69dd50b2ed21139968},
abstract={A variety of life cycle models for software development are generally available. Many of the variations were composed to overcome problems in the classic waterfall model. However, it is generally difficult to compare and contrast the methods and very little literature is available to guide developers and managers in making choices. Moreover, in order to make informed decisions, developers require access to real data that compares the different models and the results associated with the adoption of each model. An experiment in which 15 software teams developed comparable software products, using four different development approaches (V-model, incremental model, evolutionary model, and extreme programming), is described. Extensive measurements were taken to assess the time, quality, size, and development efficiency of each product. The experimental data collected and the conclusions related to the choice of method, its impact on the project and the quality of the results, are presented.},
keywords={Computer software;  Data acquisition;  Decision making;  Life cycle;  Managers;  Mathematical models, Guide developers;  Software products;  Software teams;  Waterfall model, Software engineering},
}

@CONFERENCE{Bostrm200611,
author={Bostrm, G. and W yrynen, J. and Bodn, M. and Beznosov, K. and Kruchten, P.},
title={Extending xp practices to support security requirements engineering},
journal={Proceedings - International Conference on Software Engineering},
year={2006},
volume={2006-May},
pages={11-17},
doi={10.1145/1137627.1137631},
art_number={1137631},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79960596773&doi=10.1145%2f1137627.1137631&partnerID=40&md5=a03cb3e7466ba80c7a1a54d9f38d89f3},
abstract={This paper proposes a way of extending eXtreme Programming (XP) practices, in particular the original planning game and the coding guidelines, to aid the developers and the customer to engineer security requirements while maintaining the iterative and rapid feedback-driven nature of XP. More specifically, these steps result in two new security-specific flavours of XP User stories: Abuser stories (threat scenarios) and Security-related User stories (security functionalities). The introduced extensions also aid in formulating security-specific coding and design standards to be used in the project, as well as in understanding the need for supporting specific Security-related User stories by the system. The proposed extensions have been tested in a student project.},
author_keywords={Agile Software Development;  Development methodology;  EXtreme Programming;  Requirements;  Security Engineering},
keywords={Iterative methods;  Software design, Agile software development;  Development methodology;  EXtreme Programming;  Requirements;  Security engineering, Software engineering},
}

@ARTICLE{Chella2006133,
author={Chella, A. and Cossentino, M. and Sabatucci, L. and Seidita, V.},
title={Agile PASSI: An agile process for designing agents},
journal={Computer Systems Science and Engineering},
year={2006},
volume={21},
number={2},
pages={133-144},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33646359922&partnerID=40&md5=108226ba27cb1ef12d24d8d48496eb92},
abstract={We have been developing robotic multi-agent systems for several years according to a well defined methodology (PASSI) obtaining good results, but day by day needs of a more versatile approach for designing software in a research context suggested us to find out a new methodology. A solution to our problems is represented by the Agile version of the PASSI methodology we present in this paper. We built this agile methodology by exploiting all the experiences done with conventional PASSI; it is supported by specific tools allowing patterns reuse and automatic production of some design documentation. © 2006 CRL Publishing Ltd.},
author_keywords={Agents;  Agile methodology;  Agile PASSI;  Multi-agent systems},
keywords={Automation;  Computer aided design;  Computer software;  Problem solving;  Process control;  Program documentation;  Robotics, Agile methodology;  Agile PASSI;  Automatic production;  Design documentation, Multi agent systems},
}

@ARTICLE{Nord200647,
author={Nord, R.L. and Tomayko, J.E.},
title={Software architecture-centric methods and agile development},
journal={IEEE Software},
year={2006},
volume={23},
number={2},
pages={47-53},
doi={10.1109/MS.2006.54},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33645010938&doi=10.1109%2fMS.2006.54&partnerID=40&md5=7ca2b5e4ec28733e04714c4754905c06},
abstract={Including architecture-centric design and analysis methods in the Extreme Programming framework can help software developers address quality attributes in an explicit, methodical, engineering-principled way. Properly managed, architecture-centric methods can be a cost-effective addition to the software development process and will increase system and product quality. This article is part of a focus section on software architecture. © 2006 IEEE.},
keywords={Computer operating systems;  Program processors;  Specifications;  Systems analysis, Architecture-centric design;  Extreme programming framework;  Quality attributes;  Software architecture, Software engineering},
}

@ARTICLE{Pastor200664,
author={Pastor, O.},
title={From extreme programming to extreme non-programming: Is it the right time for model transformation technologies?},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2006},
volume={4080 LNCS},
pages={64-72},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33749385167&partnerID=40&md5=512c3a0bc5231108c6617ffd15fbb371},
abstract={Object-Oriented Methods, Formal Specification Languages, Component-Based Software Production... This is just a very short list of technologies proposed to solve a very old and, at the same time, very well-known problem: how to produce software of quality. Programming has been the key task during the last 40 years, and the results have not been successful yet. This work will explore the need of facing a sound software production process from a different perspective: the non-programming perspective, where by non-programming we mainly mean modeling. Instead of talking about Extreme Programming, we will introduce a Extreme Non-Programming (Extreme Modeling-Oriented) approach. We will base our ideas on the intensive work done during the last years, oriented to the objective of generating code from a higher-level system specification, normally represented as a Conceptual Schema. Nowadays, though, the hip around MDA has given a new push to these strategies. New methods propose sound model transformations which cover all the different steps of a sound software production process from an Information Systems Engineering point of view. This must include Organizational Modeling, Requirements Engineering, Conceptual Modeling and Model-Based Code Generation techniques. In this context, it seems that the time of Model Transformation Technologies is finally here... © Springer-Verlag Berlin Heidelberg 2006.},
keywords={Codes (symbols);  Computer simulation;  Computer software;  Formal languages;  Information technology;  Systems engineering, Component Based Software Production;  Conceptual Schema;  Information Systems Engineering;  Model transformations, Computer systems programming},
}

@CONFERENCE{Bekiaris2006,
author={Bekiaris, E. and Panou, M. and Papakostopoulos, V.},
title={Assessment results of an innovative driver assessment system and tools for elderly drivers},
journal={13th World Congress on Intelligent Transport Systems and Services},
year={2006},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84950165326&partnerID=40&md5=72033467fcfa91b99b7fa4f4c2b52974},
abstract={Within AGILE EC co-funded project, an innovative, flexible and modular driving assessment procedure was developed, in order to assess the driving ability of elderly drivers. The AGILE procedure is proposed to consist of a screening, performed at an early stage, followed by one or more in-depth assessments (using a neuropsychological test battery, standardised on-road assessment protocols and/or simulator scenarios) for identified possibly at-risk drivers. The AGILE methodology, together with the developed tools was assessed in three countries (Belgium, Greece and Sweden) with 234 elderly drivers in total. Here, a brief description of the tools is provided, followed by the main results of the Greek pilot, with 98 elderly drivers.},
author_keywords={Driver assessment;  Driving ability;  Elderly drivers;  Fitness to drive},
keywords={Agile manufacturing systems;  Intelligent systems;  Intelligent vehicle highway systems;  Risk perception;  Traffic control;  Transportation, Agile Methodologies;  Assessment protocols;  Driver assessment;  Driving abilities;  Driving assessment;  Elderly drivers;  Fitness to drives;  Neuropsychological tests, Risk assessment},
}

@ARTICLE{Jensen2006133,
author={Jensen, R.N. and Møller, T. and Sönder, P. and Tjørnehøj, G.},
title={Architecture and design in extreme programming; introducing "developer stories"},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2006},
volume={4044 LNCS},
pages={133-142},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33746192507&partnerID=40&md5=5e41a04e5ebf764687866eef6f58ef83},
abstract={This article introduces a new practice to eXtreme Programming (XP): Developer stories. The goal of these stories and their creation process is to incorporate architectural planning to XP thus ensuring a viable architecture. By conducting a small development project using XP, we find that establishing a viable architecture might be problematic. Arguing that architectural quality criteria in XP are traceable to traditional criteria, and by pointing to related work regarding incremental continous design, requirements management and large-scale refactorings, we find support for this claim. We proceed by describing the new practice ensuring that it embraces the values, and supports existing practices of XP. © Springer-Verlag Berlin Heidelberg 2006.},
keywords={Computer operating systems;  Computer programming;  Large scale systems;  Software engineering;  Systems analysis, Architectural quality;  Development projects;  Requirements management;  XP, Computer architecture},
}

@ARTICLE{Baloian2006179,
author={Baloian, N. and Claude, F. and Konow, R. and Matsumoto, M.},
title={A decentralized and flexible tool supporting extreme programming software development},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2006},
volume={4154 LNCS},
pages={179-186},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33750071702&partnerID=40&md5=3a473e54da9510c46951c1f6a2372e06},
abstract={This paper presents a system called CodeBreaker for supporting small and medium size software development based on an extreme programming principle. The system follows a decentralized model of development, which means, it does not requires a central repository. A set of rules for code ownership maintains the synchronization of the work among all members of the developing team which can work on- or offline. It allows fine-grained locking of parts of the code. © Springer-Verlag Berlin Heidelberg 2006.},
author_keywords={Collaborative software development;  Extreme programming;  Peer-to-peer},
keywords={Computer aided software engineering;  Computer programming;  Distributed computer systems;  Mathematical models;  Set theory, CodeBreaker;  Decentralized model;  Extreme programming;  Peer-to-peer, Software engineering},
}

@ARTICLE{Lui2006115,
author={Lui, K.M. and Chan, K.C.C.},
title={Software process fusion: Uniting pair programming and solo programming processes},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2006},
volume={3966 LNCS},
pages={115-123},
doi={10.1007/11754305_13},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33745877623&doi=10.1007%2f11754305_13&partnerID=40&md5=3f7dcb69ef0bc21eeb12539f68dd498e},
abstract={The rule of pair programming process in software development is controversial. This controversy arises in part from their being presented as alternatives, yet it would be more helpful to see them as complementary software management tools. This paper describes the application of such a complementary model, software process fusion (SPF), in a real-world software management situation in China. Pair and solo programming are adopted at different stages of the process and according to the background of programmers, as appropriate. Unlike the usual practice of eXtreme Programming, in which all production code must written in pairs, all-the-time pair programming, the proposed model encourages programmers to design code patterns of their own in pairs and then to use these patterns to build sub-modules solo, The report finds that the longer team members work alone, the more code patterns they develop for reuse later in pairs. © Springer-Verlag Berlin Heidelberg 2006.},
keywords={Computational methods;  Computer science;  Information management;  Mathematical models;  Personnel;  Production;  Real time systems;  Social aspects;  Software engineering, EXtreme Programming;  Pair programming;  Real-world software management;  Software process fusion (SPF), Computer programming},
}

@CONFERENCE{Dasso2005202,
author={Dasso, A. and Debnath, N. and Funes, A. and Riesco, D. and Montejano, G. and Uzal, R.},
title={Testing as specification in agile methods},
journal={International Society for Computers and their Applications - 14th International Conference on Intelligent and Adaptive Systems and Software Engineering, IASSE 2005},
year={2005},
pages={202-206},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878576849&partnerID=40&md5=df2ee9a4844e7c2d63d411cf9220cefb},
abstract={Agile Methods such as Crystal, Extreme Programming, etc., make a strong case for testing, specially in developing test cases even before initial development. We advocate in this paper that testing when applying an agile method should not only start as soon as possible but should be one of the first activities and moreover it should be considered as a specification of the problem even at unit level. This is supported from the Formal Methods area where contributions can be found that put a formal base to the relationship between Test Cases and Requirements Specification. We postulate that test cases can be seeing as a good way of specifying system requirements. We review some results, especially from the field of Formal Methods that seems to support this contention. We also give some rules to elicit pre and postconditions from test cases as well as an example an for this.},
author_keywords={Agile methodology;  Formal methods;  Requirement specification.;  Test cases;  Testing},
keywords={Agile Methodologies;  Agile methods;  EXtreme Programming;  Initial development;  Requirement specification;  Requirements specifications;  System requirements;  Test case, Adaptive systems;  Computer applications;  Formal methods;  Specifications;  Testing, Software engineering},
}

@CONFERENCE{Marrington2005324,
author={Marrington, A. and Hogan, J.M. and Thomas, R.},
title={Quality assurance in a student-based agile software engineering process},
journal={Proceedings of the Australian Software Engineering Conference, ASWEC},
year={2005},
volume={2005},
pages={324-331},
doi={10.1109/ASWEC.2005.38},
art_number={1402027},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33646558257&doi=10.1109%2fASWEC.2005.38&partnerID=40&md5=c1de4b399ea7f877ea89f7f2004b0238},
abstract={Agile methodologies have proven to be a popular addition to the software engineering toolbox, promising significant advances in quality for small teams, with developers no longer weighed under by the documentation said to characterise traditional approaches. Yet, in spite of these claims, quality assurance remains a question to which agile methodologies have given only a partially satisfactory answer. This work examines quality assurance practices among student developers working within a lightweight iterative development process. Our focus is upon the linkages between their reported practices and the quality levels observed in the systems delivered. The study has identified a range of approaches to improving quality for small, inexperienced teams, with applications to both the educational and SME environments. © 2005 IEEE.},
keywords={Lightweight iterative development process;  Quality levels;  Software engineering toolbox;  Student developers, Engineering education;  Iterative methods;  Program documentation;  Quality assurance;  Software engineering;  Students, Agile manufacturing systems},
}

@CONFERENCE{Yagüe200593,
author={Yagüe, A. and Garbajosa, J.},
title={The role of testing in agile and conventional methodologies},
journal={Proceedings of the 7th International Workshop on Modelling, Simulation, Verification and Validation of Enterprise Information Systems, MSVVEIS 2009, in Conjunction with ICEIS 2009},
year={2005},
pages={93-100},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-78651275533&partnerID=40&md5=14b9f40790821ecd483abead3999531f},
abstract={Testing in software engineering is a well established practice. Though the scope of testing may differ depending on the community, e.g. for some communities is a process in itself while for some other communities is a an activity or a task under verification and validation, many fundamental issues around testing are shared by all the communities. However, agile methodologies are emerging in the software engineering landscape and are changing the picture. For instance, in agile methodologies it may happen that code is written precisely to pass a test. Moreover, tests may replace the requirement specification. Therefore the concepts underlying test practice are different in conventional and agile approaches. This paper analyses these two different perspectives for testing, the conventional and the agile, and discusses some of the implications that these two different approaches may have in software engineering.},
keywords={Agile approaches;  Agile Methodologies;  Requirement specification;  Verification and validation, Agile manufacturing systems;  Computer software selection and evaluation;  Software engineering, Information systems},
}

@CONFERENCE{Angioni2005209,
author={Angioni, M. and Sanna, R. and Soro, A.},
title={Defining a distributed agile methodology for an open source scenario},
journal={OSS 2005 - Proceedings of the 1st International Conference on Open Source Systems},
year={2005},
pages={209-214},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872930462&partnerID=40&md5=f0d99ca927ede3d23dc504b12cb99ca5},
abstract={In this paper we propose and describe an agile methodology for distributed development (MADD - Methodology for Agile Distributed Development). In particular, it's illustrated a set of best practices to apply in a distributed and agile context, chosen on the base of their impact software quality and team interoperation. Beyond the proposed methodology, we show the results of a survey that we submitted to various contributors of Open Source projects. The survey has been of support to the definition of the MADD, helping to more understand and estimate if, how and how much agile practices and values are already present in the OS world, that today represents one of the most emblematic examples of distributed development. The MADD methodology will be adopted on a software development project at the University of Cagliari (Italy), by a group of students that will work like an Open Source community.},
author_keywords={Agile development;  Distributed development;  Open source},
keywords={Agile contexts;  Agile development;  Agile Methodologies;  Agile practices;  Distributed development;  Interoperations;  Open source communities;  Open source projects;  Open sources;  Software development projects;  Software Quality, Agile manufacturing systems;  Computer software selection and evaluation;  Surveys, Open systems},
}

@ARTICLE{Hoffman2005235,
author={Hoffman, D. and Strooper, P. and Wilkin, S.},
title={Tool support for executable documentation of Java class hierarchies},
journal={Software Testing Verification and Reliability},
year={2005},
volume={15},
number={4},
pages={235-256},
doi={10.1002/stvr.324},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-28644444571&doi=10.1002%2fstvr.324&partnerID=40&md5=b382e8e2206086c8ad78dc751285a8ff},
abstract={While object-oriented programming offers great solutions for today's software developers, this success has created difficult problems in class documentation and testing. In Java, two tools provide assistance: Javadoc allows class interface documentation to be embedded as code comments and JUnit supports unit testing by providing assert constructs and a test framework. This paper describes JUnitDoc, an integration of Javadoc and JUnit, which provides better support for class documentation and testing. With JUnitDoc, test cases are embedded in Javadoc comments and used as both examples for documentation and test cases for quality assurance. JUnitDoc extracts the test cases for use in HTML files serving as class documentation and in JUnit drivers for class testing. To address the difficult problem of testing inheritance hierarchies, JUnitDoc provides a novel solution in the form of a parallel test hierarchy. A small controlled experiment compares the readability of JUnitDoc documentation to formal documentation written in Object-Z. Copyright © 2005 John Wiley & Sons, Ltd.},
author_keywords={Automated testing;  Documentation;  Extreme programming;  Inheritance;  Java;  Object-oriented;  Specification},
keywords={Computer software selection and evaluation;  Embedded systems;  Hierarchical systems;  HTML;  Java programming language;  Object oriented programming;  Supervisory and executive programs;  System program documentation, Automated testing;  Executable documentation;  Extreme programming;  Java class hierarchies, Computer aided software engineering},
}

@CONFERENCE{Zuser200529,
author={Zuser, W. and Heil, S. and Grechenig, T.},
title={Software quality development and assurance in RUP, MSF and XP -A comparative study},
journal={Proceedings - International Conference on Software Engineering},
year={2005},
pages={29-34},
doi={10.1145/1083292.1083300},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885903144&doi=10.1145%2f1083292.1083300&partnerID=40&md5=c47fec6c93dd2cc890ba61b5ce2ab7c1},
abstract={The support of software quality in a software development process may be regarded under two aspects: first, by providing techniques, which support the development of high quality software and second, by providing techniques, which assure the required quality attributes in existing artifacts. Both approaches have to be combined to achieve effective and successful software engineering. In this study, we compare three of the most industrially relevant software development process models (Rational Unified Process (RUP), Microsoft Solution Framework (MSF) and Extreme Programming (XP)) regarding their software quality support in terms of software quality development and software quality assurance. Based on the results we propose a de-facto standard for quality support in software development process models. © 2005 ACM.},
author_keywords={Software Process Models;  Software Quality Assurance;  Software Quality Development},
keywords={Comparative studies;  EXtreme Programming;  High-quality software;  Rational Unified Process;  Software development process;  Software process models;  Software Quality;  Software quality assurance, Quality assurance;  Software engineering, Computer software selection and evaluation},
}

@CONFERENCE{Karn2005222,
author={Karn, J. and Cowling, T. and Syed-Abdullah, S.L. and Holcombe, M.},
title={Adjusting to XP: Observational studies of inexperienced developers},
journal={Lecture Notes in Computer Science},
year={2005},
volume={3556},
pages={222-225},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-26444610132&partnerID=40&md5=322f88381bac54b1655fe3b25d47554c},
abstract={Extreme programming (XP) has been introduced in various scenarios primarily because some in industry argued for a move away from what they feel are rigid documentation-based development techniques. This has usually taken place with experienced developers. This paper describes attempts by researchers from the University of Sheffield to introduce XP to relatively inexperienced student developers. This paper describes some of the important findings and provides evidence relating to common problems encountered when students attempt to adjust to XP. © Springer-Verlag Berlin Heidelberg 2005.},
author_keywords={Agile Methods;  Empirical Software Engineering;  Extreme Programming},
keywords={Computer science;  Societies and institutions;  Students, Documentation-based development;  Extreme programming (XP), Computer programming},
}

@CONFERENCE{Simons2005118,
author={Simons, A.J.H.},
title={Testing with guarantees and the failure of regression testing in eXtreme programming},
journal={Lecture Notes in Computer Science},
year={2005},
volume={3556},
pages={118-126},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-26444588638&partnerID=40&md5=61acf4da5a6d5e0c733ed57a95b128d5},
abstract={The eXtreme Programming (XP) method eschews all formal design, but compensates for this by rigorous unit testing. Test-sets, which constitute the only enduring specification, are intuitively developed and so may not be complete. This paper presents a method for generating complete unit test-sets for objects, based on simple finite state machines. Using this method, it is possible to prove that saved regression test-sets do not provide the expected guarantees of correctness when applied to modified or extended objects. Such objects, which pass the saved tests, may yet contain introduced faults. This puts the whole practice of regression testing in XP into question. To obtain the same level of guarantee, tests must be regenerated from scratch for the extended object. A notion of guaranteed, repeatable quality after testing is defined. © Springer-Verlag Berlin Heidelberg 2005.},
keywords={Finite element method;  Regression analysis, Extreme programming (XP);  Regression testing, Computer programming},
}

@CONFERENCE{Cau2005317,
author={Cau, A.},
title={Exploring XP's efficacy in a distributed software development team},
journal={Lecture Notes in Computer Science},
year={2005},
volume={3556},
pages={317-318},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-26444556928&partnerID=40&md5=560348eafb23308b204dcf8ad855f75b},
abstract={Since the first edition of Beck's book [1], the Extreme Programming (XP) has attracted attention from academia and industry, and its values, principles and practices are becoming increasingly popular. Strong interest in the software engineering community has generated substantial literature and debate over Extreme Programming. However, current research on the applicability and effectiveness of Extreme Programming is still very scarce and researchers and practitioners need to assess concretely XP's advantages and drawbacks. One disadvantage, which has been noted, is that Extreme Programming is more effective for small to medium size projects with co-located team. Despite such observation, Beck asserts that XP can work with teams of any size and also multi-site [2]. The main goal of this research is to evaluate the effectiveness of Extreme Programming, when the size of development team is large and distributed. There are two different approaches to investigate the applicability and effectiveness of a software method: empirical studies and simulation process modeling. These approaches are usually applied separately, but there are many interdependencies between simulation and empirical research. On the one hand simulation model generalizes empirical studies and provides a framework for the evaluation of empirical models. On the other hand, empirical studies provide the necessary fundament for simulation models because through empirical studies it is possible to collect real data to validate the simulation model. In the present research these two approaches are combined. © Springer-Verlag Berlin Heidelberg 2005.},
keywords={Empirical models;  Simulation process modeling, Computer programming;  Computer simulation;  Mathematical models;  Research;  Software engineering;  Technical presentations, Computer software},
}

@CONFERENCE{Holcombe2005255,
author={Holcombe, M. and Kalra, B.},
title={Agile Development Environment for Programming and Testing (ADEPT) - Eclipse makes project management eXtreme},
journal={Lecture Notes in Computer Science},
year={2005},
volume={3556},
pages={255-258},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-26444487700&partnerID=40&md5=e622890efa12656e138e0c510623b5ef},
abstract={Genesys Solutions is a bespoke IT company, first of its kind, run by MSc and fourth year students of Department of Computer Science, University of Sheffield under the supervision of Prof. Mike Holcombe and Dr. Marian Gheorghe. Genesys follows the eXtreme Programming (XP) methodology for software development based on client requirements. The commitment towards XP and its 'good software practices' can be considered as the greatest strength of Genesys. Agile Development Environment for Programming and Testing (ADEPT) is our contribution towards supporting the XP methodology by adopting the Eclipse platform along with its associated tools and frameworks within Genesys Solutions. It aimed to teach good software practices in Genesys to support XP by providing a software development life cycle management tool that will encompass the best practices of XP. It comprises of tools based on the principles of XP such as story cards, system metaphor, estimations, testing and quality assurance. ADEPT was the result of the IBM Eclipse Innovation 2004 awarded to the University of Sheffield. Also, based on the previous year's performance and more innovative ideas to implement more principles of XP we have been awarded another grant under the IBM Eclipse Innovation 2005 programme. © Springer-Verlag Berlin Heidelberg 2005.},
author_keywords={Eclipse;  Extreme programming;  Project management;  Software life cycle},
keywords={ADEPT;  Extreme programming (XP);  Genesys solutions, Computer science;  Students, Software engineering},
}

@CONFERENCE{Pikkarainen2005171,
author={Pikkarainen, M. and Passoja, U.},
title={An approach for assessing suitability of Agile solutions: A case study},
journal={Lecture Notes in Computer Science},
year={2005},
volume={3556},
pages={171-179},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-26444518694&partnerID=40&md5=8d6012d94d9cd09cd3232614a4be21d1},
abstract={Dynamic market situation and changing customer requirements generate more demands for the product development. Product releases should be developed and managed in short iterations answering to the rapid external changes and keeping up a high quality level. Agile practices (such as the best practices in Extreme Programming and Scrum) offer a great way of monitoring and controlling rapid product development cycles and release development. One problem in product development projects, however, is how to apply agile methods and principles as a part of the complex product development. The purpose of this paper is to describe, how Agile Assessment was conducted in a case company in order to support product development and customer support improvement. During the experiment it was found that Agile Assessment is an efficient method to clarify what agile practices are suitable for the organization's product development and customer co-operation. Another finding was that the use of the best suitable agile practices would improve incremental development monitoring and traceability of requirements. © Springer-Verlag Berlin Heidelberg 2005.},
keywords={Customer satisfaction;  Marketing;  Mathematical models, Agile practices;  Agile solutions;  Dynamic market situation;  Rapid external changes, Computer programming},
}

@CONFERENCE{Keenan2005251,
author={Keenan, F. and Bustard, D.},
title={BPUF: Big picture up front},
journal={Lecture Notes in Computer Science},
year={2005},
volume={3556},
pages={251-254},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-26444555027&partnerID=40&md5=af0a41ed3f4847408e097866a817f9d9},
abstract={XP recommends that developers focus on the software product ignoring issues that do not contribute directly to its construction. All wider issues are assumed to be the responsibility of the customer representative. This paper argues that there is benefit in the full development team considering the 'big picture' before beginning implementation as long as this can be undertaken in a suitably agile way. Evidence of the need for this wider approach is presented. Aspects of Soft Systems Methodology (SSM) are then proposed as a means of performing the necessary analysis. Two analysis techniques of SSM, rich pictures and conceptual models, are evaluated against agile criteria defined by Ambler. © Springer-Verlag Berlin Heidelberg 2005.},
keywords={Computer software;  Software engineering, Customer representative;  Extreme programming (XP);  Soft systems methodology (SSM), Computer programming},
}

@CONFERENCE{Martin2005263,
author={Martin, A. and Fraser, S. and Davies, R. and Holcombe, M. and Mugridge, R. and Pierce, D. and Poppendieck, T. and Succi, G.},
title={XP/agile education and training},
journal={Lecture Notes in Computer Science},
year={2005},
volume={3556},
pages={263-266},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-26444548124&partnerID=40&md5=529c1fe1a60f78bc8a876374cc11eab7},
abstract={XP/Agile education and training remains a challenge from the perspective of determining relevant content; identifying effective methods for delivery; and maintaining the focus and motivation of students. This panel brings together academic and industry professionals to share their perspectives and experiences. Anticipated points for discussion include: education/training delivery strategies, curriculum definition, certification challenges, marketing issues, collaboration strategies to engage industry sponsorship, value assessments for students and sponsoring organizations, and program success stories. This will be a highly interactive panel and the audience should come prepared to both ask and answer questions. © Springer-Verlag Berlin Heidelberg 2005.},
keywords={Extreme programming (XP);  Stories;  Training delivery systems, Computer programming;  Societies and institutions;  Students, Education},
}

@ARTICLE{Segal2005517,
author={Segal, J.},
title={When software engineers met research scientists: A case study},
journal={Empirical Software Engineering},
year={2005},
volume={10},
number={4},
pages={517-536},
doi={10.1007/s10664-005-3865-y},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-26044456428&doi=10.1007%2fs10664-005-3865-y&partnerID=40&md5=8acbbe2a0f21933a9ef531b11092fc90},
abstract={This paper describes a case study of software engineers developing a library of software components for a group of research scientists, using a traditional, staged, document-led methodology. The case study reveals two problems with the use of the methodology. The first is that it demands an upfront articulation of requirements, whereas the scientists had experience, and hence expectations, of emergent requirements; the second is that the project documentation does not suffice to construct a shared understanding. Reflecting on our case study, we discuss whether combining agile elements with a traditional methodology might have alleviated these problems. We then argue that the rich picture painted by the case study, and the reflections on methodology that it inspires, has a relevance that reaches beyond the original context of the study. © 2005 Springer Science + Business Media, Inc.},
author_keywords={Agile methodologies;  Case study;  Scientific software;  Software engineers;  Tailoring methodologies},
keywords={Agile methodologies;  Case study;  Scientific softwares;  Software engineers;  Tailoring methodologies, Computer software;  Information retrieval systems;  Problem solving, Software engineering},
}

@ARTICLE{Kettunen2005587,
author={Kettunen, P. and Laanti, M.},
title={How to steer an embedded software project: Tactics for selecting the software process model},
journal={Information and Software Technology},
year={2005},
volume={47},
number={9},
pages={587-608},
doi={10.1016/j.infsof.2004.11.001},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-18844371783&doi=10.1016%2fj.infsof.2004.11.001&partnerID=40&md5=4b00cdca0953655eddd815276e30ae30},
abstract={Modern large new product developments (NPD) are typically characterized by many uncertainties and frequent changes. Often the embedded software development projects working on such products face many problems compared to traditional, placid project environments. One of the major project management decisions is then the selection of the project's software process model. An appropriate process model helps coping with the challenges, and prevents many potential project problems. On the other hand, an unsuitable process choice causes additional problems. This paper investigates the software process model selection in the context of large market-driven embedded software product development for new telecommunications equipment. Based on a quasi-formal comparison of publicly known software process models including modern agile methodologies, we propose a process model selection frame, which the project manager can use as a systematic guide for (re)choosing the project's process model. A novel feature of this comparative selection model is that we make the comparison against typical software project problem issues. Some real-life project case examples are examined against this model. The selection matrix expresses how different process models answer to different questions, and indeed there is not a single process model that would answer all the questions. On the contrary, some of the seeds to the project problems are in the process models themselves. However, being conscious of these problems and pitfalls when steering a project enables the project manager to master the situation. © 2004 Elsevier B.V. All rights reserved.},
author_keywords={Embedded systems;  New product development;  Risk management;  Software process models;  Software project management},
keywords={Computer software;  Mathematical models;  Matrix algebra;  Product development;  Project management;  Risk management;  Software engineering, New product development;  Pragmatic aids;  Software process models;  Software project management, Embedded systems},
}

@ARTICLE{Schatz200536,
author={Schatz, B. and Abdelshafi, I.},
title={Primavera gets Agile: A successful transition to Agile development},
journal={IEEE Software},
year={2005},
volume={22},
number={3},
pages={36-42},
doi={10.1109/MS.2005.74},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-21244471539&doi=10.1109%2fMS.2005.74&partnerID=40&md5=77dfec954e8a04457277368d3edc5f98},
abstract={Primavera Systems, vendor for enterprise project management software, reports on adopting the Scrum agile developments process. The changes made helped the company start delivering higher-quality software while improving the development team's quality of life. Today, Primavera's development team is a model for other companies looking to adopt agile processes. © 2005 IEEE.},
keywords={Industrial relations;  Project management;  Quality assurance;  Usability engineering, Agile software development;  Primavera Systems (CO), Software engineering},
}

@ARTICLE{Germain200517,
author={Germain, É. and Robillard, P.N.},
title={Engineering-based processes and agile methodologies for software development: A comparative case study},
journal={Journal of Systems and Software},
year={2005},
volume={75},
number={1-2},
pages={17-27},
doi={10.1016/j.jss.2004.02.022},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-9544235176&doi=10.1016%2fj.jss.2004.02.022&partnerID=40&md5=a5c0f45dda6ad9706f1dfed1265b025e},
abstract={The emergence of various software development methodologies raises the need to evaluate and compare their efficiencies. One way of performing such a comparison is to have different teams apply different process models in the implementation of multiple versions of common specifications. This study defines a new cognitive activity classification scheme which has been used to record the effort expended by six student teams producing parallel implementations of the same software requirements specifications. Three of the teams used a process based on the Unified Process for Education (UPEDU), a teaching-oriented process derived from the Rational Unified Process. The other three teams used a process built around the principles of the Extreme Programming (XP) methodology. Important variations in effort at the cognitive activity level between teams shows that the classification could scarcely be used without categorization at a higher level. However, the relative importance of a category of activities aimed at defining "active" behaviour was shown to be almost constant for all teams involved, possibly showing a fundamental behaviour pattern. As secondary observations, aggregate variations by process model tend to be small and limited to a few activities, and coding-related activities dominate the effort distribution for all the teams. © 2004 Elsevier Inc. All rights reserved.},
author_keywords={Cognitive activity;  Empirical software engineering;  Process measurement;  Productivity},
keywords={Cognitive systems;  Computer science;  Process control;  Set theory;  Students;  Teaching, Cognitive activity;  Empirical software engineering;  Process measurement;  Student teams, Software engineering},
}

@CONFERENCE{Kumar2005189,
author={Kumar, S. and Susarla, A. and Mookerjee, V.},
title={Coordinating user-developer efforts in extreme programming: A control-theoretic approach},
journal={15th Workshop on Information Technology and Systems, WITS 2005},
year={2005},
pages={189-194},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905752945&partnerID=40&md5=88cbf18e8c5b7cd87b7482b93014a590},
abstract={Extreme programming (XP) calls for intense participation by users to ensure that systems are developed to meet current needs, yet be flexible enough to adapt to future needs [Beck, 2000]. In XP projects, it is crucial for developers to align their efforts with those of the users that are allocated to the project so that the goals of the development activity from the perspective of the organization are achieved. We consider an optimal control model of extreme programming where user and developer efforts (the control variables) are optimally chosen during the development period to maximize net system value (system value minus user and developer effort). Unlike most previous research, our problem incorporates both demand side (user value) and supply side (developer and user effort) considerations in software development.},
keywords={Control variable;  Control-theoretic approach;  Developer efforts;  Development activity;  EXtreme Programming;  Net systems;  Optimal control model;  Supply sides},
}

@CONFERENCE{Ilieva2004326,
author={Ilieva, S. and Ivanov, P. and Stefanova, E.},
title={Analyses of an agile methodology implementation},
journal={Conference Proceedings of the EUROMICRO},
year={2004},
volume={30},
pages={326-333},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-11844252039&partnerID=40&md5=80d5feee6bd15a57c35cc189d04a1f53},
abstract={In the last few years Agile methodologies appeared as a reaction to traditional ways of developing software and acknowledge the need for an alternative to documentation driven, heavyweight software development processes. This paper shortly presents an agile approach for software development of e-business applications. The approach, named eXPERT, is applicable to small teams developing projects characterised by often changing requirements, tight schedules, and high quality demands. The present article describes a case study about eXPERT approach implementation at software developing company. Experiment results based on preliminary defined series of metrics are presented and analyzed.},
keywords={Agile methodology;  Defect rates;  Extreme programming (XP);  Personal software process (PSP);  Agile approaches;  Agile Methodologies;  Developing projects;  E-business applications;  High quality;  Software development process, Approximation theory;  Personnel;  Planning;  Problem solving;  Program documentation;  Scheduling;  Microwave circuits, Software engineering},
}

@ARTICLE{Korkala200412,
author={Korkala, M. and Abrahamsson, P.},
title={Extreme programming: reassessing the requirements management process for an offsite customer},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2004},
volume={3281},
pages={12-22},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-35048822052&partnerID=40&md5=97071a049f510edc2317e205752e636f},
abstract={Software engineering literature and practice have shown that efficient requirements management forms the essence of a successful software project. When the requirements are volatile and the development environment is unstable, Extreme Programming (XP) methodology provides efficient means to cope with requirements through the onsite customer practice. However, for many software companies, having an onsite customer present is difficult to achieve. To solve this problem an Offsite Customer Process Model has been proposed earlier. This paper reports results from a study of a mobile application development project where the model was empirically evaluated. The findings show that the model itself is context-dependent and it has to be adapted to the underlying development process. Based on these findings, an improved model is introduced. It is shown that the new model proved to work efficiently and improved the developer-customer communication mechanisms. © Springer-Verlag 2004.},
keywords={Mobile computing;  Requirements engineering;  Software engineering, Context dependent;  Customer communications;  Development environment;  Development process;  EXtreme Programming;  Mobile application development;  On-site customers;  Requirements management, Sales},
}

@CONFERENCE{Coleman200430,
author={Coleman, G.},
title={EXtreme Programming (XP) as a 'minimum' software Process: A grounded theory},
journal={Proceedings - International Computer Software and Applications Conference},
year={2004},
volume={2},
pages={30-31},
doi={10.1109/CMPSAC.2004.1342663},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-18844398881&doi=10.1109%2fCMPSAC.2004.1342663&partnerID=40&md5=6466903bb8f6ead2873120ab37d97ae3},
abstract={Companies engaged in software production are deploying a variety of process models to support their product development activity. Whilst most are tailoring existing process models for use in their specific environments, many have begun to use extreme Programming (XP) to achieve their development objectives. This study illustrates how XP is being used as a "good enough" or "minimum" process by software product companies. © 2004 IEEE.},
keywords={Extreme programming (XP);  Market sector;  Product quality;  Situational factors, Computer systems programming;  Data reduction;  Encoding (symbols);  Information management;  Search engines;  Virtual reality, Computer aided software engineering},
}

@ARTICLE{Bos2004129,
author={Bos, E. and Vriens, C.},
title={An agile CMM},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2004},
volume={3134},
pages={129-138},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-35048877206&partnerID=40&md5=61a2aa7c9680e7bfe92d98c2e29b6a15},
abstract={This paper describes the process for developing software in a highly volatile environment. The process is based on eXtreme Programming (XP) and Scrum, to combine engineering practices with management directives based on the Capability Maturity Model (CMM) Level 2. In December 2003 our department, Software Engineering Services (SES), was successfully certified for CMM Level 2. The assessors were especially impressed with the transparent, easily accessible and uniform project information. We describe which XP and Scrum practices we apply in the different Key Process Areas (KPA) of CMM and which activities were added. Also, the result of the assessment and recommendations of the assessors are listed. © Springer-Verlag 2004.},
keywords={Artificial intelligence;  Computers, Capability maturity models;  CMM levels;  Engineering practices;  EXtreme Programming;  Key process areas;  Level 2;  Project informations;  Volatile environments, Software engineering},
}

@ARTICLE{Wäyrynen2004117,
author={Wäyrynen, J. and Bodén, M. and Boström, G.},
title={Security engineering and eXtreme Programming: An impossible marriage?},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2004},
volume={3134},
pages={117-128},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-35048816560&partnerID=40&md5=0da551289c33d28b0ff61e20b6ac1a46},
abstract={Agile methods, such as eXtreme Programming (XP), have been criticised for being inadequate for the development of secure software. In this paper, we analyse XP from a security engineering standpoint, to assess to what extent the method can be used for development of security critical software. This is done by analysing XP in the light of two security engineering standards; the Systems Security Engineering-Capability Maturity Model (SSE-CMM) and the Common Criteria (CC). The result is that XP is more aligned with security engineering than one might think at first. However, XP also needs to be tailored to better support and to more explicitly deal with security engineering issues. Tailoring XP for secure software development, without removing the agility that is the trademark of agile methods, may be a solution that would make XP more compatible with current security engineering practices. © Springer-Verlag 2004.},
keywords={Security systems;  Software design;  Software engineering, Capability maturity models;  Common criteria;  EXtreme Programming;  Secure software;  Secure software development;  Security engineering;  Security-critical;  Systems security, Standards},
}

@ARTICLE{Kähkönen2004378,
author={Kähkönen, T. and Abrahamsson, P.},
title={Achieving CMMI level 2 with enhanced extreme programming approach},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2004},
volume={3009},
pages={378-392},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-27144533106&partnerID=40&md5=9b0b9cdd01c7608c69f7e2e55dbef91d},
abstract={The relationship between agile methods and Software Engineering Institute's CMM approach is often debated. Some authors argue that the approaches are compatible, while others have criticized the application of agile methods from the CMM perspective. Only few CMM based assessments have been performed on projects using agile approaches. This paper explores an empirical case where a project using Extreme Programming (XP) based approach was assessed using the CMMI framework. The results provide empirical evidence pointing out that it is possible to achieve maturity level 2 with approach based on XP. Yet, the results confirm that XP, as it is defined, is not sufficient. This study demonstrates that it is possible to use the CMMI for assessing and improving agile processes. However, the analysis reveals that assessing an agile organization requires more interpretations than normally would be the case. It is further concluded that the CMMI model does not always support interpretations in an agile context. © Springer-Verlag Berlin Heidelberg 2004.},
keywords={Software engineering, Agile approaches;  Agile contexts;  Agile methods;  Agile organizations;  Agile process;  EXtreme Programming;  Maturity levels;  Software engineering institutes, Professional aspects},
}

@CONFERENCE{Huo2004520,
author={Huo, M. and Verner, J. and Zhu, L. and Babar, M.A.},
title={Software quality and agile methods},
journal={Proceedings - International Computer Software and Applications Conference},
year={2004},
volume={1},
pages={520-525},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-18744401347&partnerID=40&md5=511c6d2453a3350d16516bac593d4d45},
abstract={Agile methods may produce software faster but we also need to know how they meet our quality requirements. In this paper we compare the waterfall model with agile processes to show how agile methods achieve software quality under time pressure and in an unstable requirements environment, i.e. we analyze agile software quality assurance. We present a detailed waterfall model showing its software quality support processes. We then show the quality practices that agile methods have integrated into their processes. This allows us to answer the question "Can agile methods ensure quality even though they develop software faster and can handle unstable requirements?" © 2004 IEEE.},
keywords={Abstracting;  Budget control;  Computer programming;  Life cycle;  Quality assurance;  Reengineering, Extreme programming;  Software development lifecycle;  Waterfall model, Computer aided software engineering},
}

@ARTICLE{Henzinger2004332,
author={Henzinger, T.A. and Jhala, R. and Majumdar, R. and Sanvido, M.A.A.},
title={Extreme model checking},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2004},
volume={2772},
pages={332-358},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-34247149437&partnerID=40&md5=e8787716ba65eb48bf1842e83fbb84ba},
abstract={One of the central axioms of extreme programming is the disciplined use of regression testing during stepwise software development. Due to recent progress in software model checking, it has become possible to supplement this process with automatic checks for behavioral safety properties of programs, such as conformance with locking idioms and other programming protocols and patterns. For efficiency reasons, all checks must be incremental, i.e., they must reuse partial results from previous checks in order to avoid all unnecessary repetition of expensive verification tasks. We show that the lazy-abstraction algorithm, and its implementation in BLAST, can be extended to support the fully automatic and incremental checking of temporal safety properties during software development. © Springer-Verlag Berlin Heidelberg 2003.},
}

@ARTICLE{Visconti2004431,
author={Visconti, M. and Cook, C.R.},
title={An ideal process model for agile methods},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2004},
volume={3009},
pages={431-441},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-27144455651&partnerID=40&md5=625c24acb618097d44de3a9dbad98d65},
abstract={We present a software process model that can be effectively applied to the agile software development context. Our approach builds an ideal agile software process model starting from the principles established by the agile community in what is known as the Agile Manifesto. The practices defined by the ideal model can be used to assess the various agile methods to determine any missing or under-emphasized practices or practices needing improvement. We compared the practices defined for two of the most popular agile methods (XP and Scrum) with the ideal model and found that these two methods do not explicitly address in an organized way all the principles in the Manifesto. While these approaches do include practices to regularly review the effectiveness of the particular method and tune the method's behavior accordingly for a particular product being developed, they lack explicit practices to perform a retrospective focusing on the process, with the goal of adapting and improving the method itself and its future application. We propose a simple practice that could be added to these methods that would address this apparent oversight. This practice would also provide the ability to leverage what was learned from previous projects to the future projects,. We believe the proposed ideal model is complete, flexible, and can be used to assess and propose simple process improvement actions for agile methods. We also point out some open questions about the best way to share the knowledge gained from retrospectives and to do end of project reviews. © Springer-Verlag Berlin Heidelberg 2004.},
author_keywords={Agile methods;  Assessment;  Process models;  Scrum;  XP},
keywords={Process engineering;  Software design;  X ray photoelectron spectroscopy, Agile methods;  Agile software development;  Agile software process;  Assessment;  Future applications;  Process model;  Scrum;  Software process modeling, Software engineering},
}

@CONFERENCE{Concas200453,
author={Concas, G. and Marchesi, M. and Cau, A. and Pinna, S. and Mannaro, K. and Serra, N.},
title={XMI for XP project data interchange},
journal={Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
year={2004},
volume={05-November-2004},
pages={53-58},
doi={10.1145/1151433.1151441},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988825971&doi=10.1145%2f1151433.1151441&partnerID=40&md5=873e99bb5e05fcc46aa3ee16cbcec8cf},
abstract={In recent years Extreme Programming and Agile Methodologies are becoming very popular among academics and practitioners of software engineering. In order to create a knowledge base on XP and agile methodologies, a common standard for process data representation is needed. This standard can also be used for interchanging data among different tools supporting XP projects. In this paper we present XMI as a possible solution to this problem. We show the advantages of XMI for XP project data collection and interchange. XMI is an OMG standard for modelling data object semantics in XML syntax. It integrates XML and UML and requires the definition of a model for data that must be interchanged. In this context we have defined a UML model for an XP project. The XP project model consists of a set of UML classes diagrams representing the XP project entities, their properties and relationships. The model can be easily extended to other agile methodologies. We used this model for exporting process data from XPSwiki, a tool for XP project management and for process data collection. Copyright 2005 ACM.},
author_keywords={Extreme programming;  Process data;  Software project management tool;  UML;  XMI},
keywords={Knowledge based systems;  Project management;  Semantics;  Software engineering;  Unified Modeling Language;  XML, Agile Methodologies;  Common standards;  Data objects;  EXtreme Programming;  Knowledge base;  Process data;  Software project management;  XP project, Data acquisition},
}

@CONFERENCE{Bin20041567,
author={Bin, X. and Xiaohu, Y. and Zhijun, H. and Maddineni, S.R.},
title={Extreme programming in reducing the rework of requirement change},
journal={Canadian Conference on Electrical and Computer Engineering},
year={2004},
volume={3},
pages={1567-1570},
doi={10.1109/CCECE.2004.1349706},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-6944224495&doi=10.1109%2fCCECE.2004.1349706&partnerID=40&md5=8f56bfc3c08678f764de62eddb98296a},
abstract={Requirement changes and the involved rework are inevitable if the requirement change could not be foreseen. Extreme Programming (XP) suggests customer to be on site with the developers. The requirement changes may be forecasted by the on site customer from the business perspective and by the developers from the technology perspective. Extreme Programming was adopted in Lattice Trading System reengineering project. The user stories were weighed by a set of criteria which included the risk, cost, schedule, as well as the possibility to be changed. The stories were decomposed into features, and the features were organized into components. The components with less possibility to be changed were implemented earlier. Meanwhile, spikes were conducted when the decisions were being made for some critical tasks. In such a way, most components were completed without any change to their functional features while few components were implemented with large modification. The overall effort of rework was reduced considerably with this approach. Compared with the small cost for managing the change possibility, the method introduced in this paper is of significant worth.},
author_keywords={Extreme Programming;  Project management;  Requirement change;  User story},
keywords={Extreme programming;  Requirement changes;  User story, Knowledge acquisition;  Project management;  Software engineering, Computer programming},
}

@CONFERENCE{Sillitti20041,
author={Sillitti, A. and Russo, B. and Zuliani, P. and Succi, G.},
title={Deploying, updating, and managing tools for collecting software metrics},
journal={Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
year={2004},
volume={05-November-2004},
pages={1-4},
doi={10.1145/1151433.1151434},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988856287&doi=10.1145%2f1151433.1151434&partnerID=40&md5=b1c67798f7cf54a341a3a251c69464ae},
abstract={Collecting software engineering data is difficult due to the number of problems that researchers face in this activity. One of the most relevant is the ability to install and keep up-to-date the measurement tools installed in the production machines in order to collect such data. Even when a few machines are involved, maintaining all the tools required to collect data from the different development tools requires a full-time system administrator. Moreover, since most of these tools are research tools, researchers are updating them very frequently to fix bugs or to add new features. In a production environment, especially when Agile Methodologies are in place, the time and effort. For these reasons, automating the management of the tools for metrics collection is a key factor to provide easy-to-use tools and allow development teams to collect data useful for both practitioners and researchers. Copyright 2005 ACM.},
author_keywords={Process monitoring;  Software metrics},
keywords={Human resource management;  Process monitoring;  Software engineering, Agile Methodologies;  Development teams;  Development tools;  Measurement tools;  Production environments;  Production machines;  Software engineering data;  Software metrics, Data acquisition},
}

@ARTICLE{Firesmith200427,
author={Firesmith, D.},
title={Generating complete, unambiguous, and verifiable requirements from stories, scenarios, and use cases},
journal={Journal of Object Technology},
year={2004},
volume={3},
number={10},
pages={27-39},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-11244344116&partnerID=40&md5=1ff9d1d35134d2e0a62a42e8e4d18c05},
abstract={Simple scenarios and stories are typically used for requirements engineering in the Agile community (e.g., extreme Programming). Use case modeling has also been a popular requirements elicitation and analysis technique for many years. However, stories, scenarios, and use cases typically exhibit a great informality that violates the traditional guidance in the requirements engineering community that requirements should be complete, unambiguous, and verifiable. This is why many professional requirements engineers use these techniques only as tools for informal requirements elicitation, analysis, and validation. Instead during requirements analysis and specification, more experienced requirements engineers tend to develop and specify more formal textual requirements that are complete, unambiguous, and verifiable. This column will show how to transform incomplete and vague stories, scenarios, and use cases into a proper set of complete, unambiguous, and verifiable requirements.},
keywords={Asynchronous transfer mode;  Computer programming;  Customer satisfaction;  Decision making;  Knowledge engineering;  Safety factor, Agile community;  Extreme programming;  Requirement analysis;  Stakeholders, Requirements engineering},
}

@ARTICLE{Shaw200418,
author={Shaw, B.},
title={Agile evolution},
journal={Computer Bulletin (London, 1986)},
year={2004},
volume={46},
number={6},
pages={18-19},
doi={10.1093/combul/46.6.18},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-9244251030&doi=10.1093%2fcombul%2f46.6.18&partnerID=40&md5=f12b26d7b7710b3b398170673a6a155a},
abstract={The practical system development issues and contribution of agile software development methods and extreme programming to solve them are discussed. One difference in perspective between agile methods and rapid application development is that agile methods focus on product or functionality rather than concerns with the way that the process is achieved. One aspect of the agile approach is that the project phases are short, and each agile development phase must have some clear set of completed products that are significant to the overall solution. Evolutionary or iterative development is also an aspect of the agile approach.},
keywords={Computational complexity;  Computer programming;  Information technology;  Problem solving;  Product development;  Program documentation;  Project management;  Scheduling, Agile software development methods;  Executable codes;  Extreme programming, Software engineering},
}

@ARTICLE{Zhang200480,
author={Zhang, Y.},
title={Test-driven modeling for model-driven development},
journal={IEEE Software},
year={2004},
volume={21},
number={5},
pages={80-86},
doi={10.1109/MS.2004.1331307},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-4644363382&doi=10.1109%2fMS.2004.1331307&partnerID=40&md5=e91256fb731125a2c5af4b5081f5fea9},
abstract={A new software development process based on model-driven development (MDD) is now available. Called test-driven modeling, the process involves automatic testing through simulation and using executable models as living software system architecture documents. Developers can effectively apply TDM to large projects with high productivity and quality in terms of the number of code defects.},
keywords={Automatic testing;  Computer hardware description languages;  Computer simulation;  Computer systems programming;  Mathematical models;  Requirements engineering, Extreme programming;  Model driven development;  Test driven modeling, Software engineering},
}

@ARTICLE{Geras2004183,
author={Geras, A.M. and Smith, M.R. and Miller, J.},
title={A survey of software testing practices in Alberta},
journal={Canadian Journal of Electrical and Computer Engineering},
year={2004},
volume={29},
number={3},
pages={183-191},
doi={10.1109/CJECE.2004.1532522},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-4043152932&doi=10.1109%2fCJECE.2004.1532522&partnerID=40&md5=f4120ff33bba8beb5bd1c5270b7986ac},
abstract={Software organizations have typically de-emphasized the importance of software testing. In this paper, the results of a regional survey of software testing and software quality assurance techniques are described. Researchers conducted the study during the summer and fall of 2002 by surveying software organizations in the Province of Alberta. Results indicate that Alberta-based organizations tend to test less than their counterparts in the United States. The results also indicate that Alberta software organizations tend to train fewer personnel on testing-related topics. This practice has the potential for a two-fold impact: first, the ability to detect trends that lead to reduced quality and to identify the root causes of reductions in product quality may suffer from the lack of testing. This consequence is serious enough to warrant consideration, since overall quality may suffer from the reduced ability to detect and eliminate process or product defects. Second, the organization may have a more difficult time adopting methodologies such as extreme programming. This is significant because other industry studies have concluded that many software organizations have tried or will in the next few years try some form of agile method. Newer approaches to software development like extreme programming increase the extent to which teams rely on testing skills. Organizations should consider their testing skill level as a key indication of their readiness for adopting software development techniques such as test-driven development, extreme programming, agile modelling, or other agile methods.},
author_keywords={Agile methods;  Software quality;  Software quality assurance;  Software testing},
keywords={Agile methods;  Software quality;  Software quality assurance;  Software testing, Agile manufacturing systems;  Computer programming;  Design for testability;  Electronic commerce;  Mathematical models;  Personnel training;  Problem solving;  Quality assurance;  Software engineering;  Telecommunication systems;  Websites, Computer software},
}

@ARTICLE{Highsmith20042,
author={Highsmith, J.},
title={Opening statement},
journal={Cutter IT Journal},
year={2004},
volume={17},
number={6},
pages={2-4},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-3042654702&partnerID=40&md5=388d3565f13ad5129064bcee22b17ac5},
abstract={The values and practices of agile project management (APM), which have been extended for use in other fields were discussed. It consists of a set of core values, a set of guiding principles, a high-level process framework and a set of specific practices. The APM draws on ideas from general management, manufacturing and software development. The ideas incorporated a dynamic, complexity-based world-view suited to customer responsiveness, mobility and speed. It is suggested that APM had much wider ramifications and was of significant interest to project managers in a wide array of situations and fields.},
keywords={Behavioral research;  Customer satisfaction;  Environmental testing;  Flexible manufacturing systems;  Mathematical models;  Problem solving;  Product development;  Project management;  Regulatory compliance;  Societies and institutions;  Software engineering, Agile project management (APM);  Capability maturity model integration (CMMI);  Extreme programming (XP);  Feature driven development (FDD), Information technology},
}

@ARTICLE{Bauer200438,
author={Bauer, M.},
title={FDD and project management},
journal={Cutter IT Journal},
year={2004},
volume={17},
number={6},
pages={38-43},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-3042661973&partnerID=40&md5=6067f14ad54006595a33605f34ddb4c1},
abstract={The feature driven development (FDD), an agile development methodology created by Jeff De Luca, is discussed. It provides a framework for managing the big issues that arise in most projects at a time and in a manner that will have the greatest impact. The approach of FDD is focussed on people management as it is the key to successful project management. It is found that FDD is lightweight, well defined and targeted at producing results.},
keywords={Computer software;  Computer supported cooperative work;  Customer satisfaction;  Feature extraction;  Information retrieval;  Information technology;  Mathematical models;  Personnel;  Problem solving;  Product development, Agile development methodology;  Business domain;  Code inspection;  Feature driven development (FDD), Project management},
}

@ARTICLE{Alleman20045,
author={Alleman, G.},
title={Blending agile development methods with CMMI®},
journal={Cutter IT Journal},
year={2004},
volume={17},
number={6},
pages={5-15},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-3042652957&partnerID=40&md5=e9f775318228e45fcf4fcac2452404c3},
abstract={The blending of agile development process with capability maturity model integration (CMMI) is discussed. It is stated that the CMMI is a framework for improving the processes of software organizations. It is also a collection of process area components that are institutionalized across an organization. The search for better development methods is the goal of CMMI and agile methods bring faster and cheaper attributes to this search.},
keywords={Capability Maturity Model Integration (CMMI);  Extreme programming (XP);  Software Engineering Institute (SEI);  Work breakdown structure (WBS), Customer satisfaction;  Data acquisition;  Decision making;  Environmental testing;  Information technology;  Mathematical models;  Problem solving;  Resource allocation;  Societies and institutions;  Software engineering;  Websites, Agile manufacturing systems},
}

@ARTICLE{Stephens200444,
author={Stephens, M. and Rosenberg, D.},
title={The Irony of Extreme Programming},
journal={Dr. Dobb's Journal},
year={2004},
volume={29},
number={5},
pages={44-47},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-2042545426&partnerID=40&md5=2d8ca3405727f295f887fc820f84bad4},
abstract={The problems of extreme programming (XP) which is an addition to software processes are discussed. The problems of XP are circular dependencies, no detailed requirements, constant refactoring after programming, pair programming and collective ownership. The requirements documentation of XP consist of handwritten story cards where each card consists of a sentence or two which describes behavior of the system. Refractoring is the practice of improving the design of existing code which takes place in short steps but it introduces bugs into existing code. XP offloads responsibility of software projects onto on-site customers which makes customers biggest single risk factor in an XP project.},
keywords={Bugs;  Extreme programming (XP);  Refactoring;  Software industry;  Unit testing, Computer aided design;  Electronic mail;  Encoding (symbols);  Program documentation;  Project management;  Software engineering, Computer programming},
}

@ARTICLE{Sampaio2004597,
author={Sampaio, A. and Vasconcelos, A. and Falcone Sampaio, P.R.},
title={XWebProcess: Agile software development for web applications},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2004},
volume={3140},
pages={597-598},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884840942&partnerID=40&md5=4f62dff252ebde7eb11d1fd1cc5a40c2},
abstract={Accelerating application development and reducing time to market is a highly valuable feature of a software process. For web-based applications, in particular, project development efforts often need to comply with severe time constraints imposed by the strategic business importance of the web. In this paper we describe XWebProcess, an agile process for web-based application development. XWebProcess is grounded on the principles underlying Extreme Programming and is aimed at building high quality web applications in a time effective way. XWebProcess’ agility has been compared to XP via an experimental setting which shows its superiority in supporting web development dimensions such as requirements gathering, user navigation design, and software testing, while retaining the agile property of Extreme Programming. © Springer-Verlag Berlin Heidelberg 2004.},
keywords={Application programs;  Software design;  Software engineering;  Software testing;  Web services;  Websites, Agile software development;  Application development;  EXtreme Programming;  Project development;  Requirements gathering;  Software process;  Strategic business;  Web-based applications, World Wide Web},
}

@ARTICLE{Sfetsos2004227,
author={Sfetsos, P. and Angelis, L. and Stamelos, I. and Bleris, G.L.},
title={Evaluating the extreme programming system – An empirical study},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2004},
volume={3092},
pages={227-230},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-27144519493&partnerID=40&md5=290b9efc165ca8acc767a50f5fe6d99f},
abstract={In this paper we discuss an empirical study about the success and difficulties 15 Greek software companies experienced applying Extreme Programming [1] as a holistic system in software development. Based on a generic XP system including feedback influences and using as a research tool a cause effect model including social-technical affecting factors, the study statistically evaluates XP practices application by the software companies. Data were collected from 30 managers and developers, using the sample survey technique with questionnaires and interviews, in a time period of six months. Practices were analysed separately using Descriptive Statistics and as a whole by building up different models using stepwise Discriminant Analysis. The results have shown that companies, facing various problems with some practices, prefer to develop their own tailored XP method and way of working-practices to meet their requirements. © Springer-Verlag Berlin Heidelberg 2004.},
author_keywords={Cause-effect model;  Empirical study;  EXtreme programming system;  Feedback;  Stepwise discriminant analysis (DA)},
keywords={Agile manufacturing systems;  Application programs;  Discriminant analysis;  Economic and social effects;  Feedback;  Software engineering;  Surveys, Affecting factors;  Cause-effect models;  Descriptive statistics;  Empirical studies;  EXtreme Programming;  Stepwise discriminant analysis;  Survey techniques;  Working practices, Software design},
}

@CONFERENCE{Teiniker2003400,
author={Teiniker, E. and Mitterdorfer, S. and Johnson, L.M. and Kreiner, C. and Kovács, Z. and Weiss, R.},
title={A Test-Driven Component Development Framework based on the CORBA Component Model},
journal={Proceedings - IEEE Computer Society's International Computer Software and Applications Conference},
year={2003},
pages={400-405},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0345529067&partnerID=40&md5=7309438ab4f5d0803b1db7e843a5d784},
abstract={Short product cycles and rapidly changing requirements are increasingly forcing developers to use agile development strategies like extreme programming and test-driven development. At the same time, hierarchical software design strategies such as component based software engineering are becoming necessary to overcome increasing software complexity. In this paper, we present a test-driven component development framework that encapsulates test code in a mirror component for automated testing during development, and as an executable semantic to simplify assessment and to increase trustworthiness of software systems.},
author_keywords={CCM;  CORBA;  Test-Driven Development},
keywords={Computational complexity;  Computer programming;  Computer programming languages;  Interfaces (computer);  Semantics, Test code development, Software engineering},
}

@CONFERENCE{Nagarajan20031090,
author={Nagarajan, S.V. and Garcia, O. and Croll, P.},
title={Software quality issues in extreme programming},
journal={IASTED International Multi-Conference on Applied Informatics},
year={2003},
volume={21},
pages={1090-1095},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-1442302354&partnerID=40&md5=7ee12aba60436a734c8d17af9a350af4},
abstract={The aim of this paper is to highlight some of the quality issues in the agile software development practices like Extreme Programming. The areas covered include a comprehensive re-visit to the extreme programming (XP) practices and the experiences reported so far. Like any other software development method XP projects face quality issues arising from the four main perspectives Product, Process, User and Holistic. All the XP practices are related to the quality criteria or elements and whether they have a positive or negative impact on a project is identified. There has been a tremendous effort in transformation from traditional methods to XP. This is also discussed and some suggestions made for a smoother transition. Finally, Quality Management (QM) activities that are a part of XP has also been identified. An attempt to emphasize the quality improvements achieved through XP practices has been made throughout the paper.},
author_keywords={Agile Software Development;  Extreme Programming;  Software Quality},
keywords={Codes (symbols);  Computer programming;  Costs;  Customer satisfaction;  Decision making;  Information technology;  Mathematical models;  Program documentation;  Reliability;  Software engineering;  Systems analysis, Extreme programming (XP);  Quality management (QM);  Software quality and agile software development, Quality control},
}

@ARTICLE{Fredrick20039,
author={Fredrick, C.},
title={Extreme programming: Growing a team horizontally},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2003},
volume={2753},
pages={9-17},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248867490&partnerID=40&md5=9d41d8d07a33cad5f090e184429c0643},
abstract={There is a great deal of skepticism surrounding whether or not the Extreme Programming (XP) methodology has the potential to work for large-scale projects. This paper highlights two software development projects that used XP. The projects were similar but the implementation, decision-making and functional requirements varied considerably. This paper documents the advantages and disadvantages of XP experienced in these projects, highlights how the process regarding team growth evolved and matured, and discusses the lessons learned. © Springer-Verlag Berlin Heidelberg 2003.},
author_keywords={Customer team;  Developers;  Extreme programming;  Hard fast rules;  Horizontal;  Junit tests;  Lurk;  Persistence requirements;  Refactoring;  Requirements;  Shunted tests;  Stories;  Velocity;  Vertical;  XP},
}

@CONFERENCE{Holloway2003225,
author={Holloway, J. and Ratcliffe, M.},
title={Development of a MLE by Students for Students Using Extreme Programming Techniques},
journal={Proceedings of the Annual SIGCSE Conference on Innovation and Technology in Computer Science Education (ITiSCE)},
year={2003},
volume={8},
pages={225},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-6344241090&partnerID=40&md5=81b8d58f983d192ae10b15f293537269},
abstract={The development of a managed learning environment (MLE) by students for students using extreme programming (XP) techniques was discussed. It has solved many of the problems of the old system and improved on the original monitoring, assessment and provision (MAP) idea by students who have previously sat these exams. MLE is used for assessment creation and delivery in addition to providing a number of other features to enhance e-learning. The practices of XP were initiated by the students themselves and used in practical way on a large software engineering project.},
author_keywords={Extreme programming;  Learning environment;  MLE;  XP},
keywords={Extreme programming (XP);  Learning environment;  Managed learning environment (MLE);  E-learning;  Monitoring, Assessment and Provision (MAP), Computer programming;  Learning systems;  Problem solving;  Project management;  Students;  Computer aided instruction;  Computer aided software engineering;  Curricula;  Teaching;  Virtual reality, Computer science;  Learning systems},
}

@CONFERENCE{Bailetti2003309,
author={Bailetti, A.J. and Liu, J.},
title={Comparing Software Development Processes Using Information Theory},
journal={Portland International Conference on Management of Engineering and Technology},
year={2003},
pages={309-315},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-1442303522&partnerID=40&md5=545e9be2e58b52da4f818b9b6b1cd225},
abstract={Information theory is used to identify the criteria for comparing software development processes. We then use the criteria identified to make assertions about the Capability Maturity Model (CMM) developed by the Software Engineering Institute at Carnegie Mellon University vis-à-vis the eXtreme Programming (XP) process developed by Kent Beck.},
keywords={Computational methods;  Computer programming;  Computer programming languages;  Information theory;  Knowledge acquisition;  Project management;  Societies and institutions;  Systems analysis, Capability maturity model (CMM);  Extreme programming (XP) process, Software engineering},
}

@ARTICLE{Martinsson200380,
author={Martinsson, J.},
title={Maturing XP through the CMM},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2003},
volume={2675},
pages={80-87},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248883341&partnerID=40&md5=e41520086d3f06b0f70351f48845c935},
abstract={Extreme Programming (XP) and the Capability Maturity Model (CMM) are two recently emerging models addressing the difficulty of developing and delivering high-quality software products. The CMM gives guidelines for what to do at an organizational level, while XP says how to develop software at a project level. Together these models form a comprehensive framework for structuring the software development organization. Drawing from previous software engineering knowledge as well as personal experiences of coaching XP teams this paper gives practical suggestions for how to combine the two models. The paper shows that it is not only possible, but also advantageous to use XP as a springboard for reaching the highest CMM maturity level and assuring the long-term goals of the software development organization. © Springer-Verlag Berlin Heidelberg 2003.},
keywords={Software engineering, Capability maturity models;  Engineering knowledge;  EXtreme Programming;  High-quality software;  Maturity levels;  Organizational levels;  Personal experience;  Software development organizations, Software design},
}

@ARTICLE{Knublauch2003186,
author={Knublauch, H. and Rose, T.},
title={Tool-supported process analysis and design for the development of multi-agent systems},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2003},
volume={2585},
pages={186-197},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-35248814341&partnerID=40&md5=cb3324bc3255741b248ddf6bfc12014c},
abstract={This paper introduces a methodology for the development of multi-agent systems, in particular multi-agent systems that optimize the collaboration of distributed work groups like clinical departments. A major difficulty with such systems is requirements elicitation, because intimate knowledge of the work processes is needed to identify the potential agent application scenarios. In the face of uncertain requirements, our methodology exploits some ideas from agile software development approaches such as Extreme Programming, namely the values of collaboration with domain experts and of human creativity driven by rapid feedback. We support collaboration by means of a tool-supported modeling approach that allows one to capture existing and agentified processes in a format that is sufficiently simple to be understood and maintained by domain experts. These process models can be automatically synchronized with executable agent source code, so that rapid feedback is ensured. We support creativity by means of a searchable repository of reusable agent design patterns and other types of process modeling knowledge. © Springer-Verlag Berlin Heidelberg 2003.},
keywords={Computer software reusability;  Software agents;  Software design;  Software engineering, Agent design patterns;  Agile software development;  Application scenario;  Distributed work;  EXtreme Programming;  Human creativity;  Process Modeling;  Requirements elicitation, Multi agent systems},
}

@CONFERENCE{Müller2003168,
author={Müller, M.M. and Padberg, F.},
title={On the economic evaluation of XP projects},
journal={Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
year={2003},
pages={168-177},
doi={10.1145/940071.940094},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33644538743&doi=10.1145%2f940071.940094&partnerID=40&md5=96ec902bb1454212ec9015baab2b13d3},
abstract={From a project economics point of view, the most important practices of Extreme Programming (XP) are Pair Programming and Test-Driven Development. Pair Programming leads to a large increase in the personnel cost, and Test-Driven Development adds to the development effort. On the other hand, pp can speed the project up, both pp and Tdd can reduce the defect density of the code. Can the increased cost of XP be balanced by its shorter time to market and higher code quality? To answer this question, we construct a new model for the business value of software projects. We then analyze the cost and benefit of XP by applying our model to a realistic sample project. We systematically vary important model parameters to provide a sensitivity analysis. Our analysis shows that the economic value of, XP strongly depends on how large the XP speed and defect advantage really are. We also find that the market pressure is an important factor when assessing the business value of XP., Our study provides clear guidelines for managers when to consider using XP - or better not. © 2003 ACM.},
author_keywords={cost-benefit analysis;  extreme programming},
keywords={Business value;  Code quality;  Cost and benefits;  Economic evaluations;  Economic values;  EXtreme Programming;  Market pressure;  Model parameters;  New model;  Pair-programming;  Personnel costs;  Project economics;  Software project;  Test driven development;  Time to market;  XP project, Computer software selection and evaluation;  Concurrent engineering;  Cost effectiveness;  Costs;  Defect density;  Defects;  Sensitivity analysis;  Software engineering, Cost benefit analysis},
}

@CONFERENCE{Müller2003168,
author={Müller, M.M. and Padberg, F.},
title={On the Economic Evaluation of XP Projects},
journal={Proceedings of the Joint European Software Engineering Conference (ESEC) and SIGSOFT Symposium on the Foundations of Software Engineering (FSE-11)},
year={2003},
pages={168-177},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-1542317065&partnerID=40&md5=4fb28c7ae4a54e7b18cae24b624cfdc2},
abstract={Prom a project economics point of view, the most important practices of Extreme Programming (XP) are Pair Programming and Test-Driven Development. Pair Programming leads to a large increase in the personnel cost, and Test-Driven Development adds to the development effort. On the other hand, Pair Programming can speed the project up; both Pair Programming and Test-Driven Development can reduce the defect density of the code. Can the increased cost of XP be balanced by its shorter time to market and higher code quality? To answer this question, we construct a new model for the business value of software projects. We then analyze the cost and benefit of XP by applying our model to a realistic sample project. We systematically vary important model parameters to provide a sensitivity analysis. Our analysis shows that the economic value of XP strongly depends on how large the XP speed and defect advantage really are. We also find that the market pressure is an important factor when assessing the business value of XP. Our study provides clear guidelines for managers when to consider using XP or better not.},
author_keywords={Cost-Benefit Analysis;  Extreme Programming},
keywords={Codes (symbols);  Computer programming;  Cost benefit analysis;  Economics;  Managers;  Productivity;  Project management;  Sensitivity analysis, Extreme programming;  Software projects, Software engineering},
}

@ARTICLE{Ambler200334,
author={Ambler, S.W.},
title={It's All About People: Agile Enterprise Architecture},
journal={Cutter IT Journal},
year={2003},
volume={16},
number={7},
pages={34-42},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0347762456&partnerID=40&md5=66caed3c3a61822909cdfe770aa23ac9},
abstract={An agile approach to enterprise architecture (EA) with potential problems with existing EA efforts is discussed. Potential problems with existing EA efforts include skewed focus and the outdated architecture. It is vital to have the project teams create a comprehensive data model up front, then review and accept that model, to ensure that data requirements map to corporate data standards. If a logical data element is yet to be defined, the project team should clearly be required to wait until the all-important metadata is in place.},
keywords={Enterprise architecture (EA);  Extreme programming (XP), Communication;  Computer programming;  Computer software;  Costs;  Data reduction;  Decision making;  Mathematical models;  Public policy;  Societies and institutions, Industrial management},
}

@ARTICLE{Stott200318,
author={Stott, W.},
title={Extreme programming: Turning the world upside down},
journal={IEE Computing and Control Engineering},
year={2003},
volume={14},
number={3},
pages={18-23},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0038819448&partnerID=40&md5=cdd0fcd3c6bdb9c33a2c2dda7ac24141},
abstract={Established software engineering practices which are applied to the demands of developing today's software is discussed. It starts by describing the sort of broken process which is pandemic in the industry and then explains the nature of XP in terms of how it can address this problem. This paper discusses some of the more controversial XP practices such as eschewing a formal requirements document and test-driven development.},
keywords={Computer programming;  Object oriented programming;  Requirements engineering;  Systems analysis, Continuous integration;  Extreme programming;  Test driven development, Software engineering},
}

@ARTICLE{Moløkken2003441,
author={Moløkken, K.},
title={Software effort estimation: Planning XP guidelines compared to research on traditional software development},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2003},
volume={2675},
pages={441-442},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949741728&partnerID=40&md5=85a2d714cdab5f43bec018a73d8a5b5d},
abstract={In the “Planning Extreme Programming” framework by Beck and Fowler, they propose several guidelines for project estimation. This paper focuses on the guideline to use estimation teams. There exist several methods from software engineering research on how to do this, with varying degree of formalism involved. We present an account of earlier research on how to combine expert estimates, and compare it with the XP guidelines. It seems that the proposed framework, with some modifications, is a reasonable way to improve accuracy. © Springer-Verlag Berlin Heidelberg 2003.},
keywords={Software engineering, Expert estimates;  EXtreme Programming;  Project estimation;  Software effort estimation, Software design},
}

@ARTICLE{Fuqua2003340,
author={Fuqua, A.M.},
title={Using function points in XP – considerations},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2003},
volume={2675},
pages={340-342},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949921122&partnerID=40&md5=63cad10ac3fbaae29eca30e930363a83},
abstract={I set out to discover whether function points (FP) would be useful on an Extreme Programming (XP) project. I wanted to know if using function points would produce a more accurate schedule, would be a fair predictor of the iteration’s ending velocity, or would be good for predicting how long it would take to implement a story. We tried function points on an XP project and found the process useful but the numbers not. After a little background on using function points I summarize statistical analysis results on the project metrics and give suggestions for practitioners as well as researchers interested this topic. © Springer-Verlag Berlin Heidelberg 2003.},
keywords={Artificial intelligence;  Computers, EXtreme Programming;  Function point;  Project metrics;  XP project, Software engineering},
}

@ARTICLE{Beck200344,
author={Beck, K. and Boehm, B.},
title={Agility through discipline: A debate},
journal={Computer},
year={2003},
volume={36},
number={6},
pages={44-46},
doi={10.1109/MC.2003.1204374},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0037706723&doi=10.1109%2fMC.2003.1204374&partnerID=40&md5=d47e87a5f1b1781c6db60e07862563df},
abstract={The importance of disciplined approach while following the agile software development model is discussed. Extreme programming describes a set of skills developers or customers should master on the way to becoming effective members of a software development team. There must be a rule or system of rules governing conduct or activity of the team members.},
keywords={Computer operating systems;  Computer programming;  Glossaries;  Personnel training, Agile software development, Software engineering},
}

@ARTICLE{Wilson200368,
author={Wilson, G.V.},
title={Has it Really Been that Long?},
journal={Dr. Dobb's Journal},
year={2003},
volume={28},
number={10},
pages={68},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0141752802&partnerID=40&md5=802392f9a4aa59fe236d7f0ec64c6ae1},
abstract={The book review of some of the latest computer programming books is discussed. The books discussed include: java performance tuning, java extreme programming cookbook, JDBC: practical guide for java programmers and MySQL and java developer's guide. These books cover the basic features of java, problems that may be crop up and encountering them and the latest developments.},
keywords={C (programming language);  DOS;  Graphical user interfaces;  Java programming language;  Performance;  XML, Web testing, Computer program listings},
}

@ARTICLE{Reifer200314,
author={Reifer, D.J.},
title={XP and the CMM},
journal={IEEE Software},
year={2003},
volume={20},
number={3},
pages={14-15},
doi={10.1109/MS.2003.1196314},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0037618929&doi=10.1109%2fMS.2003.1196314&partnerID=40&md5=a7f758ba01045d91169de6a0c8b2e0a7},
abstract={The compatibility between extreme programming (XP) the software capability maturity model (SW-CMM) is discussed. The organizations implementing XP practices can easily fit them under the SW-CMM because it represents a framework for self-improvement. Putting XP to work in an SW-CMM environment is often difficult, because guidance on how to take advantage of the existing best practices is not available while transitioning to XP.},
keywords={C (programming language);  Costs;  Engineers;  Project management;  Websites, Formal assessments, Software engineering},
}

@CONFERENCE{Sepulveda2003140,
author={Sepulveda, C.},
title={Agile development and remote teams: Learning to love the phone},
journal={Proceedings of the Agile Development Conference, ADC 2003},
year={2003},
pages={140-145},
doi={10.1109/ADC.2003.1231464},
art_number={1231464},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-79952969210&doi=10.1109%2fADC.2003.1231464&partnerID=40&md5=5b8c4325ffd7dacf176c3814797cf990},
abstract={We currently work on a project where we adopted an agile process that integrates elements of extreme programming and agile modelling. Our approach is unconventional however; instead of the team being co-located, we work remotely as the lead developer. The risk of increased communication costs can be mitigated rather easily. However, trust is the most complicated element of team dynamics to establish and maintain. A virtual team must address this issue in order to succeed. Remote teams can work quite well. We have been delivering quality software in a timely manner, within the expectations of management for the last two years. We actually are more efficient and successful with a virtual team than when we were all co-located in the same room. © 2003 IEEE.},
author_keywords={Application software;  Assembly;  Costs;  Documentation;  Management training;  Programming profession;  Quality management;  Software quality;  Virtual groups;  Writing},
keywords={Application programs;  Assembly;  Costs;  Quality management;  System program documentation;  Technical writing;  Virtual addresses, Agile development;  Communication cost;  EXtreme Programming;  Management training;  Programming profession;  Quality software;  Software Quality;  Virtual group, Computer software selection and evaluation},
}

@CONFERENCE{Padberg2003166,
author={Padberg, F. and Müller, M.M.},
title={Analyzing the cost and benefit of pair programming},
journal={Proceedings - International Software Metrics Symposium},
year={2003},
volume={2003-January},
pages={166-177},
doi={10.1109/METRIC.2003.1232465},
art_number={1232465},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873272722&doi=10.1109%2fMETRIC.2003.1232465&partnerID=40&md5=ed27d06c557986bb7b4a9b98fba4c0e4},
abstract={We use a combination of metrics to understand, model, and evaluate the impact of pair programming on software development. Pair programming is a core technique in the hot process paradigm of extreme programming. At the expense of increased personnel cost, pair programming aims at increasing both the team productivity and the code quality as compared to conventional development. In order to evaluate pair programming, we use metrics from three different categories: process metrics such as the pair speed advantage of pair programming; product metrics such as the module breakdown structure of the software; and project context metrics such as the market pressure. The pair speed advantage is a metric tailored to pair programming and measures how much faster a pair of programmers completes programming tasks as compared to a single developer. We integrate the various metrics using an economic model for the business value of a development project. The model is based on the standard concept of net present value. If the market pressure is strong, the faster time to market of pair programming can balance the increased personnel cost. For a realistic sample project, we analyze the complex interplay between the various metrics integrated in our model. We study for which combinations of the market pressure and pair speed advantage the value of the pair programming project exceeds the value of the corresponding conventional project. When time to market is the decisive factor and programmer pairs are much faster than single developers, pair programming can increase the value of a project, but there also are realistic scenarios where the opposite is true. Such results clearly show that we must consider metrics from different categories in combination to assess the cost-benefit relation of pair programming. © 2003 IEEE.},
author_keywords={Cost benefit analysis;  Displays;  Electric breakdown;  Keyboards;  Mice;  Personnel;  Productivity;  Programming profession;  Time to market;  Velocity measurement},
keywords={Commerce;  Concurrent engineering;  Cost effectiveness;  Costs;  Display devices;  Electric breakdown;  Personnel;  Productivity;  Software design;  Typewriter keyboards;  Velocity measurement, Breakdown structures;  Development project;  EXtreme Programming;  Mice;  Programming profession;  Realistic scenario;  Team productivities;  Time to market, Cost benefit analysis},
}

@CONFERENCE{Germain2003224,
author={Germain, É. and Robillard, P.N.},
title={What cognitive activities are performed in student projects?},
journal={Software Engineering Education Conference, Proceedings},
year={2003},
volume={2003-January},
pages={224-231},
doi={10.1109/CSEE.2003.1191381},
art_number={1191381},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941203531&doi=10.1109%2fCSEE.2003.1191381&partnerID=40&md5=b409b437f02e6b82777acfc86e80af38},
abstract={Software processes are being increasingly taught to software engineering students. Previous studies have however shown that actual activities performed in the course of student projects differ widely from what students had been taught. This study defines a new cognitive activity classification scheme that has been used to record effort spent by six student teams producing parallel implementations of the same software requirements specification. Three of the teams used a process based on the UPEDU, a teaching-oriented process derived from the Rational Unified Process. The other three teams used a process built around the principles of the extreme programming (XP) methodology. Results show that coding-related activities dominate the effort distribution for all the teams. Also, variations in the relative emphasis put on each activity between processes are low and limited to a small number of activities. The study provides lessons that may be useful when evaluating the importance of specific software processes. © 2003 IEEE.},
author_keywords={Collaborative software;  Communication effectiveness;  Costs;  Decision making;  Dynamic programming;  Education;  Inspection;  Production;  Software engineering;  Software quality},
keywords={Computer software selection and evaluation;  Cost engineering;  Costs;  Decision making;  Dynamic programming;  Education;  Engineering education;  Groupware;  Inspection;  Production;  Software engineering;  Teaching, Cognitive activities;  Collaborative softwares;  Communication effectiveness;  Parallel implementations;  Rational Unified Process;  Software engineering students;  Software Quality;  Software requirements specifications, Students},
}

@CONFERENCE{Derbier2003125,
author={Derbier, G.},
title={Agile development in the old economy},
journal={Proceedings of the Agile Development Conference, ADC 2003},
year={2003},
pages={125-131},
doi={10.1109/ADC.2003.1231462},
art_number={1231462},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-28344438212&doi=10.1109%2fADC.2003.1231462&partnerID=40&md5=1f58530c661b2827518050177b36bea2},
abstract={As part of the delivery an automated hub for a postal operator, the Solystic company has to build a complex and feature rich information system that supports a highly automated process with multiple intricate sub-processes and exceptions. The effort has several challenges: 1) it is business critical for the customer, and the output of the project will give the customer a leading position; 2) it is the first time Solystic is managing a complete system project, although its mother company Northrop Grumman had previous experience of this business; 3) the program is one of the first business of the Solystic company in the international field; 4) it is a fixed price, fixed time contract with a short time frame. To face all these challenges, the software development group in charge of the information system has adopted a number of agile practices and techniques to manage the project. The major project settings are adapted from Alistair Cockburn's crystal set of methodologies, SCRUM and Jim Coplien's work on organizational patterns. We present the findings and lessons learned by the team and its manager. © 2003 IEEE.},
author_keywords={Automation;  Companies;  Conference management;  Contracts;  Information systems;  Management information systems;  Postal services;  Programming;  Project management;  Software development management},
keywords={Agile manufacturing systems;  Automation;  Contracts;  Fighter aircraft;  Human resource management;  Industry;  Information systems;  Management information systems;  Mathematical programming;  Postal services;  Project management;  Software design;  Software engineering, Agile development;  Agile practices;  Automated process;  Conference management;  Northrop Grumman;  Organizational pattern;  Short time frames;  Software development management, Information management},
}

@CONFERENCE{Wong2002258,
author={Wong, K. and Tilley, S.},
title={Connecting technical communicators with technical developers},
journal={ACM SIGDOC Annual International Conference on Computer Documentation, Proceedings},
year={2002},
pages={258-262},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0037966346&partnerID=40&md5=a73e697a88983ed67f90e61009e8190e},
abstract={Most program documentation is written by developers for developers. This often results in documentation that is less than satisfactory in terms of quality, relevance, and longevity of information to developers who will be responsible for subsequent enhancements to the product. This paper outlines an approach to producing effective program documentation by connecting technical communicators and technical developers in a pair-wise manner. This approach is modeled on the development methodology advocated by eXtreme Programming (XP). Programmers who adopt XP work in pairs, and thus are in constant communication with one another. By pairing a technical communicator with a technical developer, many of the same benefits can be gained. Rather than eschewing program documentation, the paired communicator and developer instead produce high-quality documentation during the development process, with little extra effort, resulting in a more maintainable software application. The paper also describes some recent experiences in pairing a senior person and a junior person in communicator and developer roles to enhance program documentation of a long-lived and popular research application.},
author_keywords={Documentation;  Pair programming;  Program understanding;  Software engineering;  Technical communication},
keywords={Computer software maintenance;  Computer systems programming;  Systems engineering;  Technical writing, Program understanding, System program documentation},
}

@ARTICLE{Börstler200242,
author={Börstler, J. and Carrington, D. and Hislop, G.W. and Lisack, S. and Olson, K. and Williams, L.},
title={Teaching PSP: Challenges and lessons learned},
journal={IEEE Software},
year={2002},
volume={19},
number={5},
pages={42-48},
doi={10.1109/MS.2002.1032853},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0036732470&doi=10.1109%2fMS.2002.1032853&partnerID=40&md5=18b7801e1adcf1f2524b89ac16dbeea7},
abstract={The Personal Software Process (PSP) was developed and first taught as a graduate course to help make software engineers to become better software engineers. To date, the experiences and experiments on teaching PSP provide guidance and advice for others interested in introducing the PSP into their software engineering courses.},
keywords={Extreme programming;  Personal software process;  Software engineering course;  Software metrics;  Software quality, Adaptive algorithms;  C (programming language);  Computational complexity;  Curricula;  Knowledge acquisition;  Program documentation;  Teaching, Software engineering},
}

@ARTICLE{Hieatt200260,
author={Hieatt, E. and Mee, R.},
title={Going faster: Testing the Web application},
journal={IEEE Software},
year={2002},
volume={19},
number={2},
pages={60-65},
doi={10.1109/52.991333},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0036496386&doi=10.1109%2f52.991333&partnerID=40&md5=d2ded5777955bc2763e02d286a7abdb0},
abstract={An overview is given on test-first design and the creation of testable code for Web applications. It is explained how testing has been critical to building Evant's application at speed while maintaining a high degree of quality.},
keywords={Enterprise Javabeans;  Extreme programming;  Web application, Program debugging;  Quality assurance;  Requirements engineering;  Software engineering;  User interfaces;  Value engineering;  Web browsers, Program diagnostics},
}

@ARTICLE{Maurer200286,
author={Maurer, F. and Martel, S.},
title={Extreme programming: Rapid development for web-based applications},
journal={IEEE Internet Computing},
year={2002},
volume={6},
number={1},
pages={86-90},
doi={10.1109/4236.989006},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0036187252&doi=10.1109%2f4236.989006&partnerID=40&md5=285679a8f627e1fa5c3720a63a011d15},
abstract={As software organizations continue to move toward Web-based systems development, they often assign or outsource such projects to small teams of highly qualified developers. Such demands led to the increase of the popularity of agile software processes, which let teams increase development productivity while maintaining software quality and flexibility. Agile processes like extreme programming (XP), Scrum, Crystal, and adaptive software development aim to increase a software organization's responsiveness while decreasing development overhead. This paper presents an overview of the philosophy and practice behind XP, which is currently the most popular agile methodology.},
keywords={Computer crime;  Computer software selection and evaluation;  Customer satisfaction;  Electronic commerce;  HTML;  Java programming language;  Program documentation;  Project management;  Software engineering, Agile software processes;  Automated test drivers;  Executable code;  Extreme programming;  Software flexibility;  Software quality;  Software testing, World Wide Web},
}

@ARTICLE{Hunt2002100,
author={Hunt, A. and Thomas, D.},
title={Zero-tolerance construction},
journal={IEEE Software},
year={2002},
volume={19},
number={5},
pages={100-102},
doi={10.1109/MS.2002.1032865},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0036732558&doi=10.1109%2fMS.2002.1032865&partnerID=40&md5=f1c171a0f707b89ffe76fa8a6d16c552},
abstract={Software construction is addressed, focusing on the issue that major catastrophic losses can be prevented by focusing on preventing the triggering mechanism from occurring. The No Broken Windows concept is introduced as a solution to this problem.},
keywords={Computer programming;  Computer software;  Computer software maintenance;  Requirements engineering;  User interfaces, Extreme programming;  Pragmatic programming;  Requirements analysis, Software engineering},
}

@CONFERENCE{Nawrocki2002303,
author={Nawrocki, J. and Jasiński, M. and Walter, B. and Wojciechowski, A.},
title={Extreme programming modified: Embrace requirements engineering practices},
journal={Proceedings of the IEEE International Conference on Requirements Engineering},
year={2002},
volume={2002-January},
pages={303-310},
doi={10.1109/ICRE.2002.1048543},
art_number={1048543},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84948957483&doi=10.1109%2fICRE.2002.1048543&partnerID=40&md5=655c2acc3a389ef6df8e6910218ae206},
abstract={Extreme programming (XP) is an agile (lightweight) software development methodology and it becomes more and more popular. XP proposes many interesting practices, but it also has some weaknesses. From the software engineering point of view the most important issues are: maintenance problems resulting from very limited documentation (XP relies on code and test cases only), and lack of wider perspective of a system to be built. Moreover, XP assumes that there is only one customer representative. In many cases there are several representatives (each one with his own view of the system and different priorities) and then some XP practices should be modified. In the paper we assess XP from two points of view: the capability maturity model and the Sommerville-Sawyer model (1997). We also propose how to introduce documented requirements to XP, how to modify the planning game to allow many customer representatives and how to get a wider perspective of a system to be built at the beginning of the project lifecycle. © 2002 IEEE.},
author_keywords={Automatic testing;  Capability maturity model;  Documentation;  Electronic mail;  Oral communication;  Programming profession;  Software engineering;  Software maintenance;  Software testing;  System testing},
keywords={Automatic testing;  Computer programming;  Computer software maintenance;  Electronic mail;  Professional aspects;  Requirements engineering;  Software design;  Software engineering;  System program documentation, Capability maturity models;  Customer representative;  EXtreme Programming;  Maintenance Problem;  Oral communication;  Programming profession;  Software development methodologies;  System testing, Software testing},
}

@ARTICLE{Leonardi2002420,
author={Leonardi, M.C. and Leite, J.C.S.P.},
title={Using business rules in extreme requirements},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2002},
volume={2348},
pages={420-435},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-33845613938&partnerID=40&md5=e5352ad6b957a819240cc58182521d56},
abstract={Extreme Requirements (XR) is a proposal that tries to improve the quality of Extreme Programming (XP). XP is a well known agile method for software production. XP key elements are: little documentation, simplicity, analysis as constant activity, evolutionary design, integration and daily test. XR defines a requirements strategy that can be coupled with XP. In this article, we present an XR business rules based process. Our process is oriented to the customer, based on natural language, facilitating construction and validation. One of the strongest aspects of our proposed process is communication with customers, making them active participants in the software production process. © Springer-Verlag Berlin Heidelberg 2002.},
keywords={Systems engineering, Agile methods;  Business rules;  Evolutionary design;  EXtreme Programming;  Key elements;  Natural languages;  Software production, Information systems},
}

@ARTICLE{Cheon2002231,
author={Cheon, Y. and Leavens, G.T.},
title={A simple and practical approach to unit testing: The JML and JUnit way},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2002},
volume={2374},
pages={231-255},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944059308&partnerID=40&md5=1999ec43e5d038ed1028f2b6fcdcb584},
abstract={Writing unit test code is labor-intensive, hence it is often not done as an integral part of programming. However, unit testing is a practical approach to increasing the correctness and quality of software; for example, the Extreme Programming approach relies on frequent unit testing. In this paper we present a new approach that makes writing unit tests easier. It uses a formal specification language’s runtime assertion checker to decide whether methods are working correctly, thus automating the writing of unit test oracles. These oracles can be easily combined with hand-written test data. Instead of writing testing code, the programmer writes formal specifications (e.g., pre- and postconditions). This makes the programmer’s task easier, because specifications are more concise and abstract than the equivalent test code, and hence more readable and maintainable. Furthermore, by using specifications in testing, specification errors are quickly discovered, so the specifications are more likely to provide useful documentation and inputs to other tools. We have implemented this idea using the Java Modeling Language (JML) and the JUnit testing framework, but the approach could be easily implemented with other combinations of formal specification languages and unit test tools. © Springer-Verlag Berlin Heidelberg 2002.},
keywords={Codes (symbols);  Computational linguistics;  Formal specification;  Java programming language;  Modeling languages;  Software testing;  Specification languages;  Specifications;  Testing, EXtreme Programming;  Java Modeling Language;  Labor intensive;  New approaches;  Quality of softwares;  Runtime assertion;  Testing framework;  Writing units, Object oriented programming},
}

@ARTICLE{Auer2002287,
author={Auer, K. and Jeffries, R. and Canna, J. and Alleman, G.B. and Crispin, L. and Gregory, J.},
title={Are testers extinct? How can testers contribute to XP teams?},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2002},
volume={2418},
pages={287},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944237575&partnerID=40&md5=4f10188535aa6b79500cc8cbb3361cb9},
abstract={There are lots of success stories for XP teams where testers made a significant contribution. There are lots of success stories for XP teams that didn’t have an official tester. There are some horror stories of so-called XP teams who didn’t have testers and didn’t do a scrap of acceptance testing. As more organizations try XP, there are a lot of teams out there wondering if they need testers, and a lot of testers who are suddenly members of XP teams wondering what the heck they are supposed to do. This is relevant to anyone on an XP team, any QA/test professionals who are interested in doing XP, anyone in a software development role who is considering using XP. The current Extreme Programming publications don’t really define how an XP tester can contribute to the project. What should testers do? When should they do it? How should they do it? Is there even a place for testing and quality assurance professionals on XP teams? Can any tester be an XP tester? See http://www.testers.org for more information. © Springer-Verlag Berlin Heidelberg 2002.},
keywords={Quality assurance;  Software design, Acceptance testing;  EXtreme Programming;  Horror stories, Acceptance tests},
}

@CONFERENCE{Larman2002676,
author={Larman, C. and Paulisch, F.},
title={Pre-workshop summary: Workshop on iterative, adaptive, and agile processes},
journal={Proceedings - International Conference on Software Engineering},
year={2002},
pages={676-678},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0036036787&partnerID=40&md5=48597c436fc9556cbcb820dec325f55e},
abstract={Practitioners and researchers were invited in the application of iterative, adaptive, and agile processes. These processes include those favoring detailed or large-scale process descriptions to those favoring minimalist descriptions, from process evangelists to process agnostics, from expert developers to business managers, from domains where speed is the top priority to domains where quality or verifiability are the top priority. This paper aims to promote a deep and shared understanding of these processes, identify the factors for their successful adoption, and share relevant research results discover lines of research to further the discipline.},
keywords={Computer applications;  Program documentation;  Software engineering;  Technical presentations, Extreme programming;  Unified process, Computer programming},
}

@CONFERENCE{Poole2001301,
author={Poole, C.J. and Murphy, T. and Huisman, J.W. and Higgins, A.},
title={Extreme maintenance},
journal={IEEE International Conference on Software Maintenance, ICSM},
year={2001},
pages={301-309},
doi={10.1109/ICSM.2001.972743},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77956616032&doi=10.1109%2fICSM.2001.972743&partnerID=40&md5=3ef8af127691621b8a73205b8a5a0585},
abstract={This paper examines some of the problems experienced by IONA Technology's Orbix Generation 3 maintenance and enhancement team and how the adoption of Extreme Programming has further improved the team's ability to delivery quality support and enhancements to the products they work on. The issues identified and discussed are common issues for companies moving from the startup pressures of time to market to those related to supporting large numbers of customers with bug fixes and enhancements to existing applications in existing deployment scenarios. The paper briefly reviews the history of the team's development and maintenance practices prior to the implementation of the Extreme Programming practices. It then focuses on how Extreme Programming was implemented and used to resolve some of the identified problems. Results are detailed as both a qualitative view on the Extreme Programming project and the impacts on morale along with some of the quantitative analysis related to productivity and customer satisfaction. This experience has shown that Extreme programming is a viable and very successful model for teams involved in pure maintenance and enhancement of a legacy code base.},
author_keywords={Programming;  Software;  Software engineering;  Software maintenance},
keywords={Code entropy;  Extreme maintenance;  Extreme programming;  Software enhancement;  Software Package Orbix, Computer simulation;  Computer systems programming;  Customer satisfaction;  Interoperability;  Legacy systems;  Middleware;  Productivity;  Program debugging;  Software engineering, Computer software maintenance},
}

@ARTICLE{Paulk200119,
author={Paulk, M.C.},
title={Extreme programming from a CMM perspective},
journal={IEEE Software},
year={2001},
volume={18},
number={6},
pages={19-26},
doi={10.1109/52.965798},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0035506385&doi=10.1109%2f52.965798&partnerID=40&md5=846c9549e4e2b88eb5645daf9e6615ae},
abstract={Extreme Programming (XP) is a disciplined process and now widely used. An overview is given on both XP and Software Capability Maturity Model (SW-CMM). It is shown how XP can help organizations realize the SW-CMM goals. An attempt is also made to characterize XP from a SW-CMM perspective.},
keywords={Capability maturity model;  Extreme programming;  Software product engineering;  Software quality assurance;  Software quality management, Computer simulation;  Information management;  Planning;  Project management;  Requirements engineering;  Software engineering;  Total quality management, Computer software},
}

@ARTICLE{Grenning200127,
author={Grenning, J.},
title={Launching extreme programming at a process-intensive company},
journal={IEEE Software},
year={2001},
volume={18},
number={6},
pages={27-33},
doi={10.1109/52.965799},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0035505410&doi=10.1109%2f52.965799&partnerID=40&md5=665895a97ff0c8f91f89e677feb2755b},
abstract={A company that has traditional formal processes launched a project using many Extreme Programming practices. In particular, the project was an embedded-systems application running on Windows NT and was part of a network of machines that had to collaborate to provide services. This paper discusses how XP was proposed to management, how the project seed began and grew, and some of the issues the team faced during its first six months.},
keywords={Documentation;  Extreme programming;  Process intensive company, Computer programming;  Computer simulation;  Embedded systems;  Graphical user interfaces;  Job satisfaction;  Productivity;  Software engineering;  Total quality management, Computer software},
}

@CONFERENCE{Müller2001537,
author={Müller, M.M. and Ticky, W.F.},
title={Case study: Extreme programming in a university environment},
journal={Proceedings - International Conference on Software Engineering},
year={2001},
pages={537-544},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0035000466&partnerID=40&md5=9d15cb7683f27b7338b398e5424d5227},
abstract={Extreme Programming (XP) is a new and controversial software process for small teams. A practical training course at the university of Karlsruhe led to the following observations about the key practices of XP. First, it is unclear how to reap the potential benefits of pair programming, although pair programming produces high quality code. Second, designing in small increments appears problematic but ensures rapid feedback about the code. Third, while automated testing is helpful, writing test cases before coding is a challenge. And last, it is difficult to implement XP without coaching. This paper also provides some guidelines for those starting out with XP.},
keywords={Curricula;  Programming theory;  Quality function deployment;  Requirements engineering, Extreme programming;  High quality code;  Pair programming, Software engineering},
}

@CONFERENCE{Succi200181,
author={Succi, G. and Stefanovic, M. and Pedrycz, W.},
title={Quantitative assessment of extreme programming practices},
journal={Canadian Conference on Electrical and Computer Engineering},
year={2001},
volume={1},
pages={81-86},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0034838648&partnerID=40&md5=7e32e256620f94ae821d1391d3c6da9b},
abstract={Some anecdotal evidence demonstrates success of the extreme programming practice in a portion of the software industry. It has also been argued that pair programming, as a part of the extreme programming process, yields higher quality software products in less time. On the other hand, these principles are sometimes questioned with respect to resource allocation and management issues. Although precise information about benefits and costs of the extreme programming practice represents a critical guideline for improvement of software quality, there has been little work on the subject beyond subjective reports and a study in an academic environment. We propose an experimental framework to quantify benefits and costs of the pair programming practice and compare design aspects of the resulting software products and their defect behavior. For this purpose, we use a set of object-oriented metrics and software reliability growth models based on service requests.},
keywords={Computer aided software engineering;  Error detection;  Mathematical models;  Reliability theory;  Resource allocation;  Statistical methods, Object-oriented metrics, Object oriented programming},
}

@ARTICLE{Poole200142,
author={Poole, C. and Huisman, J.W.},
title={Using extreme programming in a maintenance environment},
journal={IEEE Software},
year={2001},
volume={18},
number={6},
pages={42-50},
doi={10.1109/52.965801},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0035506882&doi=10.1109%2f52.965801&partnerID=40&md5=274588f865e21c1d418dbf7aec97526b},
abstract={An overview is given on the development and, more importantly, on maintaining the older version, which represents the Corba specification's early evolution. The inherent problems of code entropy due to specification instability and time-to-market pressures are reviewed.},
keywords={Common object request broker architecture;  Pair programming;  Software Package Orbix, Computer architecture;  Computer programming;  Computer programming languages;  Computer selection and evaluation;  Computer software maintenance;  Computer workstations;  Standards;  User interfaces;  World Wide Web, Software engineering},
}

@ARTICLE{Hruby200022,
author={Hruby, P.},
title={Designing customizable methodologies},
journal={JOOP - Journal of Object-Oriented Programming},
year={2000},
volume={13},
number={8},
pages={22-31},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0003165109&partnerID=40&md5=868f230f6639a028e4dc32521e6f6045},
abstract={Have you ever chosen a development process, customized it to fit your organization, culture, and problem domain and then later faced a number of problems to which your method did not fit? Instead of specifying a firm development method, it might help to describe a process framework and customize it to fit each specific development problem. I describe a framework for specification of development processes that considers management and software development artifacts as objects, and evolution as collaborations between them. Such an 00 process definition can manage the complexity of a development process in a better way than a description based on workflow. I discuss process-framework features with an eye toward approaches such as Fusion, Rational Unified Process, Catalysis, and Extreme Programming.},
}

@ARTICLE{Brooks2000269,
author={Brooks, A. and Utbult, F. and Mulligan, C. and Jeffery, R.},
title={Early lifecycle work: influence of individual characteristics, methodological constraints, and interface constraints},
journal={Empirical Software Engineering},
year={2000},
volume={5},
number={3},
pages={269-285},
doi={10.1023/A:1026594716872},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-0034318272&doi=10.1023%2fA%3a1026594716872&partnerID=40&md5=b2459df17c91ac2d8538c1c4f68a118f},
abstract={This paper reports the results of an experiment undertaken for the CADPRO (Constraints And the Decision PROject) project. Subjects with varied experience produced data flow diagrams (DFDs) using a DFD tool generated by CASEMaker, a meta-CASE tool. Half the subjects received routine notice of instances of internal (as opposed to hierarchical) methodological constraint violations via an unobtrusive window whilst the other half did not. The DFD tool automatically recorded subjects' delivery and constraint profiles. Video records, observer notes, and subject debriefings were also used to yield other performance data. While evidence was found in support of the research model underpinning the CADPRO project, the model needs to be revised to take into account the affects of human-computer interface constraints and the different speeds with which people work. We learnt an important lesson about subject randomisation, which is not to assume that all subjects can be treated alike if they share the minimum necessary experience thought required of the problem. We believe it is important for every subject-based experiment to consider and understand the performance of individuals. Because of the complexity of constraint environments in CASE tools we also conclude that studies comparing extreme programming approaches with conventional CASE tool approaches are needed to help determine if the struggle to understand the constraint environment at a high level of abstraction is worthwhile or not. Further experiments, possibly replication variants of this one, are needed to help validate our interpretations.},
keywords={Computational complexity;  Computer aided software engineering;  Computer programming;  Constraint theory;  Data flow analysis;  Engineering research;  Human computer interaction;  User interfaces, Data flow diagrams;  Human computer interface;  Interface constraints;  Software Package CASEMaker, Computer software selection and evaluation},
}
